{"/file.ts":{"outputFiles":[{"name":"/file.js","writeByteOrderMark":false,"text":"define([\"require\", \"exports\", \"/std___std_all\"], function (require, exports, std___std_all_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var globalVarGet = std___std_all_1.globalVarGet;\n});\n"}],"emitSkipped":false,"diagnostics":[]},"/std_math.ts":{"outputFiles":[{"name":"/std_math.js","writeByteOrderMark":false,"text":"var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\ndefine([\"require\", \"exports\", \"./static-math\"], function (require, exports, static_math_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.bitcast = exports.ddyCoarse = exports.ddxCoarse = exports.ddyFine = exports.ddxFine = exports.ddy = exports.ddx = exports.discard = exports.workgroupUniformLoad = exports.storageBarrier = exports.workgroupBarrier = exports.atomic = exports.atomic_internal = exports.FM = exports.intifyVector = exports.swizzle = exports.testDocComment = exports.makeVector = exports.not = exports.or = exports.and = exports.gte = exports.gt = exports.lte = exports.lt = exports.neq = exports.eq = exports.saturate = exports.clamp = exports.max = exports.min = exports.smoothstep = exports.step = exports.radians = exports.degrees = exports.refract = exports.reflect = exports.normalize = exports.distance = exports.dist = exports.length = exports.bilerp = exports.lerp = exports.dot = exports.cross = exports.pingpong = exports.rand3 = exports.rand2 = exports.rand = exports.wrap = exports.frac = exports.inversesqrt = exports.sqrt = exports.log10 = exports.log2 = exports.log = exports.exp = exports.atanh = exports.asinh = exports.acosh = exports.tanh = exports.sinh = exports.cosh = exports.atan2 = exports.atan = exports.asin = exports.acos = exports.tan = exports.sin = exports.cos = exports.sign = exports.round = exports.ceil = exports.floor = exports.abs = exports.positive = exports.negate = exports.bitnot = exports.rshift = exports.lshift = exports.bitxor = exports.bitor = exports.bitand = exports.mod = exports.pow = exports.div = exports.mul = exports.transpose = exports.inverse = exports.sub = exports.add = exports.uint8 = exports.uint4 = exports.uint3 = exports.uint2 = exports.int4 = exports.int3 = exports.int2 = exports.float4 = exports.float3 = exports.float2 = exports.uint = exports.int = exports.float = exports.float4x4 = exports.float3x3 = exports.float2x2 = void 0;\n    function isVector(v) {\n        return Array.isArray(v);\n    }\n    function isScalar(v) {\n        return typeof v === 'number';\n    }\n    function isMatrix(v) {\n        return !!v.__matrix;\n    }\n    /** @shadeup=glsl(mat2) @shadeup=wgsl(mat2x2<f32>) */\n    function float2x2() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var arr = [0, 0, 0, 0];\n        if (args.length === 4) {\n            arr = __spreadArray([], args, true);\n        }\n        applyMatrix2x2Methods(arr);\n        return arr;\n    }\n    exports.float2x2 = float2x2;\n    /** @shadeup=glsl(mat3) @shadeup=wgsl(mat3x3<f32>) */\n    function float3x3() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var arr = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n        if (args.length === 9) {\n            arr = __spreadArray([], args, true);\n        }\n        applyMatrix3x3Methods(arr);\n        return arr;\n    }\n    exports.float3x3 = float3x3;\n    function applyMatrix4x4Methods(arr) {\n        arr.__matrix = 4;\n        arr.__index = function (index) {\n            var out_arr = [arr[index * 4], arr[index * 4 + 1], arr[index * 4 + 2], arr[index * 4 + 3]];\n            out_arr.__index = function (index_inner) {\n                return out_arr[index_inner];\n            };\n            out_arr.__index_assign = function (index_inner, value) {\n                arr[index * 4 + index_inner] = value;\n            };\n            out_arr.__index_assign_op = function (op_fn, index_inner, value) {\n                arr[index * 4 + index_inner] = op_fn(arr[index * 4 + index_inner], value);\n            };\n            return out_arr;\n        };\n        arr.__index_assign = function (index, value) {\n            arr[index * 4] = value[0];\n            arr[index * 4 + 1] = value[1];\n            arr[index * 4 + 2] = value[2];\n            arr[index * 4 + 3] = value[3];\n        };\n        arr.__index_assign_op = function (op_fn, index, value) {\n            arr[index * 4] = op_fn(arr[index * 4], value[0]);\n            arr[index * 4 + 1] = op_fn(arr[index * 4 + 1], value[1]);\n            arr[index * 4 + 2] = op_fn(arr[index * 4 + 2], value[2]);\n            arr[index * 4 + 3] = op_fn(arr[index * 4 + 3], value[3]);\n        };\n    }\n    window.applyMatrix4x4Methods = applyMatrix4x4Methods;\n    function applyMatrix3x3Methods(arr) {\n        arr.__matrix = 3;\n        arr.__index = function (index) {\n            var out_arr = [arr[index * 3], arr[index * 3 + 1], arr[index * 3 + 2]];\n            out_arr.__index = function (index_inner) {\n                return out_arr[index_inner];\n            };\n            out_arr.__index_assign = function (index_inner, value) {\n                arr[index * 3 + index_inner] = value;\n            };\n            out_arr.__index_assign_op = function (op_fn, index_inner, value) {\n                arr[index * 3 + index_inner] = op_fn(arr[index * 3 + index_inner], value);\n            };\n            return out_arr;\n        };\n        arr.__index_assign = function (index, value) {\n            arr[index * 3] = value[0];\n            arr[index * 3 + 1] = value[1];\n            arr[index * 3 + 2] = value[2];\n        };\n        arr.__index_assign_op = function (op_fn, index, value) {\n            arr[index * 3] = op_fn(arr[index * 3], value[0]);\n            arr[index * 3 + 1] = op_fn(arr[index * 3 + 1], value[1]);\n            arr[index * 3 + 2] = op_fn(arr[index * 3 + 2], value[2]);\n        };\n    }\n    window.applyMatrix3x3Methods = applyMatrix3x3Methods;\n    function applyMatrix2x2Methods(arr) {\n        arr.__matrix = 2;\n        arr.__index = function (index) {\n            var out_arr = [arr[index * 2], arr[index * 2 + 1]];\n            out_arr.__index = function (index_inner) {\n                return out_arr[index_inner];\n            };\n            out_arr.__index_assign = function (index_inner, value) {\n                arr[index * 2 + index_inner] = value;\n            };\n            out_arr.__index_assign_op = function (op_fn, index_inner, value) {\n                arr[index * 2 + index_inner] = op_fn(arr[index * 2 + index_inner], value);\n            };\n            return out_arr;\n        };\n        arr.__index_assign = function (index, value) {\n            arr[index * 2] = value[0];\n            arr[index * 2 + 1] = value[1];\n        };\n        arr.__index_assign_op = function (op_fn, index, value) {\n            arr[index * 2] = op_fn(arr[index * 2], value[0]);\n            arr[index * 2 + 1] = op_fn(arr[index * 2 + 1], value[1]);\n        };\n    }\n    window.applyMatrix2x2Methods = applyMatrix2x2Methods;\n    /** @shadeup=glsl(mat4) @shadeup=wgsl(mat4x4<f32>) */\n    function float4x4() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var arr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        if (args.length === 16) {\n            arr = __spreadArray([], args, true);\n        }\n        applyMatrix4x4Methods(arr);\n        return arr;\n    }\n    exports.float4x4 = float4x4;\n    /** @shadeup=glsl(float) @shadeup=wgsl(f32) */\n    function float(x) {\n        return x;\n    }\n    exports.float = float;\n    /** @shadeup=glsl(int) @shadeup=wgsl(i32) */\n    function int(x) {\n        return (x | 0);\n    }\n    exports.int = int;\n    /** @shadeup=glsl(uint) @shadeup=wgsl(u32) */\n    function uint(x) {\n        return (x >>> 0);\n    }\n    exports.uint = uint;\n    /** @shadeup=glsl(float2) @shadeup=wgsl(vec2<f32>) */\n    function float2() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return args.flat();\n    }\n    exports.float2 = float2;\n    /** @shadeup=glsl(float3) @shadeup=wgsl(vec3<f32>) */\n    function float3() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return args.flat();\n    }\n    exports.float3 = float3;\n    /** @shadeup=glsl(float4) @shadeup=wgsl(vec4<f32>) */\n    function float4() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return args.flat();\n    }\n    exports.float4 = float4;\n    /** @shadeup=glsl(int2) @shadeup=wgsl(vec2<i32>) */\n    function int2() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return args.flat().map(function (x) { return x | 0; });\n    }\n    exports.int2 = int2;\n    /** @shadeup=glsl(int3) @shadeup=wgsl(vec3<i32>) */\n    function int3() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return args.flat().map(function (x) { return x | 0; });\n    }\n    exports.int3 = int3;\n    /** @shadeup=glsl(int4) @shadeup=wgsl(vec4<i32>) */\n    function int4() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return args.flat().map(function (x) { return x | 0; });\n    }\n    exports.int4 = int4;\n    function uint2() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return args.flat().map(function (x) { return x >>> 0; });\n    }\n    exports.uint2 = uint2;\n    function uint3() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return args.flat().map(function (x) { return x >>> 0; });\n    }\n    exports.uint3 = uint3;\n    function uint4() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return args.flat().map(function (x) { return x >>> 0; });\n    }\n    exports.uint4 = uint4;\n    function uint8(x) {\n        return ((x >>> 0) & 0xff);\n    }\n    exports.uint8 = uint8;\n    function componentMath(a, b, f) {\n        var aIsScalar = isScalar(a);\n        var bIsScalar = isScalar(b);\n        if (aIsScalar && bIsScalar) {\n            return f(a, b);\n        }\n        if (!aIsScalar && !bIsScalar) {\n            if (a.length !== b.length) {\n                throw new Error('Cannot perform component-wise math on vectors of different lengths');\n            }\n            // return a.map((a, i) => f(a, b[i])) as vector;\n            if (a.length == 2) {\n                return [f(a[0], b[0]), f(a[1], b[1])];\n            }\n            else if (a.length == 3) {\n                return [f(a[0], b[0]), f(a[1], b[1]), f(a[2], b[2])];\n            }\n            else if (a.length == 4) {\n                return [f(a[0], b[0]), f(a[1], b[1]), f(a[2], b[2]), f(a[3], b[3])];\n            }\n        }\n        else if (!aIsScalar && bIsScalar) {\n            if (a.length == 2) {\n                return [f(a[0], b), f(a[1], b)];\n            }\n            else if (a.length == 3) {\n                return [f(a[0], b), f(a[1], b), f(a[2], b)];\n            }\n            else if (a.length == 4) {\n                return [f(a[0], b), f(a[1], b), f(a[2], b), f(a[3], b)];\n            }\n        }\n        else if (!bIsScalar && aIsScalar) {\n            if (b.length == 2) {\n                return [f(a, b[0]), f(a, b[1])];\n            }\n            else if (b.length == 3) {\n                return [f(a, b[0]), f(a, b[1]), f(a, b[2])];\n            }\n            else if (b.length == 4) {\n                return [f(a, b[0]), f(a, b[1]), f(a, b[2]), f(a, b[3])];\n            }\n        }\n        throw new Error('Cannot perform component-wise math on a scalar and a vector');\n    }\n    function componentMathSingular(a, f) {\n        if (isScalar(a)) {\n            return f(a);\n        }\n        if (isVector(a)) {\n            return a.map(function (a, i) { return f(a); });\n        }\n        throw new Error('Cannot perform component-wise math on a scalar and a vector');\n    }\n    function cCall(cb, a, b) {\n        return componentMath(a, b, function (a, b) { return a + b; });\n    }\n    function componentOp(cb) {\n        return function (a, b) { return componentMath(a, b, cb); };\n    }\n    function componentOpMatch(cb) {\n        return function (a, b) { return componentMath(a, b, cb); };\n    }\n    function componentOpSingular(cb) {\n        return function (a) { return componentMathSingular(a, cb); };\n    }\n    function componentOpSingularFloat(cb) {\n        return function (a) { return componentMathSingular(a, cb); };\n    }\n    /** @shadeup=univ(!$0$ + $1$)*/\n    var add = function (a, b) {\n        if (typeof a === 'string' && typeof b === 'string') {\n            return \"\".concat(a).concat(b);\n        }\n        else {\n            var addOp = componentOp(function (a, b) { return a + b; });\n            var v = addOp(a, b);\n            return v;\n        }\n    };\n    exports.add = add;\n    /** @shadeup=univ(!$0$ - $1$)*/\n    exports.sub = componentOp(function (a, b) { return a - b; });\n    function matrixMul(a, b) {\n        // Multiply two square matrices of the same dimension row-major\n        var dimension = a.__matrix;\n        var out;\n        if (dimension === 2) {\n            out = float2x2();\n        }\n        else if (dimension === 3) {\n            out = float3x3();\n        }\n        else if (dimension === 4) {\n            var a00 = a[0 * 4 + 0];\n            var a01 = a[0 * 4 + 1];\n            var a02 = a[0 * 4 + 2];\n            var a03 = a[0 * 4 + 3];\n            var a10 = a[1 * 4 + 0];\n            var a11 = a[1 * 4 + 1];\n            var a12 = a[1 * 4 + 2];\n            var a13 = a[1 * 4 + 3];\n            var a20 = a[2 * 4 + 0];\n            var a21 = a[2 * 4 + 1];\n            var a22 = a[2 * 4 + 2];\n            var a23 = a[2 * 4 + 3];\n            var a30 = a[3 * 4 + 0];\n            var a31 = a[3 * 4 + 1];\n            var a32 = a[3 * 4 + 2];\n            var a33 = a[3 * 4 + 3];\n            var b00 = b[0 * 4 + 0];\n            var b01 = b[0 * 4 + 1];\n            var b02 = b[0 * 4 + 2];\n            var b03 = b[0 * 4 + 3];\n            var b10 = b[1 * 4 + 0];\n            var b11 = b[1 * 4 + 1];\n            var b12 = b[1 * 4 + 2];\n            var b13 = b[1 * 4 + 3];\n            var b20 = b[2 * 4 + 0];\n            var b21 = b[2 * 4 + 1];\n            var b22 = b[2 * 4 + 2];\n            var b23 = b[2 * 4 + 3];\n            var b30 = b[3 * 4 + 0];\n            var b31 = b[3 * 4 + 1];\n            var b32 = b[3 * 4 + 2];\n            var b33 = b[3 * 4 + 3];\n            return float4x4(b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30, b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31, b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32, b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33, b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30, b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31, b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32, b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33, b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30, b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31, b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32, b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33, b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30, b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31, b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32, b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33);\n            out = float4x4();\n        }\n        for (var i = 0; i < dimension; i++) {\n            for (var j = 0; j < dimension; j++) {\n                var sum = float(0);\n                for (var k = 0; k < dimension; k++) {\n                    sum += float(a[i * dimension + k] * b[k * dimension + j]);\n                }\n                out[i * dimension + j] = sum;\n            }\n        }\n        return out;\n        if (a.__matrix === 2 && b.__matrix === 2) {\n            var a00_1 = a[0];\n            var a01_1 = a[1];\n            var a10_1 = a[2];\n            var a11_1 = a[3];\n            var b00_1 = b[0];\n            var b01_1 = b[1];\n            var b10_1 = b[2];\n            var b11_1 = b[3];\n            var v = float2x2(a00_1 * b00_1 + a01_1 * b10_1, a00_1 * b01_1 + a01_1 * b11_1, a10_1 * b00_1 + a11_1 * b10_1, a10_1 * b01_1 + a11_1 * b11_1);\n            return v;\n        }\n        else if (a.__matrix === 3 && b.__matrix === 3) {\n            var a00_2 = a[0];\n            var a01_2 = a[1];\n            var a02_1 = a[2];\n            var a10_2 = a[3];\n            var a11_2 = a[4];\n            var a12_1 = a[5];\n            var a20_1 = a[6];\n            var a21_1 = a[7];\n            var a22_1 = a[8];\n            var b00_2 = b[0];\n            var b01_2 = b[1];\n            var b02_1 = b[2];\n            var b10_2 = b[3];\n            var b11_2 = b[4];\n            var b12_1 = b[5];\n            var b20_1 = b[6];\n            var b21_1 = b[7];\n            var b22_1 = b[8];\n            var v = float3x3(a00_2 * b00_2 + a01_2 * b10_2 + a02_1 * b20_1, a00_2 * b01_2 + a01_2 * b11_2 + a02_1 * b21_1, a00_2 * b02_1 + a01_2 * b12_1 + a02_1 * b22_1, a10_2 * b00_2 + a11_2 * b10_2 + a12_1 * b20_1, a10_2 * b01_2 + a11_2 * b11_2 + a12_1 * b21_1, a10_2 * b02_1 + a11_2 * b12_1 + a12_1 * b22_1, a20_1 * b00_2 + a21_1 * b10_2 + a22_1 * b20_1, a20_1 * b01_2 + a21_1 * b11_2 + a22_1 * b21_1, a20_1 * b02_1 + a21_1 * b12_1 + a22_1 * b22_1);\n            return v;\n        }\n        else if (a.__matrix === 4 && b.__matrix === 4) {\n            var a00_3 = a[0];\n            var a01_3 = a[1];\n            var a02_2 = a[2];\n            var a03_1 = a[3];\n            var a10_3 = a[4];\n            var a11_3 = a[5];\n            var a12_2 = a[6];\n            var a13_1 = a[7];\n            var a20_2 = a[8];\n            var a21_2 = a[9];\n            var a22_2 = a[10];\n            var a23_1 = a[11];\n            var a30_1 = a[12];\n            var a31_1 = a[13];\n            var a32_1 = a[14];\n            var a33_1 = a[15];\n            var b00_3 = b[0];\n            var b01_3 = b[1];\n            var b02_2 = b[2];\n            var b03_1 = b[3];\n            var b10_3 = b[4];\n            var b11_3 = b[5];\n            var b12_2 = b[6];\n            var b13_1 = b[7];\n            var b20_2 = b[8];\n            var b21_2 = b[9];\n            var b22_2 = b[10];\n            var b23_1 = b[11];\n            var b30_1 = b[12];\n            var b31_1 = b[13];\n            var b32_1 = b[14];\n            var b33_1 = b[15];\n            var v = float4x4(a00_3 * b00_3 + a01_3 * b10_3 + a02_2 * b20_2 + a03_1 * b30_1, a00_3 * b01_3 + a01_3 * b11_3 + a02_2 * b21_2 + a03_1 * b31_1, a00_3 * b02_2 + a01_3 * b12_2 + a02_2 * b22_2 + a03_1 * b32_1, a00_3 * b03_1 + a01_3 * b13_1 + a02_2 * b23_1 + a03_1 * b33_1, a10_3 * b00_3 + a11_3 * b10_3 + a12_2 * b20_2 + a13_1 * b30_1, a10_3 * b01_3 + a11_3 * b11_3 + a12_2 * b21_2 + a13_1 * b31_1, a10_3 * b02_2 + a11_3 * b12_2 + a12_2 * b22_2 + a13_1 * b32_1, a10_3 * b03_1 + a11_3 * b13_1 + a12_2 * b23_1 + a13_1 * b33_1, a20_2 * b00_3 + a21_2 * b10_3 + a22_2 * b20_2 + a23_1 * b30_1, a20_2 * b01_3 + a21_2 * b11_3 + a22_2 * b21_2 + a23_1 * b31_1, a20_2 * b02_2 + a21_2 * b12_2 + a22_2 * b22_2 + a23_1 * b32_1, a20_2 * b03_1 + a21_2 * b13_1 + a22_2 * b23_1 + a23_1 * b33_1, a30_1 * b00_3 + a31_1 * b10_3 + a32_1 * b20_2 + a33_1 * b30_1, a30_1 * b01_3 + a31_1 * b11_3 + a32_1 * b21_2 + a33_1 * b31_1, a30_1 * b02_2 + a31_1 * b12_2 + a32_1 * b22_2 + a33_1 * b32_1, a30_1 * b03_1 + a31_1 * b13_1 + a32_1 * b23_1 + a33_1 * b33_1);\n            return v;\n        }\n        else {\n            throw new Error('Invalid matrix multiplication');\n        }\n    }\n    function matrixInversefloat2x2(m) {\n        var a = m.__index(0)[0], b = m.__index(1)[0], c = m.__index(0)[1], d = m.__index(1)[1];\n        var det = a * d - b * c;\n        if (det === 0) {\n            throw new Error('Matrix determinant is zero');\n        }\n        var detInv = 1.0 / det;\n        return float2x2(d * detInv, -b * detInv, -c * detInv, a * detInv);\n    }\n    function matrixInversefloat3x3(m) {\n        var n11 = m.__index(0)[0], n12 = m.__index(1)[0], n13 = m.__index(2)[0];\n        var n21 = m.__index(0)[1], n22 = m.__index(1)[1], n23 = m.__index(2)[1];\n        var n31 = m.__index(0)[2], n32 = m.__index(1)[2], n33 = m.__index(2)[2];\n        var t11 = n33 * n22 - n32 * n23, t12 = n32 * n13 - n33 * n12, t13 = n23 * n12 - n22 * n13;\n        var det = n11 * t11 + n21 * t12 + n31 * t13;\n        if (det === 0) {\n            throw new Error('Invalid matrix inverse');\n        }\n        var detInv = 1 / det;\n        var v = float3x3(t11 * detInv, (n31 * n23 - n33 * n21) * detInv, (n32 * n21 - n31 * n22) * detInv, t12 * detInv, (n33 * n11 - n31 * n13) * detInv, (n31 * n12 - n32 * n11) * detInv, t13 * detInv, (n21 * n13 - n23 * n11) * detInv, (n22 * n11 - n21 * n12) * detInv);\n        return v;\n    }\n    function matrixInversefloat4x4(m) {\n        var m00 = m[0 * 4 + 0];\n        var m01 = m[0 * 4 + 1];\n        var m02 = m[0 * 4 + 2];\n        var m03 = m[0 * 4 + 3];\n        var m10 = m[1 * 4 + 0];\n        var m11 = m[1 * 4 + 1];\n        var m12 = m[1 * 4 + 2];\n        var m13 = m[1 * 4 + 3];\n        var m20 = m[2 * 4 + 0];\n        var m21 = m[2 * 4 + 1];\n        var m22 = m[2 * 4 + 2];\n        var m23 = m[2 * 4 + 3];\n        var m30 = m[3 * 4 + 0];\n        var m31 = m[3 * 4 + 1];\n        var m32 = m[3 * 4 + 2];\n        var m33 = m[3 * 4 + 3];\n        var tmp_0 = m22 * m33;\n        var tmp_1 = m32 * m23;\n        var tmp_2 = m12 * m33;\n        var tmp_3 = m32 * m13;\n        var tmp_4 = m12 * m23;\n        var tmp_5 = m22 * m13;\n        var tmp_6 = m02 * m33;\n        var tmp_7 = m32 * m03;\n        var tmp_8 = m02 * m23;\n        var tmp_9 = m22 * m03;\n        var tmp_10 = m02 * m13;\n        var tmp_11 = m12 * m03;\n        var tmp_12 = m20 * m31;\n        var tmp_13 = m30 * m21;\n        var tmp_14 = m10 * m31;\n        var tmp_15 = m30 * m11;\n        var tmp_16 = m10 * m21;\n        var tmp_17 = m20 * m11;\n        var tmp_18 = m00 * m31;\n        var tmp_19 = m30 * m01;\n        var tmp_20 = m00 * m21;\n        var tmp_21 = m20 * m01;\n        var tmp_22 = m00 * m11;\n        var tmp_23 = m10 * m01;\n        var t0 = tmp_0 * m11 + tmp_3 * m21 + tmp_4 * m31 - (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31);\n        var t1 = tmp_1 * m01 + tmp_6 * m21 + tmp_9 * m31 - (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31);\n        var t2 = tmp_2 * m01 + tmp_7 * m11 + tmp_10 * m31 - (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31);\n        var t3 = tmp_5 * m01 + tmp_8 * m11 + tmp_11 * m21 - (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21);\n        var d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\n        if (d === 0) {\n            throw new Error('Invalid matrix inverse');\n        }\n        return float4x4(d * t0, d * t1, d * t2, d * t3, d * (tmp_1 * m10 + tmp_2 * m20 + tmp_5 * m30 - (tmp_0 * m10 + tmp_3 * m20 + tmp_4 * m30)), d * (tmp_0 * m00 + tmp_7 * m20 + tmp_8 * m30 - (tmp_1 * m00 + tmp_6 * m20 + tmp_9 * m30)), d * (tmp_3 * m00 + tmp_6 * m10 + tmp_11 * m30 - (tmp_2 * m00 + tmp_7 * m10 + tmp_10 * m30)), d * (tmp_4 * m00 + tmp_9 * m10 + tmp_10 * m20 - (tmp_5 * m00 + tmp_8 * m10 + tmp_11 * m20)), d * (tmp_12 * m13 + tmp_15 * m23 + tmp_16 * m33 - (tmp_13 * m13 + tmp_14 * m23 + tmp_17 * m33)), d * (tmp_13 * m03 + tmp_18 * m23 + tmp_21 * m33 - (tmp_12 * m03 + tmp_19 * m23 + tmp_20 * m33)), d * (tmp_14 * m03 + tmp_19 * m13 + tmp_22 * m33 - (tmp_15 * m03 + tmp_18 * m13 + tmp_23 * m33)), d * (tmp_17 * m03 + tmp_20 * m13 + tmp_23 * m23 - (tmp_16 * m03 + tmp_21 * m13 + tmp_22 * m23)), d * (tmp_14 * m22 + tmp_17 * m32 + tmp_13 * m12 - (tmp_16 * m32 + tmp_12 * m12 + tmp_15 * m22)), d * (tmp_20 * m32 + tmp_12 * m02 + tmp_19 * m22 - (tmp_18 * m22 + tmp_21 * m32 + tmp_13 * m02)), d * (tmp_18 * m12 + tmp_23 * m32 + tmp_15 * m02 - (tmp_22 * m32 + tmp_14 * m02 + tmp_19 * m12)), d * (tmp_22 * m22 + tmp_16 * m02 + tmp_21 * m12 - (tmp_20 * m12 + tmp_23 * m22 + tmp_17 * m02)));\n    }\n    function matrixTransposefloat2x2(m) {\n        return float2x2(m.__index(0)[0], m.__index(1)[0], m.__index(0)[1], m.__index(1)[1]);\n    }\n    function matrixTransposefloat3x3(m) {\n        return float3x3(m.__index(0)[0], m.__index(1)[0], m.__index(2)[0], m.__index(0)[1], m.__index(1)[1], m.__index(2)[1], m.__index(0)[2], m.__index(1)[2], m.__index(2)[2]);\n    }\n    function matrixTransposefloat4x4(m) {\n        return float4x4(m.__index(0)[0], m.__index(1)[0], m.__index(2)[0], m.__index(3)[0], m.__index(0)[1], m.__index(1)[1], m.__index(2)[1], m.__index(3)[1], m.__index(0)[2], m.__index(1)[2], m.__index(2)[2], m.__index(3)[2], m.__index(0)[3], m.__index(1)[3], m.__index(2)[3], m.__index(3)[3]);\n    }\n    function matrixMul2x2float2(a, b) {\n        var c = [0, 0];\n        for (var j = 0; j < 2; j++) {\n            for (var i = 0; i < 2; i++) {\n                c[i] += a[j * 2 + i] * b[j];\n            }\n        }\n        return c;\n    }\n    function matrixMul3x3float3(a, b) {\n        var c = [0, 0, 0];\n        for (var i = 0; i < 3; i++) {\n            for (var j = 0; j < 3; j++) {\n                c[i] += a[j * 3 + i] * b[j];\n            }\n        }\n        return c;\n    }\n    function matrixMul4x4float4(a, b) {\n        var c = [0, 0, 0, 0];\n        for (var j = 0; j < 4; j++) {\n            for (var i = 0; i < 4; i++) {\n                c[i] += a[j * 4 + i] * b[j];\n            }\n        }\n        return c;\n    }\n    function matrixMulfloat22x2(a, b) {\n        var c = [0, 0];\n        for (var j = 0; j < 2; j++) {\n            for (var i = 0; i < 2; i++) {\n                c[i] += a[j] * b[i * 2 + j];\n            }\n        }\n        return c;\n    }\n    function matrixMulfloat33x3(a, b) {\n        var c = [0, 0, 0];\n        for (var i = 0; i < 3; i++) {\n            for (var j = 0; j < 3; j++) {\n                c[i] += a[j] * b[i * 3 + j];\n            }\n        }\n        return c;\n    }\n    function matrixMulfloat44x4(a, b) {\n        var c = [0, 0, 0, 0];\n        for (var i = 0; i < 4; i++) {\n            for (var j = 0; j < 4; j++) {\n                c[i] += a[j] * b[i * 4 + j];\n            }\n        }\n        return c;\n    }\n    var mulFunc = componentOp(function (a, b) { return a * b; });\n    function inverse(a) {\n        if (a.__matrix == 2) {\n            return matrixInversefloat2x2(a);\n        }\n        else if (a.__matrix == 3) {\n            return matrixInversefloat3x3(a);\n        }\n        else if (a.__matrix == 4) {\n            return matrixInversefloat4x4(a);\n        }\n    }\n    exports.inverse = inverse;\n    function transpose(a) {\n        if (a.__matrix == 2) {\n            return matrixTransposefloat2x2(a);\n        }\n        else if (a.__matrix == 3) {\n            return matrixTransposefloat3x3(a);\n        }\n        else if (a.__matrix == 4) {\n            return matrixTransposefloat4x4(a);\n        }\n    }\n    exports.transpose = transpose;\n    /** @shadeup=univ(!$0$ * $1$)*/\n    var mul = function (a, b) {\n        if (isMatrix(a) || isMatrix(b)) {\n            if (isMatrix(a) && isMatrix(b)) {\n                return matrixMul(a, b);\n            }\n            else {\n                if (isMatrix(a) && typeof b == 'number') {\n                    return componentMath(b, a, function (a, b) { return a * b; });\n                }\n                else if (isMatrix(b) && typeof a == 'number') {\n                    return componentMath(a, b, function (a, b) { return a * b; });\n                }\n                else {\n                    if (isMatrix(a)) {\n                        if (a.length == 4) {\n                            return matrixMul2x2float2(a, b);\n                        }\n                        else if (a.length == 9) {\n                            return matrixMul3x3float3(a, b);\n                        }\n                        else if (a.length == 16) {\n                            return matrixMul4x4float4(a, b);\n                        }\n                    }\n                    else if (isMatrix(b)) {\n                        if (b.length == 4) {\n                            return matrixMulfloat22x2(a, b);\n                        }\n                        else if (b.length == 9) {\n                            return matrixMulfloat33x3(a, b);\n                        }\n                        else if (b.length == 16) {\n                            return matrixMulfloat44x4(a, b);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            return mulFunc(a, b);\n        }\n    };\n    exports.mul = mul;\n    /** @shadeup=univ(!$0$ / $1$)*/\n    exports.div = componentOp(function (a, b) { return a / b; });\n    /** @shadeup=glsl(!$0$ ** $1$) @shadeup=wgsl(!pow($0$, $1$))*/\n    exports.pow = componentOp(function (a, b) { return Math.pow(a, b); });\n    /** @shadeup=wgsl(!$0$ % $1$) @shadeup=glsl(!mod($0$, $1$))*/\n    exports.mod = componentOpMatch(function (a, b) { return a - b * Math.floor(a / b); });\n    /** @shadeup=univ(!$0$ & $1$)*/\n    exports.bitand = componentOp(function (a, b) { return a & b; });\n    /** @shadeup=univ(!$0$ | $1$)*/\n    exports.bitor = componentOp(function (a, b) { return a | b; });\n    /** @shadeup=univ(!$0$ ^ $1$)*/\n    exports.bitxor = componentOp(function (a, b) { return a ^ b; });\n    /** @shadeup=glsl(!$0$ << $1$) @shadeup=wgsl(!$0$ << u32($1$))*/\n    exports.lshift = componentOp(function (a, b) { return a << b; });\n    /** @shadeup=glsl(!$0$ >> $1$) @shadeup=wgsl(!$0$ >> u32($1$))*/\n    exports.rshift = componentOp(function (a, b) { return a >> b; });\n    /** @shadeup=univ(!~$0$)*/\n    exports.bitnot = componentOpSingular(function (a) { return ~a; });\n    /** @shadeup=univ(!-($0$))*/\n    exports.negate = componentOpSingular(function (a) { return -a; });\n    /** @shadeup=univ(!+($0$))*/\n    exports.positive = componentOpSingular(function (a) { return Math.abs(a); });\n    /** @shadeup=univ(abs)*/\n    exports.abs = componentOpSingular(function (a) { return Math.abs(a); });\n    /**  @shadeup=glsl(floor) @shadeup=wgsl(!floor(f32(1.0) * $0$))*/\n    exports.floor = componentOpSingular(Math.floor);\n    /** @shadeup=glsl(ceil) @shadeup=wgsl(!ceil(f32(1.0) * $0$))*/\n    exports.ceil = componentOpSingular(Math.ceil);\n    /** @shadeup=univ(round)*/\n    exports.round = componentOpSingular(Math.round);\n    /** @shadeup=univ(sign)*/\n    exports.sign = componentOpSingular(Math.sign);\n    /** @shadeup=univ(cos) */\n    exports.cos = componentOpSingular(Math.cos);\n    /** @shadeup=univ(sin) */\n    exports.sin = componentOpSingularFloat(Math.sin);\n    /** @shadeup=univ(tan) */\n    exports.tan = componentOpSingular(Math.tan);\n    /** @shadeup=univ(acos) */\n    exports.acos = componentOpSingular(Math.acos);\n    /** @shadeup=univ(asin) */\n    exports.asin = componentOpSingular(Math.asin);\n    /** @shadeup=univ(atan) */\n    exports.atan = componentOpSingular(Math.atan);\n    /** @shadeup=univ(atan2) */\n    exports.atan2 = Math.atan2;\n    /** @shadeup=univ(cosh) */\n    exports.cosh = componentOpSingular(Math.cosh);\n    /** @shadeup=univ(sinh) */\n    exports.sinh = componentOpSingular(Math.sinh);\n    /** @shadeup=univ(tanh) */\n    exports.tanh = componentOpSingular(Math.tanh);\n    /** @shadeup=univ(acosh) */\n    exports.acosh = componentOpSingular(Math.acosh);\n    /** @shadeup=univ(asinh) */\n    exports.asinh = componentOpSingular(Math.asinh);\n    /** @shadeup=univ(atanh) */\n    exports.atanh = componentOpSingular(Math.atanh);\n    /** @shadeup=univ(exp) */\n    exports.exp = componentOpSingular(Math.exp);\n    /** @shadeup=univ(log) */\n    exports.log = componentOpSingular(Math.log);\n    /** @shadeup=univ(log2) */\n    exports.log2 = componentOpSingular(Math.log2);\n    /** @shadeup=univ(log10) */\n    exports.log10 = componentOpSingular(Math.log10);\n    /** @shadeup=univ(sqrt) */\n    exports.sqrt = componentOpSingular(Math.sqrt);\n    /** @shadeup=univ(inversesqrt) */\n    exports.inversesqrt = componentOpSingular(function (a) { return 1 / Math.sqrt(a); });\n    /** @shadeup=univ(fract)*/\n    exports.frac = componentOpSingular(function (a) { return a - Math.floor(a); });\n    function wrap(x, low, high) {\n        if ((0, exports.lt)(x, low)) {\n            var rng = high - low;\n            var s1 = low - x;\n            var ms = s1 % rng;\n            return high - ms;\n        }\n        else if ((0, exports.gte)(x, high)) {\n            var rng = high - low;\n            var s1 = x - high;\n            var ms = s1 % rng;\n            return low + ms;\n        }\n        else {\n            return x;\n        }\n        // return add(mod(sub(x, low), sub(high, low)), low) as T;\n    }\n    exports.wrap = wrap;\n    /**\n     * Returns a deterministic (same seed = same output) random float between 0-1\n     *\n     * **Note:** See the noise package for more advanced random functions\n     */\n    function rand(seed) {\n        if (typeof seed === 'number') {\n            return (0, exports.frac)(Math.sin(seed * float(91.3458)) * float(47453.5453));\n        }\n        else {\n            return Math.random();\n        }\n    }\n    exports.rand = rand;\n    /**\n     * Returns a deterministic (same seed = same output) random float between 0-1\n     *\n     * **Note:** See the noise package for more advanced random functions\n     */\n    function rand2(seed) {\n        return (0, exports.frac)(Math.sin((0, exports.dot)(seed, float2(12.9898, 4.1414))) * float(43758.5453));\n    }\n    exports.rand2 = rand2;\n    /**\n     * Returns a deterministic (same seed = same output) random float between 0-1\n     *\n     * **Note:** See the noise package for more advanced random functions\n     */\n    function rand3(seed) {\n        var _a, _b;\n        return rand2((_a = swizzle(seed, 'xy'), _b = rand(swizzle(seed, 'z')), [_a[0] + _b, _a[1] + _b]));\n    }\n    exports.rand3 = rand3;\n    // export function remap(x: float, low1: float, high1: float, low2: float, high2: float): float {\n    // \treturn add(low2, mul(div(sub(x, low1), sub(high1, low1)), sub(high2, low2)));\n    // }\n    function pingpong(x, length) {\n        var t = x % (length * float(2));\n        return length - Math.abs(t - length);\n    }\n    exports.pingpong = pingpong;\n    function vectorMath_2to1_3to3(cb2, cb3) {\n        return function (a, b) {\n            if (a.length === 2 && b.length === 2) {\n                return cb2(a, b);\n            }\n            else if (a.length === 3 && b.length === 3) {\n                return cb3(a, b);\n            }\n            else {\n                throw new Error('Invalid vector length');\n            }\n        };\n    }\n    function vectorMath_2to1_3to3_4to4(cb2, cb3, cb4) {\n        return function (a, b) {\n            if (a.length === 2 && b.length === 2) {\n                return cb2(a, b);\n            }\n            else if (a.length === 3 && b.length === 3) {\n                return cb3(a, b);\n            }\n            else if (a.length === 4 && b.length === 4) {\n                return cb4(a, b);\n            }\n            else {\n                throw new Error('Invalid vector length');\n            }\n        };\n    }\n    function vectorMath_2to1_3to1_4to1(cb2, cb3, cb4) {\n        return function (a, b) {\n            if (a.length === 2 && b.length === 2) {\n                return cb2(a, b);\n            }\n            else if (a.length === 3 && b.length === 3) {\n                return cb3(a, b);\n            }\n            else if (a.length === 4 && b.length === 4) {\n                return cb4(a, b);\n            }\n            else {\n                throw new Error('Invalid vector length');\n            }\n        };\n    }\n    function cross2(a, b) {\n        return a[0] * b[1] - a[1] * b[0];\n    }\n    function cross3(a, b) {\n        return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n    }\n    exports.cross = vectorMath_2to1_3to3(cross2, cross3);\n    function dot2(a, b) {\n        return a[0] * b[0] + a[1] * b[1];\n    }\n    function dot3(a, b) {\n        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    }\n    function dot4(a, b) {\n        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n    }\n    /** @shadeup=univ(dot)*/\n    exports.dot = vectorMath_2to1_3to1_4to1(dot2, dot3, dot4);\n    function lerp1(a, b, t) {\n        return (a + (b - a) * t);\n    }\n    function lerp2(a, b, t) {\n        return [lerp1(a[0], b[0], t), lerp1(a[1], b[1], t)];\n    }\n    function lerp3(a, b, t) {\n        return [lerp1(a[0], b[0], t), lerp1(a[1], b[1], t), lerp1(a[2], b[2], t)];\n    }\n    function lerp4(a, b, t) {\n        return [\n            lerp1(a[0], b[0], t),\n            lerp1(a[1], b[1], t),\n            lerp1(a[2], b[2], t),\n            lerp1(a[3], b[3], t)\n        ];\n    }\n    function lerp2x2(a, b, t) {\n        return float2x2(lerp1(a[0], b[0], t), lerp1(a[1], b[1], t), lerp1(a[2], b[2], t), lerp1(a[3], b[3], t));\n    }\n    function lerp3x3(a, b, t) {\n        return float3x3(lerp1(a[0], b[0], t), lerp1(a[1], b[1], t), lerp1(a[2], b[2], t), lerp1(a[3], b[3], t), lerp1(a[4], b[4], t), lerp1(a[5], b[5], t), lerp1(a[6], b[6], t), lerp1(a[7], b[7], t), lerp1(a[8], b[8], t));\n    }\n    function lerp4x4(a, b, t) {\n        return float4x4(lerp1(a[0], b[0], t), lerp1(a[1], b[1], t), lerp1(a[2], b[2], t), lerp1(a[3], b[3], t), lerp1(a[4], b[4], t), lerp1(a[5], b[5], t), lerp1(a[6], b[6], t), lerp1(a[7], b[7], t), lerp1(a[8], b[8], t), lerp1(a[9], b[9], t), lerp1(a[10], b[10], t), lerp1(a[11], b[11], t), lerp1(a[12], b[12], t), lerp1(a[13], b[13], t), lerp1(a[14], b[14], t), lerp1(a[15], b[15], t));\n    }\n    /** @shadeup=univ(mix)*/\n    function lerp(a, b, t) {\n        if (typeof a === 'number' && typeof b === 'number' && typeof t === 'number') {\n            return lerp1(a, b, t);\n        }\n        else if (isMatrix(a) && isMatrix(b)) {\n            if (a.length === 4 && b.length === 4) {\n                return lerp2x2(a, b, t);\n            }\n            else if (a.length === 9 && b.length === 9) {\n                return lerp3x3(a, b, t);\n            }\n            else if (a.length === 16 && b.length === 16) {\n                return lerp4x4(a, b, t);\n            }\n            else {\n                throw new Error('Invalid matrix length');\n            }\n        }\n        else if (a.length === 2 && b.length === 2 && typeof t === 'number') {\n            return lerp2(a, b, t);\n        }\n        else if (a.length === 3 && b.length === 3 && typeof t === 'number') {\n            return lerp3(a, b, t);\n        }\n        else if (a.length === 4 && b.length === 4 && typeof t === 'number') {\n            return lerp4(a, b, t);\n        }\n        else {\n            throw new Error('Invalid vector length');\n        }\n    }\n    exports.lerp = lerp;\n    /** @shadeup=univ(!bilerp_`0`($0$, $1$, $2$, $3$, $4$, $5$)) */\n    function bilerp(a, b, c, d, u, v) {\n        return lerp(lerp(a, b, u), lerp(c, d, u), v);\n    }\n    exports.bilerp = bilerp;\n    /** @shadeup=univ(length)*/\n    function length(a) {\n        if (typeof a === 'number') {\n            return Math.abs(a);\n        }\n        else if (a.length === 2) {\n            return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2));\n        }\n        else if (a.length === 3) {\n            return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2));\n        }\n        else if (a.length === 4) {\n            return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2));\n        }\n        else {\n            throw new Error('Invalid vector length');\n        }\n    }\n    exports.length = length;\n    function dist(a, b) {\n        return length((0, exports.sub)(a, b));\n    }\n    exports.dist = dist;\n    /** @shadeup=univ(distance)*/\n    exports.distance = dist;\n    /** @shadeup=univ(normalize)*/\n    function normalize(a) {\n        if (a.length === 2) {\n            var l = length(a);\n            return [a[0] / l, a[1] / l];\n        }\n        else if (a.length === 3) {\n            var l = length(a);\n            return [a[0] / l, a[1] / l, a[2] / l];\n        }\n        else if (a.length === 4) {\n            var l = length(a);\n            return [a[0] / l, a[1] / l, a[2] / l, a[3] / l];\n        }\n        else {\n            throw new Error('Invalid vector length');\n        }\n    }\n    exports.normalize = normalize;\n    /** @shadeup=univ(reflect)*/\n    function reflect(a, b) {\n        if (a.length === 2 && b.length === 2) {\n            return reflect2(a, b);\n        }\n        else if (a.length === 3 && b.length === 3) {\n            return reflect3(a, b);\n        }\n        else if (a.length === 4 && b.length === 4) {\n            return reflect4(a, b);\n        }\n        else {\n            throw new Error('Invalid vector length');\n        }\n    }\n    exports.reflect = reflect;\n    function reflect2(b, a) {\n        var dot = dot2(a, b);\n        return [b[0] - 2 * dot * a[0], b[1] - 2 * dot * a[1]];\n    }\n    function reflect3(b, a) {\n        var dot = dot3(a, b);\n        return [b[0] - 2 * dot * a[0], b[1] - 2 * dot * a[1], b[2] - 2 * dot * a[2]];\n    }\n    function reflect4(b, a) {\n        var dot = dot4(a, b);\n        return [\n            b[0] - 2 * dot * a[0],\n            b[1] - 2 * dot * a[1],\n            b[2] - 2 * dot * a[2],\n            b[3] - 2 * dot * a[3]\n        ];\n    }\n    /** @shadeup=univ(refract)*/\n    function refract(a, b, eta) {\n        if (a.length === 2 && b.length === 2) {\n            return refract2(a, b, eta);\n        }\n        else if (a.length === 3 && b.length === 3) {\n            return refract3(a, b, eta);\n        }\n        else if (a.length === 4 && b.length === 4) {\n            return refract4(a, b, eta);\n        }\n        else {\n            throw new Error('Invalid vector length');\n        }\n    }\n    exports.refract = refract;\n    function refract2(b, a, eta) {\n        var dot = dot2(a, b);\n        var k = 1 - eta * eta * (1 - dot * dot);\n        return k < 0\n            ? [0, 0]\n            : [\n                eta * b[0] - (eta * dot + Math.sqrt(k)) * a[0],\n                eta * b[1] - (eta * dot + Math.sqrt(k)) * a[1]\n            ];\n    }\n    function refract3(b, a, eta) {\n        var dot = dot3(a, b);\n        var k = 1 - eta * eta * (1 - dot * dot);\n        return k < 0\n            ? [0, 0, 0]\n            : [\n                eta * b[0] - (eta * dot + Math.sqrt(k)) * a[0],\n                eta * b[1] - (eta * dot + Math.sqrt(k)) * a[1],\n                eta * b[2] - (eta * dot + Math.sqrt(k)) * a[2]\n            ];\n    }\n    function refract4(b, a, eta) {\n        var dot = dot4(a, b);\n        var k = 1 - eta * eta * (1 - dot * dot);\n        return k < 0\n            ? [0, 0, 0, 0]\n            : [\n                eta * b[0] - (eta * dot + Math.sqrt(k)) * a[0],\n                eta * b[1] - (eta * dot + Math.sqrt(k)) * a[1],\n                eta * b[2] - (eta * dot + Math.sqrt(k)) * a[2],\n                eta * b[3] - (eta * dot + Math.sqrt(k)) * a[3]\n            ];\n    }\n    /** @shadeup=univ(degrees)*/\n    function degrees(a) {\n        return float((a * 180) / Math.PI);\n    }\n    exports.degrees = degrees;\n    /** @shadeup=univ(radians)*/\n    function radians(a) {\n        return float((a * Math.PI) / 180);\n    }\n    exports.radians = radians;\n    /** @shadeup=univ(step)*/\n    function step(edge, x) {\n        if (typeof edge === 'number') {\n            if (typeof x === 'number') {\n                return x < edge ? 0 : 1;\n            }\n            else {\n                return x.map(function (v) { return (v < edge ? 0 : 1); });\n            }\n        }\n        else {\n            if (typeof x === 'number') {\n                return edge.map(function (v) { return (x < v ? 0 : 1); });\n            }\n            else {\n                return edge.map(function (v, i) { return (x[i] < v ? 0 : 1); });\n            }\n        }\n    }\n    exports.step = step;\n    function _smoothstep(a, b, x) {\n        var t = clamp((x - a) / (b - a), 0, 1);\n        return t * t * (3 - 2 * t);\n    }\n    /** @shadeup=univ(smoothstep)*/\n    function smoothstep(a, b, x) {\n        if (typeof a === 'number' && typeof b === 'number' && typeof x === 'number') {\n            return _smoothstep(a, b, x);\n        }\n        else if (typeof a === 'number' && typeof b === 'number') {\n            return x.map(function (v) { return _smoothstep(a, b, v); });\n        }\n        else {\n            return a.map(function (v, i) { return _smoothstep(v, b[i], x[i]); });\n        }\n    }\n    exports.smoothstep = smoothstep;\n    function componentReduce(vectors, cb) {\n        var result = [];\n        var _loop_1 = function (i) {\n            result.push(cb(vectors.map(function (v) { return v[i]; })));\n        };\n        for (var i = 0; i < vectors[0].length; i++) {\n            _loop_1(i);\n        }\n        return result;\n    }\n    /** @shadeup=univ(min)*/\n    function min() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (args.length == 1) {\n            if (Array.isArray(args[0])) {\n                return Math.min.apply(Math, args[0]);\n            }\n            else {\n                return args[0];\n            }\n        }\n        else {\n            if (Array.isArray(args[0]) && !Array.isArray(args[1])) {\n                var minTo_1 = args[1];\n                return args[0].map(function (v) { return Math.min(v, minTo_1); });\n            }\n            else if (!Array.isArray(args[0]) && Array.isArray(args[1])) {\n                var minFrom_1 = args[0];\n                return args[1].map(function (v) { return Math.min(minFrom_1, v); });\n            }\n            else if (Array.isArray(args[0])) {\n                return componentReduce(args, function (a) { return Math.min.apply(Math, a); });\n            }\n            else {\n                return Math.min.apply(Math, args);\n            }\n        }\n    }\n    exports.min = min;\n    /** @shadeup=univ(max)*/\n    function max() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (args.length == 1) {\n            if (Array.isArray(args[0])) {\n                return Math.max.apply(Math, args[0]);\n            }\n            else {\n                return args[0];\n            }\n        }\n        else {\n            if (Array.isArray(args[0]) && !Array.isArray(args[1])) {\n                var maxTo_1 = args[1];\n                return args[0].map(function (v) { return Math.max(v, maxTo_1); });\n            }\n            else if (!Array.isArray(args[0]) && Array.isArray(args[1])) {\n                var maxFrom_1 = args[0];\n                return args[1].map(function (v) { return Math.max(maxFrom_1, v); });\n            }\n            else if (Array.isArray(args[0])) {\n                return componentReduce(args, function (a) { return Math.max.apply(Math, a); });\n            }\n            else {\n                return Math.max.apply(Math, args);\n            }\n        }\n    }\n    exports.max = max;\n    /** @shadeup=univ(clamp)*/\n    function clamp(arg, min, max) {\n        if (Array.isArray(arg)) {\n            if (Array.isArray(min) && Array.isArray(max)) {\n                return arg.map(function (a, i) { return Math.min(Math.max(a, min[i]), max[i]); });\n            }\n            else {\n                return arg.map(function (a) { return Math.min(Math.max(a, min), max); });\n            }\n        }\n        else {\n            return Math.min(Math.max(arg, min), max);\n        }\n    }\n    exports.clamp = clamp;\n    /** @shadeup=glsl(!clamp($0$, 0.0, 1.0)) @shadeup=wgsl(saturate) */\n    function saturate(arg) {\n        return clamp(arg, float(0), float(1));\n    }\n    exports.saturate = saturate;\n    function eq(a, b) {\n        var ta = typeof a;\n        var tb = typeof b;\n        if (ta != tb) {\n            return false;\n        }\n        else if ((ta == 'number' && tb == 'number') ||\n            (ta == 'string' && tb == 'string') ||\n            (ta == 'boolean' && tb == 'boolean') ||\n            (ta == 'undefined' && tb == 'undefined')) {\n            return a == b;\n        }\n        else if (ta == 'object' && tb == 'object') {\n            if (Array.isArray(a) && Array.isArray(b)) {\n                if (a.length != b.length) {\n                    return false;\n                }\n                for (var i = 0; i < a.length; i++) {\n                    if (!eq(a[i], b[i])) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            else {\n                return a == b;\n            }\n        }\n    }\n    exports.eq = eq;\n    /** @shadeup=univ(!($0$ != $1$))*/\n    var neq = function (a, b) { return !eq(a, b); };\n    exports.neq = neq;\n    /** @shadeup=univ(!($0$ < $1$))*/\n    var lt = function (a, b) { return a < b; };\n    exports.lt = lt;\n    /** @shadeup=univ(!($0$ <= $1$))*/\n    var lte = function (a, b) { return a <= b; };\n    exports.lte = lte;\n    /** @shadeup=univ(!($0$ > $1$))*/\n    var gt = function (a, b) { return a > b; };\n    exports.gt = gt;\n    /** @shadeup=univ(!($0$ >= $1$))*/\n    var gte = function (a, b) { return a >= b; };\n    exports.gte = gte;\n    /** @shadeup=univ(!($0$ && $1$))*/\n    var and = function (a, b) { return a && b; };\n    exports.and = and;\n    /** @shadeup=univ(!($0$ || $1$))*/\n    var or = function (a, b) { return a || b; };\n    exports.or = or;\n    /** @shadeup=univ(!(!$0$))*/\n    var not = function (a) { return !a; };\n    exports.not = not;\n    /** @shadeup=univ()*/\n    function makeVector() {\n        var out = [];\n        for (var i = 0; i < arguments.length; i++) {\n            var a = arguments[i];\n            if (typeof a === 'number') {\n                out.push(a);\n            }\n            else {\n                for (var j = 0; j < a.length; j++) {\n                    out.push(a[j]);\n                }\n            }\n        }\n        return out;\n        throw new Error('Invalid vector length');\n    }\n    exports.makeVector = makeVector;\n    var swizIndex = {\n        x: 0,\n        y: 1,\n        z: 2,\n        w: 3,\n        r: 0,\n        g: 1,\n        b: 2,\n        a: 3\n    };\n    var getSwizIndexFast = function (swiz) {\n        switch (swiz) {\n            case 'x':\n                return 0;\n            case 'y':\n                return 1;\n            case 'z':\n                return 2;\n            case 'w':\n                return 3;\n            case 'r':\n                return 0;\n            case 'g':\n                return 1;\n            case 'b':\n                return 2;\n            case 'a':\n                return 3;\n        }\n    };\n    /** @shadeup=shader */\n    function testDocComment() {\n        return 1;\n    }\n    exports.testDocComment = testDocComment;\n    function swizzle(v, swiz, assign) {\n        var _a;\n        if (typeof v === 'number') {\n            if (swiz.length === 1) {\n                return v;\n            }\n            else if (swiz.length === 2) {\n                return [v, v];\n            }\n            else if (swiz.length === 3) {\n                return [v, v, v];\n            }\n            else if (swiz.length === 4) {\n                return [v, v, v, v];\n            }\n        }\n        else if (Array.isArray(v)) {\n            if (typeof assign !== 'undefined') {\n                for (var i = 0; i < swiz.length; i++) {\n                    v[getSwizIndexFast(swiz[i])] = (_a = assign[i]) !== null && _a !== void 0 ? _a : assign;\n                }\n                return v;\n            }\n            if (swiz.length === 1) {\n                return v[getSwizIndexFast(swiz)];\n            }\n            else if (swiz.length === 2) {\n                return [v[getSwizIndexFast(swiz[0])], v[getSwizIndexFast(swiz[1])]];\n            }\n            else if (swiz.length === 3) {\n                return [\n                    v[getSwizIndexFast(swiz[0])],\n                    v[getSwizIndexFast(swiz[1])],\n                    v[getSwizIndexFast(swiz[2])]\n                ];\n            }\n            else if (swiz.length === 4) {\n                return [\n                    v[getSwizIndexFast(swiz[0])],\n                    v[getSwizIndexFast(swiz[1])],\n                    v[getSwizIndexFast(swiz[2])],\n                    v[getSwizIndexFast(swiz[3])]\n                ];\n            }\n        }\n        else {\n            return v[swiz];\n        }\n    }\n    exports.swizzle = swizzle;\n    function intifyVector(v) {\n        if (typeof v === 'number') {\n            return v;\n        }\n        else if (Array.isArray(v)) {\n            return v.map(function (v) { return v | 0; });\n        }\n        else {\n            return v;\n        }\n    }\n    exports.intifyVector = intifyVector;\n    exports.FM = static_math_1.FM;\n    // type f32 = number & { __float: never };\n    // type i32 = number & { __int: never };\n    // type num = f32 | i32;\n    // function f32(a: number): f32 {\n    // \treturn a as f32;\n    // }\n    // function i32(a: number): i32 {\n    // \treturn a as i32;\n    // }\n    // type numeric2 = <A extends num, B extends num>(a: A, b: B) => (A extends f32 ? f32 : (B extends f32 ? f32 : i32));\n    // type numeric3 = <A extends num, B extends num, C extends num>(a: A, b: B, c: C) => (A extends f32 ? f32 : (B extends f32 ? f32 : (C extends f32 ? f32 : i32)));\n    // export const abc: numeric2 = (a, b, c) => a + b + c;\n    // abc(f32(1), i32(2));\n    var atomic_internal = /** @class */ (function () {\n        function atomic_internal(value) {\n            this.__value = value;\n        }\n        /** @shadeup=univ(!atomicLoad(&$self$))*/\n        atomic_internal.prototype.load = function () {\n            return this.__value;\n        };\n        /** @shadeup=univ(!atomicStore(&$self$, $0$))*/\n        atomic_internal.prototype.store = function (value) {\n            this.__value = value;\n            if (this.$mutate)\n                this.$mutate(this.__value);\n        };\n        /** @shadeup=univ(!atomicAdd(&$self$, $0$))*/\n        atomic_internal.prototype.add = function (value) {\n            var old = this.__value;\n            this.__value += value;\n            if (this.$mutate)\n                this.$mutate(this.__value);\n            return old;\n        };\n        /** @shadeup=univ(!atomicSub(&$self$, $0$))*/\n        atomic_internal.prototype.sub = function (value) {\n            var old = this.__value;\n            this.__value -= value;\n            if (this.$mutate)\n                this.$mutate(this.__value);\n            return old;\n        };\n        /** @shadeup=univ(!atomicMax(&$self$, $0$))*/\n        atomic_internal.prototype.max = function (value) {\n            var old = this.__value;\n            this.__value = Math.max(value, this.__value);\n            if (this.$mutate)\n                this.$mutate(this.__value);\n            return old;\n        };\n        /** @shadeup=univ(!atomicMin(&$self$, $0$))*/\n        atomic_internal.prototype.min = function (value) {\n            var old = this.__value;\n            this.__value = Math.min(value, this.__value);\n            if (this.$mutate)\n                this.$mutate(this.__value);\n            return old;\n        };\n        /** @shadeup=univ(!atomicAnd(&$self$, $0$))*/\n        atomic_internal.prototype.and = function (value) {\n            var old = this.__value;\n            this.__value = value & this.__value;\n            if (this.$mutate)\n                this.$mutate(this.__value);\n            return old;\n        };\n        /** @shadeup=univ(!atomicOr(&$self$, $0$))*/\n        atomic_internal.prototype.or = function (value) {\n            var old = this.__value;\n            this.__value = value | this.__value;\n            if (this.$mutate)\n                this.$mutate(this.__value);\n            return old;\n        };\n        /** @shadeup=univ(!atomicXor(&$self$, $0$))*/\n        atomic_internal.prototype.xor = function (value) {\n            var old = this.__value;\n            this.__value = value ^ this.__value;\n            if (this.$mutate)\n                this.$mutate(this.__value);\n            return old;\n        };\n        /** @shadeup=univ(!atomicExchange(&$self$, $0$))*/\n        atomic_internal.prototype.exchange = function (value) {\n            var old = this.__value;\n            this.__value = value;\n            if (this.$mutate)\n                this.$mutate(this.__value);\n            return old;\n        };\n        /** @shadeup=univ(!atomicCompareExchangeWeak(&$self$, $0$, $1$))*/\n        atomic_internal.prototype.compareExchangeWeak = function (compare, value) {\n            var old = this.__value;\n            if (old == compare) {\n                this.__value = value;\n            }\n            if (this.$mutate)\n                this.$mutate(this.__value);\n            return {\n                old_value: old,\n                exchanged: old == compare\n            };\n        };\n        atomic_internal.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_std_math_ts_71052_atomic_internal\\\",\\\"fields\\\":[[\\\"__type\\\",{\\\"type\\\":\\\"unknown\\\"}],[\\\"__value\\\",null],[\\\"$mutate\\\",{\\\"type\\\":\\\"unknown\\\"}]]}\");\n        };\n        return atomic_internal;\n    }());\n    exports.atomic_internal = atomic_internal;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_std_math_ts_71052_atomic_internal\\\",\\\"fields\\\":[[\\\"__type\\\",{\\\"type\\\":\\\"unknown\\\"}],[\\\"__value\\\",null],[\\\"$mutate\\\",{\\\"type\\\":\\\"unknown\\\"}]]}\"), atomic_internal)\n    function atomic(value) {\n        return new atomic_internal(value);\n    }\n    exports.atomic = atomic;\n    window.makeAtomic = atomic;\n    /**\n     * Executes a control barrier synchronization function that affects memory and atomic operations in the workgroup address space.\n     *\n     * See: https://www.w3.org/TR/WGSL/#workgroupBarrier-builtin\n     *\n     * @shadeup=univ(!workgroupBarrier())\n     */\n    function workgroupBarrier() { }\n    exports.workgroupBarrier = workgroupBarrier;\n    /**\n     * Executes a storage barrier synchronization function that affects memory and atomic operations in the workgroup address space.\n     *\n     * See: https://www.w3.org/TR/WGSL/#storageBarrier-builtin\n     *\n     * @shadeup=univ(!storageBarrier())\n     */\n    function storageBarrier() { }\n    exports.storageBarrier = storageBarrier;\n    /**\n     * See: https://www.w3.org/TR/WGSL/#workgroupUniformLoad-builtin\n     *\n     * @shadeup=univ(!workgroupUniformLoad(&$0$))\n     */\n    function workgroupUniformLoad(p) {\n        return p;\n    }\n    exports.workgroupUniformLoad = workgroupUniformLoad;\n    /**\n     * Discards the current fragment.\n     *\n     * A discard statement converts the invocation into a helper invocation and throws away the fragment. The discard statement must only be used in a fragment shader stage.\n     *\n     * See: https://www.w3.org/TR/WGSL/#discard-statement\n     *\n     * @shadeup=univ(!discard;)\n     */\n    function discard() { }\n    exports.discard = discard;\n    /**\n     * Returns the derivative of the input value with respect to the window-space x coordinate.\n     * @param value - The input value.\n     * @returns The derivative of the input value with respect to the window-space x coordinate.\n     * @shadeup=glsl(!dFdx($0$))\n     * @shadeup=wgsl(!dpdx($0$))\n     */\n    function ddx(value) {\n        return 0;\n    }\n    exports.ddx = ddx;\n    /**\n     * Returns the derivative of the input value with respect to the window-space y coordinate.\n     * @param value - The input value.\n     *\n     * @returns The derivative of the input value with respect to the window-space y coordinate.\n     * @shadeup=glsl(!dFdy($0$))\n     * @shadeup=wgsl(!dpdy($0$))\n     */\n    function ddy(value) {\n        return 0;\n    }\n    exports.ddy = ddy;\n    /**\n     * @shadeup=glsl(!dFdxFine($0$))\n     * @shadeup=wgsl(!dpdxFine($0$))\n     */\n    function ddxFine(value) {\n        return 0;\n    }\n    exports.ddxFine = ddxFine;\n    /**\n     * @shadeup=glsl(!dFdyFine($0$))\n     * @shadeup=wgsl(!dpdyFine($0$))\n     */\n    function ddyFine(value) {\n        return 0;\n    }\n    exports.ddyFine = ddyFine;\n    /**\n     * @shadeup=glsl(!dFdxCoarse($0$))\n     * @shadeup=wgsl(!dpdxCoarse($0$))\n     */\n    function ddxCoarse(value) {\n        return 0;\n    }\n    exports.ddxCoarse = ddxCoarse;\n    /**\n     * @shadeup=glsl(!dFdyCoarse($0$))\n     * @shadeup=wgsl(!dpdyCoarse($0$))\n     */\n    function ddyCoarse(value) {\n        return 0;\n    }\n    exports.ddyCoarse = ddyCoarse;\n    /**\n     * @shadeup=glsl(!$0$)\n     * @shadeup=wgsl(!bitcast<$[0]$>($0$))\n     */\n    function bitcast(value) {\n        return 0;\n    }\n    exports.bitcast = bitcast;\n});\n"}],"emitSkipped":false,"diagnostics":[]},"/static-math.ts":{"outputFiles":[{"name":"/static-math.js","writeByteOrderMark":false,"text":"define([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.FM = void 0;\n    ///\n    /// GENERATED\n    /// DO NOT EDIT THIS FILE\n    /// see generate-static-math.ts\n    ///\n    exports.FM = {\n        add_1_1: function (a, b) { return a + b; },\n        add_2_1: function (a, b) { return [a[0] + b, a[1] + b]; },\n        add_1_2: function (a, b) { return [a + b[0], a + b[1]]; },\n        add_2_2: function (a, b) { return [a[0] + b[0], a[1] + b[1]]; },\n        add_3_1: function (a, b) { return [a[0] + b, a[1] + b, a[2] + b]; },\n        add_1_3: function (a, b) { return [a + b[0], a + b[1], a + b[2]]; },\n        add_3_3: function (a, b) { return [a[0] + b[0], a[1] + b[1], a[2] + b[2]]; },\n        add_4_1: function (a, b) { return [a[0] + b, a[1] + b, a[2] + b, a[3] + b]; },\n        add_1_4: function (a, b) { return [a + b[0], a + b[1], a + b[2], a + b[3]]; },\n        add_4_4: function (a, b) { return [a[0] + b[0], a[1] + b[1], a[2] + b[2], a[3] + b[3]]; },\n        sub_1_1: function (a, b) { return a - b; },\n        sub_2_1: function (a, b) { return [a[0] - b, a[1] - b]; },\n        sub_1_2: function (a, b) { return [a - b[0], a - b[1]]; },\n        sub_2_2: function (a, b) { return [a[0] - b[0], a[1] - b[1]]; },\n        sub_3_1: function (a, b) { return [a[0] - b, a[1] - b, a[2] - b]; },\n        sub_1_3: function (a, b) { return [a - b[0], a - b[1], a - b[2]]; },\n        sub_3_3: function (a, b) { return [a[0] - b[0], a[1] - b[1], a[2] - b[2]]; },\n        sub_4_1: function (a, b) { return [a[0] - b, a[1] - b, a[2] - b, a[3] - b]; },\n        sub_1_4: function (a, b) { return [a - b[0], a - b[1], a - b[2], a - b[3]]; },\n        sub_4_4: function (a, b) { return [a[0] - b[0], a[1] - b[1], a[2] - b[2], a[3] - b[3]]; },\n        div_1_1: function (a, b) { return a / b; },\n        div_2_1: function (a, b) { return [a[0] / b, a[1] / b]; },\n        div_1_2: function (a, b) { return [a / b[0], a / b[1]]; },\n        div_2_2: function (a, b) { return [a[0] / b[0], a[1] / b[1]]; },\n        div_3_1: function (a, b) { return [a[0] / b, a[1] / b, a[2] / b]; },\n        div_1_3: function (a, b) { return [a / b[0], a / b[1], a / b[2]]; },\n        div_3_3: function (a, b) { return [a[0] / b[0], a[1] / b[1], a[2] / b[2]]; },\n        div_4_1: function (a, b) { return [a[0] / b, a[1] / b, a[2] / b, a[3] / b]; },\n        div_1_4: function (a, b) { return [a / b[0], a / b[1], a / b[2], a / b[3]]; },\n        div_4_4: function (a, b) { return [a[0] / b[0], a[1] / b[1], a[2] / b[2], a[3] / b[3]]; },\n        mul_1_1: function (a, b) { return a * b; },\n        mul_2_1: function (a, b) { return [a[0] * b, a[1] * b]; },\n        mul_1_2: function (a, b) { return [a * b[0], a * b[1]]; },\n        mul_2_2: function (a, b) { return [a[0] * b[0], a[1] * b[1]]; },\n        mul_3_1: function (a, b) { return [a[0] * b, a[1] * b, a[2] * b]; },\n        mul_1_3: function (a, b) { return [a * b[0], a * b[1], a * b[2]]; },\n        mul_3_3: function (a, b) { return [a[0] * b[0], a[1] * b[1], a[2] * b[2]]; },\n        mul_4_1: function (a, b) { return [a[0] * b, a[1] * b, a[2] * b, a[3] * b]; },\n        mul_1_4: function (a, b) { return [a * b[0], a * b[1], a * b[2], a * b[3]]; },\n        mul_4_4: function (a, b) { return [a[0] * b[0], a[1] * b[1], a[2] * b[2], a[3] * b[3]]; },\n        mod_1_1: function (a, b) { return a % b; },\n        mod_2_1: function (a, b) { return [a[0] % b, a[1] % b]; },\n        mod_1_2: function (a, b) { return [a % b[0], a % b[1]]; },\n        mod_2_2: function (a, b) { return [a[0] % b[0], a[1] % b[1]]; },\n        mod_3_1: function (a, b) { return [a[0] % b, a[1] % b, a[2] % b]; },\n        mod_1_3: function (a, b) { return [a % b[0], a % b[1], a % b[2]]; },\n        mod_3_3: function (a, b) { return [a[0] % b[0], a[1] % b[1], a[2] % b[2]]; },\n        mod_4_1: function (a, b) { return [a[0] % b, a[1] % b, a[2] % b, a[3] % b]; },\n        mod_1_4: function (a, b) { return [a % b[0], a % b[1], a % b[2], a % b[3]]; },\n        mod_4_4: function (a, b) { return [a[0] % b[0], a[1] % b[1], a[2] % b[2], a[3] % b[3]]; },\n        bitand_1_1: function (a, b) { return a & b; },\n        bitand_2_1: function (a, b) { return [a[0] & b, a[1] & b]; },\n        bitand_1_2: function (a, b) { return [a & b[0], a & b[1]]; },\n        bitand_2_2: function (a, b) { return [a[0] & b[0], a[1] & b[1]]; },\n        bitand_3_1: function (a, b) { return [a[0] & b, a[1] & b, a[2] & b]; },\n        bitand_1_3: function (a, b) { return [a & b[0], a & b[1], a & b[2]]; },\n        bitand_3_3: function (a, b) { return [a[0] & b[0], a[1] & b[1], a[2] & b[2]]; },\n        bitand_4_1: function (a, b) { return [a[0] & b, a[1] & b, a[2] & b, a[3] & b]; },\n        bitand_1_4: function (a, b) { return [a & b[0], a & b[1], a & b[2], a & b[3]]; },\n        bitand_4_4: function (a, b) { return [a[0] & b[0], a[1] & b[1], a[2] & b[2], a[3] & b[3]]; },\n        bitor_1_1: function (a, b) { return a | b; },\n        bitor_2_1: function (a, b) { return [a[0] | b, a[1] | b]; },\n        bitor_1_2: function (a, b) { return [a | b[0], a | b[1]]; },\n        bitor_2_2: function (a, b) { return [a[0] | b[0], a[1] | b[1]]; },\n        bitor_3_1: function (a, b) { return [a[0] | b, a[1] | b, a[2] | b]; },\n        bitor_1_3: function (a, b) { return [a | b[0], a | b[1], a | b[2]]; },\n        bitor_3_3: function (a, b) { return [a[0] | b[0], a[1] | b[1], a[2] | b[2]]; },\n        bitor_4_1: function (a, b) { return [a[0] | b, a[1] | b, a[2] | b, a[3] | b]; },\n        bitor_1_4: function (a, b) { return [a | b[0], a | b[1], a | b[2], a | b[3]]; },\n        bitor_4_4: function (a, b) { return [a[0] | b[0], a[1] | b[1], a[2] | b[2], a[3] | b[3]]; },\n        bitxor_1_1: function (a, b) { return a ^ b; },\n        bitxor_2_1: function (a, b) { return [a[0] ^ b, a[1] ^ b]; },\n        bitxor_1_2: function (a, b) { return [a ^ b[0], a ^ b[1]]; },\n        bitxor_2_2: function (a, b) { return [a[0] ^ b[0], a[1] ^ b[1]]; },\n        bitxor_3_1: function (a, b) { return [a[0] ^ b, a[1] ^ b, a[2] ^ b]; },\n        bitxor_1_3: function (a, b) { return [a ^ b[0], a ^ b[1], a ^ b[2]]; },\n        bitxor_3_3: function (a, b) { return [a[0] ^ b[0], a[1] ^ b[1], a[2] ^ b[2]]; },\n        bitxor_4_1: function (a, b) { return [a[0] ^ b, a[1] ^ b, a[2] ^ b, a[3] ^ b]; },\n        bitxor_1_4: function (a, b) { return [a ^ b[0], a ^ b[1], a ^ b[2], a ^ b[3]]; },\n        bitxor_4_4: function (a, b) { return [a[0] ^ b[0], a[1] ^ b[1], a[2] ^ b[2], a[3] ^ b[3]]; },\n        lshift_1_1: function (a, b) { return a << b; },\n        lshift_2_1: function (a, b) { return [a[0] << b, a[1] << b]; },\n        lshift_1_2: function (a, b) { return [a << b[0], a << b[1]]; },\n        lshift_2_2: function (a, b) { return [a[0] << b[0], a[1] << b[1]]; },\n        lshift_3_1: function (a, b) { return [a[0] << b, a[1] << b, a[2] << b]; },\n        lshift_1_3: function (a, b) { return [a << b[0], a << b[1], a << b[2]]; },\n        lshift_3_3: function (a, b) { return [a[0] << b[0], a[1] << b[1], a[2] << b[2]]; },\n        lshift_4_1: function (a, b) { return [a[0] << b, a[1] << b, a[2] << b, a[3] << b]; },\n        lshift_1_4: function (a, b) { return [a << b[0], a << b[1], a << b[2], a << b[3]]; },\n        lshift_4_4: function (a, b) { return [a[0] << b[0], a[1] << b[1], a[2] << b[2], a[3] << b[3]]; },\n        rshift_1_1: function (a, b) { return a >> b; },\n        rshift_2_1: function (a, b) { return [a[0] >> b, a[1] >> b]; },\n        rshift_1_2: function (a, b) { return [a >> b[0], a >> b[1]]; },\n        rshift_2_2: function (a, b) { return [a[0] >> b[0], a[1] >> b[1]]; },\n        rshift_3_1: function (a, b) { return [a[0] >> b, a[1] >> b, a[2] >> b]; },\n        rshift_1_3: function (a, b) { return [a >> b[0], a >> b[1], a >> b[2]]; },\n        rshift_3_3: function (a, b) { return [a[0] >> b[0], a[1] >> b[1], a[2] >> b[2]]; },\n        rshift_4_1: function (a, b) { return [a[0] >> b, a[1] >> b, a[2] >> b, a[3] >> b]; },\n        rshift_1_4: function (a, b) { return [a >> b[0], a >> b[1], a >> b[2], a >> b[3]]; },\n        rshift_4_4: function (a, b) { return [a[0] >> b[0], a[1] >> b[1], a[2] >> b[2], a[3] >> b[3]]; },\n        bitnot_1: function (a) { return ~a; },\n        bitnot_2: function (a) { return [~a[0], ~a[1]]; },\n        bitnot_3: function (a) { return [~a[0], ~a[1], ~a[2]]; },\n        bitnot_4: function (a) { return [~a[0], ~a[1], ~a[2], ~a[3]]; },\n        negate_1: function (a) { return -a; },\n        negate_2: function (a) { return [-a[0], -a[1]]; },\n        negate_3: function (a) { return [-a[0], -a[1], -a[2]]; },\n        negate_4: function (a) { return [-a[0], -a[1], -a[2], -a[3]]; },\n        positive_1: function (a) { return Math.abs(a); },\n        positive_2: function (a) { return [Math.abs(a[0]), Math.abs(a[1])]; },\n        positive_3: function (a) { return [Math.abs(a[0]), Math.abs(a[1]), Math.abs(a[2])]; },\n        positive_4: function (a) { return [Math.abs(a[0]), Math.abs(a[1]), Math.abs(a[2]), Math.abs(a[3])]; },\n        abs_1: function (a) { return Math.abs(a); },\n        abs_2: function (a) { return [Math.abs(a[0]), Math.abs(a[1])]; },\n        abs_3: function (a) { return [Math.abs(a[0]), Math.abs(a[1]), Math.abs(a[2])]; },\n        abs_4: function (a) { return [Math.abs(a[0]), Math.abs(a[1]), Math.abs(a[2]), Math.abs(a[3])]; },\n        floor_1: function (a) { return Math.floor(a); },\n        floor_2: function (a) { return [Math.floor(a[0]), Math.floor(a[1])]; },\n        floor_3: function (a) { return [Math.floor(a[0]), Math.floor(a[1]), Math.floor(a[2])]; },\n        floor_4: function (a) { return [Math.floor(a[0]), Math.floor(a[1]), Math.floor(a[2]), Math.floor(a[3])]; },\n        ceil_1: function (a) { return Math.ceil(a); },\n        ceil_2: function (a) { return [Math.ceil(a[0]), Math.ceil(a[1])]; },\n        ceil_3: function (a) { return [Math.ceil(a[0]), Math.ceil(a[1]), Math.ceil(a[2])]; },\n        ceil_4: function (a) { return [Math.ceil(a[0]), Math.ceil(a[1]), Math.ceil(a[2]), Math.ceil(a[3])]; },\n        round_1: function (a) { return Math.round(a); },\n        round_2: function (a) { return [Math.round(a[0]), Math.round(a[1])]; },\n        round_3: function (a) { return [Math.round(a[0]), Math.round(a[1]), Math.round(a[2])]; },\n        round_4: function (a) { return [Math.round(a[0]), Math.round(a[1]), Math.round(a[2]), Math.round(a[3])]; },\n        sign_1: function (a) { return Math.sign(a); },\n        sign_2: function (a) { return [Math.sign(a[0]), Math.sign(a[1])]; },\n        sign_3: function (a) { return [Math.sign(a[0]), Math.sign(a[1]), Math.sign(a[2])]; },\n        sign_4: function (a) { return [Math.sign(a[0]), Math.sign(a[1]), Math.sign(a[2]), Math.sign(a[3])]; },\n        cos_1: function (a) { return Math.cos(a); },\n        cos_2: function (a) { return [Math.cos(a[0]), Math.cos(a[1])]; },\n        cos_3: function (a) { return [Math.cos(a[0]), Math.cos(a[1]), Math.cos(a[2])]; },\n        cos_4: function (a) { return [Math.cos(a[0]), Math.cos(a[1]), Math.cos(a[2]), Math.cos(a[3])]; },\n        sin_1: function (a) { return Math.sin(a); },\n        sin_2: function (a) { return [Math.sin(a[0]), Math.sin(a[1])]; },\n        sin_3: function (a) { return [Math.sin(a[0]), Math.sin(a[1]), Math.sin(a[2])]; },\n        sin_4: function (a) { return [Math.sin(a[0]), Math.sin(a[1]), Math.sin(a[2]), Math.sin(a[3])]; },\n        tan_1: function (a) { return Math.tan(a); },\n        tan_2: function (a) { return [Math.tan(a[0]), Math.tan(a[1])]; },\n        tan_3: function (a) { return [Math.tan(a[0]), Math.tan(a[1]), Math.tan(a[2])]; },\n        tan_4: function (a) { return [Math.tan(a[0]), Math.tan(a[1]), Math.tan(a[2]), Math.tan(a[3])]; },\n        acos_1: function (a) { return Math.acos(a); },\n        acos_2: function (a) { return [Math.acos(a[0]), Math.acos(a[1])]; },\n        acos_3: function (a) { return [Math.acos(a[0]), Math.acos(a[1]), Math.acos(a[2])]; },\n        acos_4: function (a) { return [Math.acos(a[0]), Math.acos(a[1]), Math.acos(a[2]), Math.acos(a[3])]; },\n        asin_1: function (a) { return Math.asin(a); },\n        asin_2: function (a) { return [Math.asin(a[0]), Math.asin(a[1])]; },\n        asin_3: function (a) { return [Math.asin(a[0]), Math.asin(a[1]), Math.asin(a[2])]; },\n        asin_4: function (a) { return [Math.asin(a[0]), Math.asin(a[1]), Math.asin(a[2]), Math.asin(a[3])]; },\n        atan_1: function (a) { return Math.atan(a); },\n        atan_2: function (a) { return [Math.atan(a[0]), Math.atan(a[1])]; },\n        atan_3: function (a) { return [Math.atan(a[0]), Math.atan(a[1]), Math.atan(a[2])]; },\n        atan_4: function (a) { return [Math.atan(a[0]), Math.atan(a[1]), Math.atan(a[2]), Math.atan(a[3])]; },\n        cosh_1: function (a) { return Math.cosh(a); },\n        cosh_2: function (a) { return [Math.cosh(a[0]), Math.cosh(a[1])]; },\n        cosh_3: function (a) { return [Math.cosh(a[0]), Math.cosh(a[1]), Math.cosh(a[2])]; },\n        cosh_4: function (a) { return [Math.cosh(a[0]), Math.cosh(a[1]), Math.cosh(a[2]), Math.cosh(a[3])]; },\n        sinh_1: function (a) { return Math.sinh(a); },\n        sinh_2: function (a) { return [Math.sinh(a[0]), Math.sinh(a[1])]; },\n        sinh_3: function (a) { return [Math.sinh(a[0]), Math.sinh(a[1]), Math.sinh(a[2])]; },\n        sinh_4: function (a) { return [Math.sinh(a[0]), Math.sinh(a[1]), Math.sinh(a[2]), Math.sinh(a[3])]; },\n        tanh_1: function (a) { return Math.tanh(a); },\n        tanh_2: function (a) { return [Math.tanh(a[0]), Math.tanh(a[1])]; },\n        tanh_3: function (a) { return [Math.tanh(a[0]), Math.tanh(a[1]), Math.tanh(a[2])]; },\n        tanh_4: function (a) { return [Math.tanh(a[0]), Math.tanh(a[1]), Math.tanh(a[2]), Math.tanh(a[3])]; },\n        acosh_1: function (a) { return Math.acosh(a); },\n        acosh_2: function (a) { return [Math.acosh(a[0]), Math.acosh(a[1])]; },\n        acosh_3: function (a) { return [Math.acosh(a[0]), Math.acosh(a[1]), Math.acosh(a[2])]; },\n        acosh_4: function (a) { return [Math.acosh(a[0]), Math.acosh(a[1]), Math.acosh(a[2]), Math.acosh(a[3])]; },\n        asinh_1: function (a) { return Math.asinh(a); },\n        asinh_2: function (a) { return [Math.asinh(a[0]), Math.asinh(a[1])]; },\n        asinh_3: function (a) { return [Math.asinh(a[0]), Math.asinh(a[1]), Math.asinh(a[2])]; },\n        asinh_4: function (a) { return [Math.asinh(a[0]), Math.asinh(a[1]), Math.asinh(a[2]), Math.asinh(a[3])]; },\n        atanh_1: function (a) { return Math.atanh(a); },\n        atanh_2: function (a) { return [Math.atanh(a[0]), Math.atanh(a[1])]; },\n        atanh_3: function (a) { return [Math.atanh(a[0]), Math.atanh(a[1]), Math.atanh(a[2])]; },\n        atanh_4: function (a) { return [Math.atanh(a[0]), Math.atanh(a[1]), Math.atanh(a[2]), Math.atanh(a[3])]; },\n        exp_1: function (a) { return Math.exp(a); },\n        exp_2: function (a) { return [Math.exp(a[0]), Math.exp(a[1])]; },\n        exp_3: function (a) { return [Math.exp(a[0]), Math.exp(a[1]), Math.exp(a[2])]; },\n        exp_4: function (a) { return [Math.exp(a[0]), Math.exp(a[1]), Math.exp(a[2]), Math.exp(a[3])]; },\n        log_1: function (a) { return Math.log(a); },\n        log_2: function (a) { return [Math.log(a[0]), Math.log(a[1])]; },\n        log_3: function (a) { return [Math.log(a[0]), Math.log(a[1]), Math.log(a[2])]; },\n        log_4: function (a) { return [Math.log(a[0]), Math.log(a[1]), Math.log(a[2]), Math.log(a[3])]; },\n        log2_1: function (a) { return Math.log2(a); },\n        log2_2: function (a) { return [Math.log2(a[0]), Math.log2(a[1])]; },\n        log2_3: function (a) { return [Math.log2(a[0]), Math.log2(a[1]), Math.log2(a[2])]; },\n        log2_4: function (a) { return [Math.log2(a[0]), Math.log2(a[1]), Math.log2(a[2]), Math.log2(a[3])]; },\n        log10_1: function (a) { return Math.log10(a); },\n        log10_2: function (a) { return [Math.log10(a[0]), Math.log10(a[1])]; },\n        log10_3: function (a) { return [Math.log10(a[0]), Math.log10(a[1]), Math.log10(a[2])]; },\n        log10_4: function (a) { return [Math.log10(a[0]), Math.log10(a[1]), Math.log10(a[2]), Math.log10(a[3])]; },\n        sqrt_1: function (a) { return Math.sqrt(a); },\n        sqrt_2: function (a) { return [Math.sqrt(a[0]), Math.sqrt(a[1])]; },\n        sqrt_3: function (a) { return [Math.sqrt(a[0]), Math.sqrt(a[1]), Math.sqrt(a[2])]; },\n        sqrt_4: function (a) { return [Math.sqrt(a[0]), Math.sqrt(a[1]), Math.sqrt(a[2]), Math.sqrt(a[3])]; },\n        int_2_1_1: function (a, b) { return [a | 0, b | 0]; },\n        int_2_2: function (a) { return [a[0] | 0, a[1] | 0]; },\n        int_3_1_1_1: function (a, b, c) { return [a | 0, b | 0, c | 0]; },\n        int_3_2_1: function (a, b) { return [a[0] | 0, a[1] | 0, b | 0]; },\n        int_3_1_2: function (a, b) { return [a | 0, b[0] | 0, b[1] | 0]; },\n        int_3_3: function (a) { return [a[0] | 0, a[1] | 0, a[2] | 0]; },\n        int_4_1_1_1_1: function (a, b, c, d) { return [a | 0, b | 0, c | 0, d | 0]; },\n        int_4_2_1_1: function (a, b, c) { return [a[0] | 0, a[1] | 0, b | 0, c | 0]; },\n        int_4_1_2_1: function (a, b, c) { return [a | 0, b[0] | 0, b[1] | 0, c | 0]; },\n        int_4_1_1_2: function (a, b, c) { return [a | 0, b | 0, c[0] | 0, c[1] | 0]; },\n        int_4_3_1: function (a, b) { return [a[0] | 0, a[1] | 0, a[2] | 0, b | 0]; },\n        int_4_1_3: function (a, b) { return [a | 0, b[0] | 0, b[1] | 0, b[2] | 0]; },\n        int_4_2_2: function (a, b) { return [a[0] | 0, a[1] | 0, b[0] | 0, b[1] | 0]; },\n        int_4_4: function (a) { return [a[0] | 0, a[1] | 0, a[2] | 0, a[3] | 0]; },\n        float_2_1_1: function (a, b) { return [a, b]; },\n        float_2_2: function (a) { return [a[0], a[1]]; },\n        float_3_1_1_1: function (a, b, c) { return [a, b, c]; },\n        float_3_2_1: function (a, b) { return [a[0], a[1], b]; },\n        float_3_1_2: function (a, b) { return [a, b[0], b[1]]; },\n        float_3_3: function (a) { return [a[0], a[1], a[2]]; },\n        float_4_1_1_1_1: function (a, b, c, d) { return [a, b, c, d]; },\n        float_4_2_1_1: function (a, b, c) { return [a[0], a[1], b, c]; },\n        float_4_1_2_1: function (a, b, c) { return [a, b[0], b[1], c]; },\n        float_4_1_1_2: function (a, b, c) { return [a, b, c[0], c[1]]; },\n        float_4_3_1: function (a, b) { return [a[0], a[1], a[2], b]; },\n        float_4_1_3: function (a, b) { return [a, b[0], b[1], b[2]]; },\n        float_4_2_2: function (a, b) { return [a[0], a[1], b[0], b[1]]; },\n        float_4_4: function (a) { return [a[0], a[1], a[2], a[3]]; },\n        uint_2_1_1: function (a, b) { return [a >>> 0, b >>> 0]; },\n        uint_2_2: function (a) { return [a[0] >>> 0, a[1] >>> 0]; },\n        uint_3_1_1_1: function (a, b, c) { return [a >>> 0, b >>> 0, c >>> 0]; },\n        uint_3_2_1: function (a, b) { return [a[0] >>> 0, a[1] >>> 0, b >>> 0]; },\n        uint_3_1_2: function (a, b) { return [a >>> 0, b[0] >>> 0, b[1] >>> 0]; },\n        uint_3_3: function (a) { return [a[0] >>> 0, a[1] >>> 0, a[2] >>> 0]; },\n        uint_4_1_1_1_1: function (a, b, c, d) { return [a >>> 0, b >>> 0, c >>> 0, d >>> 0]; },\n        uint_4_2_1_1: function (a, b, c) { return [a[0] >>> 0, a[1] >>> 0, b >>> 0, c >>> 0]; },\n        uint_4_1_2_1: function (a, b, c) { return [a >>> 0, b[0] >>> 0, b[1] >>> 0, c >>> 0]; },\n        uint_4_1_1_2: function (a, b, c) { return [a >>> 0, b >>> 0, c[0] >>> 0, c[1] >>> 0]; },\n        uint_4_3_1: function (a, b) { return [a[0] >>> 0, a[1] >>> 0, a[2] >>> 0, b >>> 0]; },\n        uint_4_1_3: function (a, b) { return [a >>> 0, b[0] >>> 0, b[1] >>> 0, b[2] >>> 0]; },\n        uint_4_2_2: function (a, b) { return [a[0] >>> 0, a[1] >>> 0, b[0] >>> 0, b[1] >>> 0]; },\n        uint_4_4: function (a) { return [a[0] >>> 0, a[1] >>> 0, a[2] >>> 0, a[3] >>> 0]; },\n    };\n});\n"}],"emitSkipped":false,"diagnostics":[]},"/std___std_all.ts":{"outputFiles":[{"name":"/std___std_all.js","writeByteOrderMark":false,"text":"var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\ndefine([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.time = exports.__deepClone = exports.__makeMap = exports.map = exports.array = exports.sleep = exports.hashableTypeToString = exports.globalVarGet = exports.globalVarInit = exports.compute = exports.statGraph = exports.stat = exports.flush = exports.print = exports.Mesh = exports.__dummy = void 0;\n    /**__SHADEUP_STRUCT_INJECTION_HOOK__*/\n    exports.__dummy = 1;\n    // import { Mesh } from '/_std/mesh';\n    var Mesh = /** @class */ (function () {\n        function Mesh(prefils) {\n            this.vertices = [];\n            this.triangles = [];\n            this.normals = [];\n            this.tangents = [];\n            this.bitangents = [];\n            this.uvs = [];\n            this.colors = [];\n            this.symbol = Symbol();\n            if (prefils.vertices)\n                this.vertices = prefils.vertices;\n            if (prefils.triangles)\n                this.triangles = prefils.triangles;\n            if (prefils.normals)\n                this.normals = prefils.normals;\n            if (prefils.tangents)\n                this.tangents = prefils.tangents;\n            if (prefils.bitangents)\n                this.bitangents = prefils.bitangents;\n            if (prefils.uvs)\n                this.uvs = prefils.uvs;\n            if (prefils.colors)\n                this.colors = prefils.colors;\n        }\n        Mesh.prototype.getVertices = function () {\n            return this.vertices;\n        };\n        Mesh.prototype.getTriangles = function () {\n            return this.triangles;\n        };\n        Mesh.prototype.getNormals = function () {\n            return this.normals;\n        };\n        Mesh.prototype.getTangents = function () {\n            return this.tangents;\n        };\n        Mesh.prototype.getBitangents = function () {\n            return this.bitangents;\n        };\n        Mesh.prototype.getUVs = function () {\n            return this.uvs;\n        };\n        Mesh.prototype.getColors = function () {\n            return this.colors;\n        };\n        Mesh.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_std_i_iistd_all_ts_245_Mesh\\\",\\\"fields\\\":[[\\\"vertices\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"triangles\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int\\\"},\\\"staticSize\\\":1}],[\\\"normals\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"tangents\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"bitangents\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"uvs\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"},\\\"staticSize\\\":1}],[\\\"colors\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"},\\\"staticSize\\\":1}],[\\\"symbol\\\",{\\\"type\\\":\\\"unknown\\\"}]]}\");\n        };\n        return Mesh;\n    }());\n    exports.Mesh = Mesh;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_std_i_iistd_all_ts_245_Mesh\\\",\\\"fields\\\":[[\\\"vertices\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"triangles\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int\\\"},\\\"staticSize\\\":1}],[\\\"normals\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"tangents\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"bitangents\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"uvs\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"},\\\"staticSize\\\":1}],[\\\"colors\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"},\\\"staticSize\\\":1}],[\\\"symbol\\\",{\\\"type\\\":\\\"unknown\\\"}]]}\"), Mesh)\n    /**\n     * Prints a set of value(s) to the console. Values will be converted to strings before printing.\n     *\n     * @param args Any number of values to print to the console\n     */\n    function print() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        console.log.apply(console, args);\n        if (typeof window['__shadeup_print'] === 'function') {\n            window['__shadeup_print'].apply(window, args);\n        }\n    }\n    exports.print = print;\n    /**\n     * Flushes (executes) all queued compute or draw calls\n     * @shadeup=tag(async) @shadeup=noemit_gpu\n     */\n    function flush() {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(typeof window['flushAdapter'] === 'function')) return [3 /*break*/, 2];\n                        return [4 /*yield*/, window['flushAdapter']()];\n                    case 1: return [2 /*return*/, _a.sent()];\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    }\n    exports.flush = flush;\n    /**\n     * Displays a single value in the stats panel at the top right\n     *\n     * @param name key for this stat (e.g. \"fps\")\n     * @param value any value\n     */\n    function stat(name, value) {\n        if (typeof window['__shadeup_stat'] === 'function') {\n            window['__shadeup_stat'](name, value);\n        }\n    }\n    exports.stat = stat;\n    /**\n     * Display a graph of a numeric value over time\n     *\n     * @param name key for this stat (e.g. \"fps\")\n     * @param value any numeric value\n     * @param sampleRate how often should the graph be updated (e.g. 1 = every call, 2 = every second call, etc.)\n     */\n    function statGraph(name, value, sampleRate) {\n        if (sampleRate === void 0) { sampleRate = 1; }\n        if (typeof window['__shadeup_statGraph'] === 'function') {\n            window['__shadeup_statGraph'](name, value);\n        }\n    }\n    exports.statGraph = statGraph;\n    function infer(fn) {\n        return fn;\n    }\n    // export function drawAlt(keys: shader<ShaderInput, ShaderOutput, 0>) {}\n    // export function draw(fullScreenPixelShader: shader<ShaderInput, ShaderOutput, 0>): void;\n    // export function draw(\n    // \tfirst: Mesh | any | shader<ShaderInput, ShaderOutput>,\n    // \tsecond?: shader<ShaderInput, ShaderOutput>,\n    // \tthird?: shader<ShaderInput, ShaderOutput>\n    // ) {\n    // \tif ('vertices' in first && second && third) {\n    // \t\t__shadeup_dispatch_draw_geometry(first, second, third);\n    // \t} else if (first && !second && !third) {\n    // \t\t__shadeup_dispatch_draw(first as shader<ShaderInput, ShaderOutput>);\n    // \t}\n    // }\n    // draw(makeShader('', (a, b) => {}));\n    // drawAlt(\n    // \tmakeShader(\n    // \t\t'000004808000091289258019303699031390005438610',\n    // \t\t/**@shadeup=shader*/ (__in, __out) => {\n    // \t\t\t__out.color;\n    // \t\t}\n    // \t)\n    // );\n    // /**\n    //  *\n    //  */\n    function compute(workgroups, computeShader) {\n        window.__shadeup_dispatch_compute(workgroups, computeShader);\n    }\n    exports.compute = compute;\n    // function draww(s: shader<{ abc: 123 }, { test: 123 }>) {}\n    // type x<T> = { x: T };\n    // function makeTex<T>(a: T): x<T> {\n    // \treturn { x: a };\n    // }\n    // draw({\n    // \tvertex: shader('abc', (__in, __out) => {}),\n    // \tattachments: [\n    // \t\tmakeTex({ abc: 123 }),\n    // \t\tmakeTex({ abc: 123 }),\n    // \t\tmakeTex({ abc: 123 }),\n    // \t\tmakeTex({ abc: 123 }),\n    // \t\tmakeTex({ abc: 123 }),\n    // \t\tmakeTex({ abc: 123 }),\n    // \t\tmakeTex({ abc: 123 }),\n    // \t\tmakeTex({ abc: 123 })\n    // \t],\n    // \tmesh: new Mesh(),\n    // \tfragment: shader('abc', (__in, __out) => {\n    // \t\t//__out.attachment0\n    // \t})\n    // });\n    function globalVarInit(fileName, varName, initFn, getterFn) {\n        if (!window['shadeup_globals']) {\n            window['shadeup_globals'] = {};\n        }\n        if (!window['shadeup_globals'][fileName]) {\n            window['shadeup_globals'][fileName] = {};\n        }\n        // Disable caching for now\n        var cache = false;\n        if (!window['shadeup_globals'][fileName][varName] || !cache) {\n            window['shadeup_globals'][fileName][varName] = initFn();\n        }\n        window['shadeup_globals'][fileName]['$getter_' + varName] = getterFn;\n        return window['shadeup_globals'][fileName][varName];\n    }\n    exports.globalVarInit = globalVarInit;\n    function globalVarGet(fileName, varName) {\n        if (varName == 'env' || varName == 'PLATFORM_WEBGPU' || varName == 'PLATFORM_WEBGL') {\n            return window[varName];\n        }\n        return window['shadeup_globals'][fileName]['$getter_' + varName]();\n    }\n    exports.globalVarGet = globalVarGet;\n    function hashableTypeToString(k) {\n        if (typeof k == 'number') {\n            return k.toString();\n        }\n        else if (typeof k == 'object') {\n            if (Array.isArray(k)) {\n                return k.map(hashableTypeToString).join(',');\n            }\n            else {\n                return k.toString();\n            }\n        }\n        else {\n            return k.toString();\n        }\n    }\n    exports.hashableTypeToString = hashableTypeToString;\n    Array.prototype.len = function () {\n        return this.length;\n    };\n    Array.prototype.last = function () {\n        return this[this.length - 1];\n    };\n    Array.prototype.first = function () {\n        return this[0];\n    };\n    Array.prototype.append = function (items) {\n        for (var i = 0; i < items.length; i++) {\n            this.push(items[i]);\n        }\n    };\n    Array.prototype.remove = function (index) {\n        this.splice(index, 1);\n    };\n    Array.prototype.__index = function (index) {\n        return this[index];\n    };\n    Array.prototype.__index_assign = function (index, value) {\n        this[index] = value;\n    };\n    Array.prototype.__index_assign_op = function (op_fn, index, value) {\n        this[index] = op_fn(this[index], value);\n    };\n    /** @shadeup=tag(async) */\n    function sleep(seconds) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (resolve) { return setTimeout(resolve, seconds * 1000); })];\n            });\n        });\n    }\n    exports.sleep = sleep;\n    function array(count, initializer) {\n        if (initializer === void 0) { initializer = null; }\n        var arr = new Array(count);\n        if (initializer) {\n            for (var i = 0; i < count; i++) {\n                arr[i] = initializer;\n            }\n        }\n        return arr;\n    }\n    exports.array = array;\n    var map = /** @class */ (function () {\n        function map(entries) {\n            this.pairs = new Map();\n            if (entries)\n                for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n                    var e = entries_1[_i];\n                    this.__index_assign(e[0], e[1]);\n                }\n        }\n        map.prototype.__index = function (key) {\n            if (!this.pairs.has(hashableTypeToString(key))) {\n                throw new Error('Key not found: ' + hashableTypeToString(key));\n            }\n            return this.pairs.get(hashableTypeToString(key))[1];\n        };\n        map.prototype.__index_assign = function (key, value) {\n            this.pairs.set(hashableTypeToString(key), [key, value]);\n        };\n        map.prototype.__index_assign_op = function (op_fn, key, value) {\n            this.pairs.set(hashableTypeToString(key), [key, op_fn(this.__index(key), value)]);\n        };\n        map.prototype.delete = function (key) {\n            this.pairs.delete(hashableTypeToString(key));\n        };\n        map.prototype.has = function (key) {\n            return this.pairs.has(hashableTypeToString(key));\n        };\n        map.prototype.keys = function () {\n            return Array.from(this.pairs.values()).map(function (k) { return k[0]; });\n        };\n        map.prototype.values = function () {\n            return Array.from(this.pairs.values()).map(function (k) { return k[1]; });\n        };\n        map.new = function (entries) {\n            return new map(entries);\n        };\n        map.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_std_i_iistd_all_ts_7982_map\\\",\\\"fields\\\":[[\\\"pairs\\\",null]]}\");\n        };\n        return map;\n    }());\n    exports.map = map;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_std_i_iistd_all_ts_7982_map\\\",\\\"fields\\\":[[\\\"pairs\\\",null]]}\"), map)\n    function __makeMap(initial) {\n        return new map(Object.entries(initial));\n    }\n    exports.__makeMap = __makeMap;\n    function __deepClone(value) {\n        if (typeof value == 'object') {\n            if (Array.isArray(value)) {\n                var res = new Array(value.length);\n                for (var i = 0; i < value.length; i++) {\n                    res[i] = __deepClone(value[i]);\n                }\n                return res;\n            }\n            else {\n                if (value && typeof value.clone == 'function') {\n                    return value.clone();\n                }\n                else {\n                    return value;\n                }\n            }\n        }\n        else {\n            return value;\n        }\n    }\n    exports.__deepClone = __deepClone;\n    var time = /** @class */ (function () {\n        function time() {\n        }\n        /** Saves the current time with a key of name */\n        time.start = function (name) {\n            performance.mark((name !== null && name !== void 0 ? name : '_default') + '_start');\n        };\n        /** Returns the difference in milliseconds between a start with the same key */\n        time.stop = function (name) {\n            performance.mark((name !== null && name !== void 0 ? name : '_default') + '_end');\n            var res = performance.measure((name !== null && name !== void 0 ? name : '_default') + '_diff', (name !== null && name !== void 0 ? name : '_default') + '_start', (name !== null && name !== void 0 ? name : '_default') + '_end');\n            return res.duration;\n        };\n        /**\n         * This returns a decimal resolution time in milliseconds since the page started. Useful for measuring time differences\n         *\n         * This uses performance.now() under the hood:\n         * The performance.now() method returns a high resolution timestamp in milliseconds. It represents the time elapsed since Performance.timeOrigin\n         */\n        time.now = function () {\n            return performance.now();\n        };\n        time.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_std_i_iistd_all_ts_10215_time\\\",\\\"fields\\\":[]}\");\n        };\n        return time;\n    }());\n    exports.time = time;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_std_i_iistd_all_ts_10215_time\\\",\\\"fields\\\":[]}\"), time)\n});\n"}],"emitSkipped":false,"diagnostics":[]},"/std.ts":{"outputFiles":[{"name":"/std.js","writeByteOrderMark":false,"text":"var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\ndefine([\"require\", \"exports\", \"/_std/ui\", \"/_std/mesh\", \"/_std/sdf\", \"/_std/geo\", \"/_std/native\"], function (require, exports, ui_1, mesh_1, sdf_1, geo_1, native_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.geo = exports.sdf = exports.Mesh = exports.mesh = exports.ui = void 0;\n    Object.defineProperty(exports, \"ui\", { enumerable: true, get: function () { return ui_1.ui; } });\n    Object.defineProperty(exports, \"mesh\", { enumerable: true, get: function () { return mesh_1.mesh; } });\n    Object.defineProperty(exports, \"Mesh\", { enumerable: true, get: function () { return mesh_1.Mesh; } });\n    Object.defineProperty(exports, \"sdf\", { enumerable: true, get: function () { return sdf_1.sdf; } });\n    Object.defineProperty(exports, \"geo\", { enumerable: true, get: function () { return geo_1.geo; } });\n    __exportStar(native_1, exports);\n});\n"}],"emitSkipped":false,"diagnostics":[]},"/_std/ui.ts":{"outputFiles":[{"name":"/_std/ui.js","writeByteOrderMark":false,"text":"define([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.ui = void 0;\n    var ui;\n    (function (ui) {\n        function puck(position) {\n            return window._SHADEUP_UI_PUCK(position);\n        }\n        ui.puck = puck;\n        function draggable(position, radius) {\n            if (radius === void 0) { radius = 10; }\n            return window._SHADEUP_UI_PUCK(position, radius, true);\n        }\n        ui.draggable = draggable;\n        function textbox(value) {\n            return window._SHADEUP_UI_CONTROL('textbox', value);\n        }\n        ui.textbox = textbox;\n        function slider(value, min, max) {\n            return window._SHADEUP_UI_SLIDER(value, { min: min, max: max });\n        }\n        ui.slider = slider;\n        function label(text) {\n            return window._SHADEUP_UI_CONTROL('label', text);\n        }\n        ui.label = label;\n        function checkbox(value) {\n            return window._SHADEUP_UI_CONTROL('checkbox', value);\n        }\n        ui.checkbox = checkbox;\n        function combo(value, options) {\n            return window._SHADEUP_UI_CONTROL('combo', value, { options: options });\n        }\n        ui.combo = combo;\n        function group(text) {\n            return window._SHADEUP_UI_CONTROL('group', text);\n        }\n        ui.group = group;\n        function button(text) {\n            return window._SHADEUP_UI_CONTROL('button', false, { text: text });\n        }\n        ui.button = button;\n        function pop() {\n            window._SHADEUP_UI_CONTROL('pop');\n        }\n        ui.pop = pop;\n    })(ui = exports.ui || (exports.ui = {}));\n});\n"}],"emitSkipped":false,"diagnostics":[]},"/_std/native.ts":{"outputFiles":[{"name":"/_std/native.js","writeByteOrderMark":false,"text":"define([\"require\", \"exports\", \"/_std/common\"], function (require, exports, common_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.KeyboardInputState = exports.MouseInputState = exports.FrameContext = exports.shadeupMakeTextureFromUrl = void 0;\n    function shadeupMakeTextureFromUrl(url) {\n        return window['shadeupMakeTextureFromUrlNative'](url);\n    }\n    exports.shadeupMakeTextureFromUrl = shadeupMakeTextureFromUrl;\n    var FrameContext = /** @class */ (function () {\n        function FrameContext() {\n            /** Mouse/touch screen input state for this frame */\n            this.mouse = new MouseInputState();\n            /** Keyboard input state for this frame */\n            this.keyboard = new KeyboardInputState();\n            /** Controllable camera (Hold right click and use WASD to move) */\n            this.camera = new common_1.Camera();\n            this.camera2d = new common_1.Camera2d();\n        }\n        FrameContext.prototype.configureCamera = function (options) { };\n        /**\n         * Use external values from the host JavaScript environment.\n         */\n        FrameContext.prototype.input = function (key, defaultValue) {\n            return defaultValue;\n        };\n        /**\n         * Send values to the host JavaScript environment.\n         */\n        FrameContext.prototype.output = function (key, value) { };\n        FrameContext.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_native_ts_313_FrameContext\\\",\\\"fields\\\":[[\\\"deltaTime\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"time\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"screenSize\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"frame\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int\\\"}],[\\\"mouse\\\",{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_native_ts_1590_MouseInputState\\\",\\\"fields\\\":[[\\\"screen\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"uv\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"startScreen\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"startUv\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"deltaUv\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"frameDeltaUv\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"deltaScreen\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"frameDeltaScreen\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"button\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"},\\\"staticSize\\\":3}],[\\\"clicked\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"},\\\"staticSize\\\":3}],[\\\"dragging\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"wheel\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"velocity\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"focused\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}]]}],[\\\"keyboard\\\",{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_native_ts_3174_KeyboardInputState\\\",\\\"fields\\\":[[\\\"backspace\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"tab\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"enter\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"shiftLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"shiftRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"controlLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"controlRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"altLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"altRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pause\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"capsLock\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"escape\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"space\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pageUp\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pageDown\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"end\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"home\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"arrowLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"arrowUp\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"arrowRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"arrowDown\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"printScreen\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"insert\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"delete\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit0\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit1\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit2\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit3\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit4\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit5\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit6\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit7\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit8\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit9\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyA\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyB\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyC\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyD\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyE\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyF\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyG\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyH\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyI\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyJ\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyK\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyL\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyM\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyN\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyO\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyP\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyQ\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyR\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyS\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyT\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyU\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyV\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyW\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyX\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyY\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyZ\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"metaLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"metaRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"contextMenu\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad0\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad1\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad2\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad3\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad4\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad5\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad6\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad7\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad8\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad9\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpadMultiply\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpadAdd\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpadSubtract\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpadDecimal\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpadDivide\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f1\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f2\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f3\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f4\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f5\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f6\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f7\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f8\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f9\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f10\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f11\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f12\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numLock\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"scrollLock\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"semicolon\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"equal\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"comma\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"minus\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"period\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"slash\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"backquote\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"bracketLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"backslash\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"bracketRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"quote\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedBackspace\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedTab\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedEnter\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedShiftLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedShiftRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedControlLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedControlRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedAltLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedAltRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedPause\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedCapsLock\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedEscape\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedSpace\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedPageUp\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedPageDown\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedEnd\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedHome\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedArrowLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedArrowUp\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedArrowRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedArrowDown\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedPrintScreen\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedInsert\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDelete\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit0\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit1\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit2\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit3\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit4\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit5\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit6\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit7\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit8\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit9\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyA\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyB\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyC\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyD\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyE\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyF\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyG\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyH\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyI\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyJ\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyK\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyL\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyM\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyN\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyO\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyP\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyQ\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyR\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyS\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyT\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyU\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyV\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyW\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyX\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyY\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyZ\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedMetaLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedMetaRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedContextMenu\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad0\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad1\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad2\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad3\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad4\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad5\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad6\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad7\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad8\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad9\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpadMultiply\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpadAdd\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpadSubtract\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpadDecimal\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpadDivide\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF1\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF2\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF3\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF4\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF5\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF6\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF7\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF8\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF9\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF10\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF11\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF12\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumLock\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedScrollLock\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedSemicolon\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedEqual\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedComma\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedMinus\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedPeriod\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedSlash\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedBackquote\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedBracketLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedBackslash\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedBracketRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedQuote\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"arrowVector\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}]]}],[\\\"camera\\\",{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_common_ts_10663_Camera\\\",\\\"fields\\\":[[\\\"position\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"}],[\\\"rotation\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"width\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"height\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"fov\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"near\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"far\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}]]}],[\\\"camera2d\\\",{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_common_ts_9656_Camera2d\\\",\\\"fields\\\":[[\\\"position\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"zoom\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}]]}]]}\");\n        };\n        return FrameContext;\n    }());\n    exports.FrameContext = FrameContext;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_native_ts_313_FrameContext\\\",\\\"fields\\\":[[\\\"deltaTime\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"time\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"screenSize\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"frame\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int\\\"}],[\\\"mouse\\\",{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_native_ts_1590_MouseInputState\\\",\\\"fields\\\":[[\\\"screen\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"uv\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"startScreen\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"startUv\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"deltaUv\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"frameDeltaUv\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"deltaScreen\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"frameDeltaScreen\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"button\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"},\\\"staticSize\\\":3}],[\\\"clicked\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"},\\\"staticSize\\\":3}],[\\\"dragging\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"wheel\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"velocity\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"focused\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}]]}],[\\\"keyboard\\\",{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_native_ts_3174_KeyboardInputState\\\",\\\"fields\\\":[[\\\"backspace\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"tab\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"enter\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"shiftLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"shiftRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"controlLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"controlRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"altLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"altRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pause\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"capsLock\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"escape\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"space\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pageUp\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pageDown\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"end\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"home\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"arrowLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"arrowUp\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"arrowRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"arrowDown\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"printScreen\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"insert\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"delete\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit0\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit1\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit2\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit3\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit4\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit5\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit6\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit7\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit8\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit9\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyA\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyB\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyC\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyD\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyE\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyF\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyG\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyH\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyI\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyJ\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyK\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyL\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyM\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyN\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyO\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyP\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyQ\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyR\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyS\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyT\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyU\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyV\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyW\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyX\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyY\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyZ\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"metaLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"metaRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"contextMenu\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad0\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad1\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad2\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad3\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad4\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad5\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad6\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad7\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad8\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad9\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpadMultiply\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpadAdd\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpadSubtract\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpadDecimal\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpadDivide\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f1\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f2\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f3\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f4\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f5\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f6\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f7\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f8\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f9\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f10\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f11\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f12\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numLock\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"scrollLock\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"semicolon\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"equal\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"comma\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"minus\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"period\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"slash\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"backquote\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"bracketLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"backslash\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"bracketRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"quote\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedBackspace\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedTab\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedEnter\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedShiftLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedShiftRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedControlLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedControlRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedAltLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedAltRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedPause\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedCapsLock\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedEscape\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedSpace\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedPageUp\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedPageDown\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedEnd\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedHome\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedArrowLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedArrowUp\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedArrowRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedArrowDown\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedPrintScreen\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedInsert\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDelete\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit0\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit1\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit2\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit3\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit4\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit5\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit6\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit7\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit8\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit9\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyA\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyB\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyC\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyD\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyE\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyF\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyG\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyH\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyI\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyJ\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyK\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyL\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyM\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyN\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyO\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyP\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyQ\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyR\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyS\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyT\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyU\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyV\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyW\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyX\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyY\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyZ\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedMetaLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedMetaRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedContextMenu\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad0\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad1\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad2\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad3\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad4\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad5\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad6\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad7\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad8\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad9\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpadMultiply\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpadAdd\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpadSubtract\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpadDecimal\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpadDivide\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF1\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF2\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF3\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF4\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF5\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF6\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF7\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF8\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF9\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF10\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF11\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF12\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumLock\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedScrollLock\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedSemicolon\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedEqual\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedComma\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedMinus\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedPeriod\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedSlash\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedBackquote\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedBracketLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedBackslash\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedBracketRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedQuote\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"arrowVector\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}]]}],[\\\"camera\\\",{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_common_ts_10663_Camera\\\",\\\"fields\\\":[[\\\"position\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"}],[\\\"rotation\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"width\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"height\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"fov\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"near\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"far\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}]]}],[\\\"camera2d\\\",{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_common_ts_9656_Camera2d\\\",\\\"fields\\\":[[\\\"position\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"zoom\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}]]}]]}\"), FrameContext)\n    var MouseInputState = /** @class */ (function () {\n        function MouseInputState() {\n            /** , Some(\"Mouse button down state for buttons 0-3 (left, middle, right */\n            this.button = [false, false, false];\n            /** Mouse button pressed state for buttons 0-3 (left, middle, right) */\n            this.clicked = [false, false, false];\n        }\n        MouseInputState.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_native_ts_1590_MouseInputState\\\",\\\"fields\\\":[[\\\"screen\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"uv\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"startScreen\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"startUv\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"deltaUv\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"frameDeltaUv\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"deltaScreen\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"frameDeltaScreen\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"button\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"},\\\"staticSize\\\":3}],[\\\"clicked\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"},\\\"staticSize\\\":3}],[\\\"dragging\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"wheel\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"velocity\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"focused\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}]]}\");\n        };\n        return MouseInputState;\n    }());\n    exports.MouseInputState = MouseInputState;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_native_ts_1590_MouseInputState\\\",\\\"fields\\\":[[\\\"screen\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"uv\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"startScreen\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"startUv\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"deltaUv\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"frameDeltaUv\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"deltaScreen\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"frameDeltaScreen\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"button\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"},\\\"staticSize\\\":3}],[\\\"clicked\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"},\\\"staticSize\\\":3}],[\\\"dragging\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"wheel\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"velocity\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"focused\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}]]}\"), MouseInputState)\n    var KeyboardInputState = /** @class */ (function () {\n        function KeyboardInputState() {\n        }\n        KeyboardInputState.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_native_ts_3174_KeyboardInputState\\\",\\\"fields\\\":[[\\\"backspace\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"tab\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"enter\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"shiftLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"shiftRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"controlLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"controlRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"altLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"altRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pause\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"capsLock\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"escape\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"space\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pageUp\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pageDown\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"end\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"home\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"arrowLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"arrowUp\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"arrowRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"arrowDown\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"printScreen\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"insert\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"delete\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit0\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit1\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit2\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit3\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit4\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit5\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit6\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit7\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit8\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit9\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyA\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyB\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyC\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyD\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyE\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyF\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyG\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyH\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyI\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyJ\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyK\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyL\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyM\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyN\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyO\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyP\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyQ\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyR\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyS\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyT\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyU\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyV\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyW\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyX\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyY\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyZ\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"metaLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"metaRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"contextMenu\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad0\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad1\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad2\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad3\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad4\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad5\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad6\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad7\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad8\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad9\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpadMultiply\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpadAdd\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpadSubtract\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpadDecimal\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpadDivide\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f1\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f2\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f3\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f4\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f5\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f6\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f7\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f8\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f9\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f10\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f11\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f12\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numLock\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"scrollLock\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"semicolon\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"equal\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"comma\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"minus\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"period\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"slash\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"backquote\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"bracketLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"backslash\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"bracketRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"quote\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedBackspace\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedTab\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedEnter\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedShiftLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedShiftRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedControlLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedControlRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedAltLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedAltRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedPause\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedCapsLock\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedEscape\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedSpace\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedPageUp\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedPageDown\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedEnd\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedHome\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedArrowLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedArrowUp\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedArrowRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedArrowDown\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedPrintScreen\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedInsert\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDelete\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit0\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit1\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit2\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit3\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit4\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit5\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit6\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit7\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit8\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit9\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyA\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyB\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyC\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyD\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyE\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyF\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyG\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyH\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyI\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyJ\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyK\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyL\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyM\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyN\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyO\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyP\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyQ\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyR\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyS\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyT\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyU\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyV\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyW\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyX\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyY\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyZ\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedMetaLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedMetaRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedContextMenu\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad0\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad1\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad2\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad3\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad4\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad5\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad6\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad7\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad8\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad9\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpadMultiply\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpadAdd\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpadSubtract\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpadDecimal\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpadDivide\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF1\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF2\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF3\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF4\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF5\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF6\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF7\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF8\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF9\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF10\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF11\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF12\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumLock\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedScrollLock\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedSemicolon\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedEqual\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedComma\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedMinus\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedPeriod\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedSlash\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedBackquote\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedBracketLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedBackslash\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedBracketRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedQuote\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"arrowVector\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}]]}\");\n        };\n        return KeyboardInputState;\n    }());\n    exports.KeyboardInputState = KeyboardInputState;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_native_ts_3174_KeyboardInputState\\\",\\\"fields\\\":[[\\\"backspace\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"tab\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"enter\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"shiftLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"shiftRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"controlLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"controlRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"altLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"altRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pause\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"capsLock\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"escape\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"space\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pageUp\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pageDown\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"end\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"home\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"arrowLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"arrowUp\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"arrowRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"arrowDown\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"printScreen\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"insert\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"delete\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit0\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit1\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit2\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit3\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit4\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit5\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit6\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit7\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit8\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"digit9\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyA\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyB\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyC\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyD\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyE\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyF\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyG\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyH\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyI\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyJ\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyK\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyL\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyM\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyN\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyO\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyP\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyQ\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyR\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyS\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyT\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyU\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyV\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyW\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyX\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyY\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"keyZ\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"metaLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"metaRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"contextMenu\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad0\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad1\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad2\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad3\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad4\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad5\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad6\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad7\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad8\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpad9\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpadMultiply\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpadAdd\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpadSubtract\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpadDecimal\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numpadDivide\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f1\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f2\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f3\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f4\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f5\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f6\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f7\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f8\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f9\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f10\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f11\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"f12\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"numLock\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"scrollLock\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"semicolon\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"equal\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"comma\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"minus\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"period\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"slash\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"backquote\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"bracketLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"backslash\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"bracketRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"quote\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedBackspace\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedTab\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedEnter\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedShiftLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedShiftRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedControlLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedControlRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedAltLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedAltRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedPause\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedCapsLock\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedEscape\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedSpace\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedPageUp\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedPageDown\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedEnd\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedHome\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedArrowLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedArrowUp\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedArrowRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedArrowDown\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedPrintScreen\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedInsert\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDelete\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit0\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit1\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit2\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit3\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit4\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit5\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit6\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit7\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit8\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedDigit9\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyA\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyB\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyC\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyD\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyE\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyF\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyG\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyH\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyI\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyJ\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyK\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyL\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyM\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyN\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyO\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyP\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyQ\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyR\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyS\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyT\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyU\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyV\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyW\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyX\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyY\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedKeyZ\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedMetaLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedMetaRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedContextMenu\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad0\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad1\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad2\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad3\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad4\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad5\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad6\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad7\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad8\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpad9\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpadMultiply\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpadAdd\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpadSubtract\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpadDecimal\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumpadDivide\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF1\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF2\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF3\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF4\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF5\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF6\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF7\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF8\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF9\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF10\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF11\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedF12\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedNumLock\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedScrollLock\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedSemicolon\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedEqual\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedComma\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedMinus\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedPeriod\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedSlash\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedBackquote\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedBracketLeft\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedBackslash\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedBracketRight\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pressedQuote\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"arrowVector\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}]]}\"), KeyboardInputState)\n});\n"}],"emitSkipped":false,"diagnostics":[]},"/_std/paint.ts":{"outputFiles":[{"name":"/_std/paint.js","writeByteOrderMark":false,"text":"define([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.PaintingContext = void 0;\n    var PaintingContext = /** @class */ (function () {\n        function PaintingContext(canvas, gl) {\n            var _this = this;\n            this.markDirtyCallback = function () { };\n            this.__ctx = null;\n            this.__gl = null;\n            this.__offscreen_canvas = null;\n            this.__program = null;\n            this.stagedChanges = false;\n            this.dirty = false;\n            this.fastPoints = false;\n            this.fastPointsBuffer = null;\n            this.__currentColor = null;\n            this.pointsCounter = 0;\n            this.cacheSize = [0, 0];\n            if (!gl)\n                return;\n            this.__gl = gl;\n            this.__canvas = canvas;\n            this.__offscreen_canvas = document.createElement('canvas');\n            this.__offscreen_canvas.width = canvas.width;\n            this.__offscreen_canvas.height = canvas.height;\n            // document.body.appendChild(this.__offscreen_canvas);\n            this.__ctx = this.__offscreen_canvas.getContext('2d', {\n                willReadFrequently: true\n            });\n            this.__offscreen_canvas.style.position = 'absolute';\n            this.__offscreen_canvas.style.zIndex = '10';\n            // document.body.appendChild(this.__offscreen_canvas);\n            this.__setColor([0, 0, 0, 1]);\n            gl.addEventListener('context', function (toContext) {\n                if (toContext == 'draw') {\n                    _this.flush();\n                }\n            });\n            gl.addEventListener('flush', function () {\n                _this.flush();\n            });\n        }\n        PaintingContext.prototype.flush = function () {\n            if (!this.__gl)\n                return;\n            if (!this.__canvas)\n                return;\n            if (!this.__offscreen_canvas)\n                return;\n            if (!this.stagedChanges)\n                return;\n            if (this.fastPoints)\n                this.flushPoints();\n            this.__gl.drawImage(this.__offscreen_canvas);\n            this.stagedChanges = false;\n            if (this.__offscreen_canvas.width != this.__canvas.width ||\n                this.__offscreen_canvas.height != this.__canvas.height) {\n                this.__offscreen_canvas.width = this.__canvas.width;\n                this.__offscreen_canvas.height = this.__canvas.height;\n            }\n            this.pointsCounter = 0;\n        };\n        PaintingContext.prototype.__beforeDraw = function () {\n            var _a;\n            if (!this.__offscreen_canvas)\n                return;\n            if (!this.__ctx)\n                return;\n            if (!this.__canvas)\n                return;\n            this.markDirtyCallback();\n            (_a = this.__gl) === null || _a === void 0 ? void 0 : _a.activatePaintContext();\n            if (!this.stagedChanges) {\n                this.__ctx.clearRect(0, 0, this.__canvas.width, this.__canvas.height);\n                this.__ctx.drawImage(this.__canvas, 0, 0);\n                var color = this.__currentColor;\n                this.__ctx.fillStyle = \"rgba(\".concat(color[0] * 255, \", \").concat(color[1] * 255, \", \").concat(color[2] * 255, \", \").concat(color[3], \")\");\n                this.__ctx.strokeStyle = \"rgba(\".concat(color[0] * 255, \", \").concat(color[1] * 255, \", \").concat(color[2] * 255, \", \").concat(color[3], \")\");\n            }\n        };\n        PaintingContext.prototype.__afterDraw = function () {\n            var gl = this.__gl;\n            this.dirty = true;\n            this.stagedChanges = true;\n        };\n        PaintingContext.prototype.__setColor = function (color) {\n            if (!this.__ctx || !color)\n                return;\n            if (this.__currentColor &&\n                this.__currentColor[0] == color[0] &&\n                this.__currentColor[1] == color[1] &&\n                this.__currentColor[2] == color[2] &&\n                this.__currentColor[3] == color[3])\n                return;\n            this.__ctx.strokeStyle = \"rgba(\".concat(color[0] * 255, \", \").concat(color[1] * 255, \", \").concat(color[2] * 255, \", \").concat(color[3], \")\");\n            this.__ctx.fillStyle = \"rgba(\".concat(color[0] * 255, \", \").concat(color[1] * 255, \", \").concat(color[2] * 255, \", \").concat(color[3], \")\");\n            this.__currentColor = [color[0], color[1], color[2], color[3]];\n        };\n        PaintingContext.prototype.fillRect = function (pos, size, color) {\n            if (!this.__ctx)\n                return;\n            this.flushPoints();\n            this.__beforeDraw();\n            this.__setColor(color);\n            this.__ctx.fillRect(pos[0], pos[1], size[0], size[1]);\n            this.__afterDraw();\n            this.pointsCounter = 0;\n        };\n        PaintingContext.prototype.fillCircle = function (pos, radius, color) {\n            if (!this.__ctx)\n                return;\n            this.flushPoints();\n            this.__beforeDraw();\n            this.__setColor(color);\n            this.__ctx.beginPath();\n            this.__ctx.arc(pos[0], pos[1], radius, 0, Math.PI * 2);\n            this.__ctx.fill();\n            this.__afterDraw();\n            this.pointsCounter = 0;\n        };\n        PaintingContext.prototype.fillArc = function (pos, radius, startAngle, endAngle, color) {\n            if (!this.__ctx)\n                return;\n            this.flushPoints();\n            this.__beforeDraw();\n            this.__setColor(color);\n            this.__ctx.beginPath();\n            this.__ctx.arc(pos[0], pos[1], radius, startAngle, endAngle);\n            this.__ctx.fill();\n            this.__afterDraw();\n            this.pointsCounter = 0;\n        };\n        PaintingContext.prototype.line = function (pos1, pos2, color, width) {\n            if (width === void 0) { width = 1; }\n            if (!this.__ctx)\n                return;\n            this.flushPoints();\n            this.__beforeDraw();\n            this.__setColor(color);\n            this.__ctx.beginPath();\n            this.__ctx.moveTo(pos1[0], pos1[1]);\n            this.__ctx.lineTo(pos2[0], pos2[1]);\n            this.__ctx.lineWidth = width;\n            this.__ctx.stroke();\n            this.__afterDraw();\n            this.pointsCounter = 0;\n        };\n        PaintingContext.prototype.circle = function (pos, radius, color, width) {\n            if (width === void 0) { width = 1; }\n            if (!this.__ctx)\n                return;\n            this.flushPoints();\n            this.__beforeDraw();\n            this.__setColor(color);\n            this.__ctx.beginPath();\n            this.__ctx.arc(pos[0], pos[1], radius, 0, Math.PI * 2);\n            this.__ctx.lineWidth = width;\n            this.__ctx.stroke();\n            this.__afterDraw();\n            this.pointsCounter = 0;\n        };\n        PaintingContext.prototype.arc = function (pos, radius, startAngle, endAngle, color, width) {\n            if (width === void 0) { width = 1; }\n            if (!this.__ctx)\n                return;\n            this.flushPoints();\n            this.__beforeDraw();\n            this.__setColor(color);\n            this.__ctx.beginPath();\n            this.__ctx.arc(pos[0], pos[1], radius, startAngle, endAngle);\n            this.__ctx.lineWidth = width;\n            this.__ctx.stroke();\n            this.__afterDraw();\n            this.pointsCounter = 0;\n        };\n        PaintingContext.prototype.text = function (pos, text, color) {\n            if (!this.__ctx)\n                return;\n            this.flushPoints();\n            this.__beforeDraw();\n            this.__setColor(color);\n            this.__ctx.fillText(text, pos[0], pos[1]);\n            this.__afterDraw();\n            this.pointsCounter = 0;\n        };\n        PaintingContext.prototype.startPath = function (pos) {\n            if (!this.__ctx)\n                return;\n            this.flushPoints();\n            this.__beforeDraw();\n            this.__ctx.beginPath();\n            this.__ctx.moveTo(pos[0], pos[1]);\n        };\n        PaintingContext.prototype.lineTo = function (pos) {\n            if (!this.__ctx)\n                return;\n            this.__ctx.lineTo(pos[0], pos[1]);\n        };\n        PaintingContext.prototype.strokePath = function (color, width) {\n            if (width === void 0) { width = 1; }\n            if (!this.__ctx)\n                return;\n            this.__ctx.lineWidth = width;\n            this.__setColor(color);\n            this.__ctx.stroke();\n            this.__afterDraw();\n            this.pointsCounter = 0;\n        };\n        PaintingContext.prototype.fillPath = function (color) {\n            if (!this.__ctx)\n                return;\n            this.__setColor(color);\n            this.__ctx.fill();\n            this.__afterDraw();\n            this.pointsCounter = 0;\n        };\n        PaintingContext.prototype.setStrokeWidth = function (width) {\n            if (!this.__ctx)\n                return;\n            this.__ctx.lineWidth = width;\n        };\n        PaintingContext.prototype.setFont = function (font) {\n            if (!this.__ctx)\n                return;\n            this.__ctx.font = font;\n        };\n        PaintingContext.prototype.setFontSize = function (size) {\n            if (!this.__ctx)\n                return;\n            this.__ctx.font = \"\".concat(size, \"px \").concat(this.__ctx.font.split(' ').slice(1).join(' '));\n        };\n        PaintingContext.prototype.setTextAlign = function (align) {\n            if (!this.__ctx)\n                return;\n            this.__ctx.textAlign = align;\n        };\n        PaintingContext.prototype.setTextBaseline = function (baseline) {\n            if (!this.__ctx)\n                return;\n            this.__ctx.textBaseline = baseline;\n        };\n        PaintingContext.prototype.setLineCap = function (cap) {\n            if (!this.__ctx)\n                return;\n            this.__ctx.lineCap = cap;\n        };\n        PaintingContext.prototype.setLineJoin = function (join) {\n            if (!this.__ctx)\n                return;\n            this.__ctx.lineJoin = join;\n        };\n        PaintingContext.prototype.setMiterLimit = function (limit) {\n            if (!this.__ctx)\n                return;\n            this.__ctx.miterLimit = limit;\n        };\n        PaintingContext.prototype.setShadowColor = function (color) {\n            if (!this.__ctx)\n                return;\n            this.__ctx.shadowColor = \"rgba(\".concat(color[0] * 255, \", \").concat(color[1] * 255, \", \").concat(color[2] * 255, \", \").concat(color[3], \")\");\n        };\n        PaintingContext.prototype.setShadowBlur = function (blur) {\n            if (!this.__ctx)\n                return;\n            this.__ctx.shadowBlur = blur;\n        };\n        PaintingContext.prototype.setShadowOffset = function (offset) {\n            if (!this.__ctx)\n                return;\n            this.__ctx.shadowOffsetX = offset[0];\n            this.__ctx.shadowOffsetY = offset[1];\n        };\n        PaintingContext.prototype.setGlobalAlpha = function (alpha) {\n            if (!this.__ctx)\n                return;\n            this.__ctx.globalAlpha = alpha;\n        };\n        PaintingContext.prototype.setGlobalCompositeOperation = function (op) {\n            if (!this.__ctx)\n                return;\n            this.__ctx.globalCompositeOperation = op;\n        };\n        PaintingContext.prototype.setImageSmoothingEnabled = function (enabled) {\n            if (!this.__ctx)\n                return;\n            this.__ctx.imageSmoothingEnabled = enabled;\n        };\n        PaintingContext.prototype.setImageSmoothingQuality = function (quality) {\n            if (!this.__ctx)\n                return;\n            this.__ctx.imageSmoothingQuality = quality;\n        };\n        PaintingContext.prototype.setLineDash = function (dash) {\n            if (!this.__ctx)\n                return;\n            this.__ctx.setLineDash(dash);\n        };\n        PaintingContext.prototype.setLineDashOffset = function (offset) {\n            if (!this.__ctx)\n                return;\n            this.__ctx.lineDashOffset = offset;\n        };\n        PaintingContext.prototype.setTransform = function (a, b, c, d, e, f) {\n            if (!this.__ctx)\n                return;\n            this.__ctx.setTransform(a, b, c, d, e, f);\n        };\n        PaintingContext.prototype.resetTransform = function () {\n            if (!this.__ctx)\n                return;\n            this.__ctx.resetTransform();\n        };\n        PaintingContext.prototype.scale = function (v) {\n            if (!this.__ctx)\n                return;\n            this.__ctx.scale(v[0], v[1]);\n        };\n        PaintingContext.prototype.rotate = function (angle) {\n            if (!this.__ctx)\n                return;\n            this.__ctx.rotate(angle);\n        };\n        PaintingContext.prototype.translate = function (v) {\n            if (!this.__ctx)\n                return;\n            this.__ctx.translate(v[0], v[1]);\n        };\n        PaintingContext.prototype.flushPoints = function () {\n            if (!this.__ctx)\n                return;\n            if (!this.fastPoints)\n                return;\n            if (!this.fastPointsBuffer)\n                return;\n            this.__ctx.putImageData(this.fastPointsBuffer, 0, 0);\n            this.fastPoints = false;\n            this.fastPointsBuffer = null;\n            this.pointsCounter = 0;\n        };\n        PaintingContext.prototype.point = function (pos, color) {\n            if (!this.__ctx)\n                return;\n            this.pointsCounter++;\n            this.__beforeDraw();\n            if (this.pointsCounter > 10) {\n                if (!this.fastPoints) {\n                    this.fastPoints = true;\n                    this.cacheSize = [this.__offscreen_canvas.width, this.__offscreen_canvas.height];\n                    this.fastPointsBuffer = this.__ctx.getImageData(0, 0, this.cacheSize[0], this.cacheSize[1]);\n                }\n                if (!this.fastPointsBuffer)\n                    return;\n                var x = Math.floor(pos[0]);\n                var y = Math.floor(pos[1]);\n                var index = (y * this.cacheSize[0] + x) * 4;\n                if (!color) {\n                    color = this.__currentColor;\n                }\n                var oldColorx = this.fastPointsBuffer.data[index] / 255;\n                var oldColory = this.fastPointsBuffer.data[index + 1] / 255;\n                var oldColorz = this.fastPointsBuffer.data[index + 2] / 255;\n                var oldColora = this.fastPointsBuffer.data[index + 3] / 255;\n                this.fastPointsBuffer.data[index] =\n                    color[0] * 255 * color[3] + oldColorx * 255 * (1 - color[3]);\n                this.fastPointsBuffer.data[index + 1] =\n                    color[1] * 255 * color[3] + oldColory * 255 * (1 - color[3]);\n                this.fastPointsBuffer.data[index + 2] =\n                    color[2] * 255 * color[3] + oldColorz * 255 * (1 - color[3]);\n                this.fastPointsBuffer.data[index + 3] = color[3] * 255 + oldColora * 255 * (1 - color[3]);\n            }\n            else {\n                this.__setColor(color);\n                this.__ctx.fillRect(pos[0], pos[1], 1, 1);\n            }\n            this.__afterDraw();\n        };\n        PaintingContext.prototype.vector = function (pos, dir, color, width) {\n            if (color === void 0) { color = [0.9803921568627451, 0.8, 0.08235294117647059, 1]; }\n            if (width === void 0) { width = 4; }\n            if (!this.__ctx || (dir[0] == 0 && dir[1] == 0))\n                return;\n            this.__beforeDraw();\n            this.__setColor(color);\n            this.__ctx.beginPath();\n            this.setStrokeWidth(width);\n            this.__ctx.moveTo(pos[0], pos[1]);\n            this.__ctx.lineCap = 'round';\n            this.__ctx.lineTo(pos[0] + dir[0], pos[1] + dir[1]);\n            this.__ctx.stroke();\n            this.__ctx.beginPath();\n            this.__ctx.moveTo(pos[0] + dir[0], pos[1] + dir[1]);\n            // Arrows\n            var arrowSize = 20;\n            var arrowAngle = Math.PI / 5;\n            var dirAngle = Math.atan2(dir[1], dir[0]) + Math.PI;\n            var arrow1 = [\n                Math.cos(dirAngle + arrowAngle) * arrowSize,\n                Math.sin(dirAngle + arrowAngle) * arrowSize\n            ];\n            var arrow2 = [\n                Math.cos(dirAngle - arrowAngle) * arrowSize,\n                Math.sin(dirAngle - arrowAngle) * arrowSize\n            ];\n            this.__ctx.lineTo(pos[0] + dir[0] + arrow1[0], pos[1] + dir[1] + arrow1[1]);\n            this.__ctx.moveTo(pos[0] + dir[0], pos[1] + dir[1]);\n            this.__ctx.lineTo(pos[0] + dir[0] + arrow2[0], pos[1] + dir[1] + arrow2[1]);\n            this.__ctx.stroke();\n            this.__afterDraw();\n            this.pointsCounter = 0;\n        };\n        PaintingContext.prototype.grid = function (center, count, gap, color, width) {\n            if (color === void 0) { color = [0.1607843137254902, 0.1450980392156863, 0.1411764705882353, 1]; }\n            if (width === void 0) { width = 2; }\n            if (!this.__ctx)\n                return;\n            this.__beforeDraw();\n            this.__setColor(color);\n            this.__ctx.beginPath();\n            this.setStrokeWidth(width);\n            var start = [\n                center[0] - (count[0] / 2) * gap[0],\n                center[1] - (count[1] / 2) * gap[1]\n            ];\n            for (var i = 0; i <= count[0]; i++) {\n                this.__ctx.moveTo(start[0] + i * gap[0], start[1]);\n                this.__ctx.lineTo(start[0] + i * gap[0], start[1] + count[1] * gap[1]);\n            }\n            for (var i = 0; i <= count[1]; i++) {\n                this.__ctx.moveTo(start[0], start[1] + i * gap[1]);\n                this.__ctx.lineTo(start[0] + count[0] * gap[0], start[1] + i * gap[1]);\n            }\n            this.__ctx.stroke();\n            this.__afterDraw();\n            this.pointsCounter = 0;\n        };\n        PaintingContext.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_paint_ts_225_PaintingContext\\\",\\\"fields\\\":[[\\\"markDirtyCallback\\\",{\\\"type\\\":\\\"unknown\\\"}],[\\\"__ctx\\\",null],[\\\"__gl\\\",null],[\\\"__offscreen_canvas\\\",null],[\\\"__program\\\",null],[\\\"stagedChanges\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"dirty\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"fastPoints\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"fastPointsBuffer\\\",null],[\\\"__currentColor\\\",null],[\\\"pointsCounter\\\",null],[\\\"cacheSize\\\",{\\\"type\\\":\\\"array\\\",\\\"staticSize\\\":2}]]}\");\n        };\n        return PaintingContext;\n    }());\n    exports.PaintingContext = PaintingContext;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_paint_ts_225_PaintingContext\\\",\\\"fields\\\":[[\\\"markDirtyCallback\\\",{\\\"type\\\":\\\"unknown\\\"}],[\\\"__ctx\\\",null],[\\\"__gl\\\",null],[\\\"__offscreen_canvas\\\",null],[\\\"__program\\\",null],[\\\"stagedChanges\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"dirty\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"fastPoints\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"fastPointsBuffer\\\",null],[\\\"__currentColor\\\",null],[\\\"pointsCounter\\\",null],[\\\"cacheSize\\\",{\\\"type\\\":\\\"array\\\",\\\"staticSize\\\":2}]]}\"), PaintingContext)\n});\n"}],"emitSkipped":false,"diagnostics":[]},"/_std/buffer.ts":{"outputFiles":[{"name":"/_std/buffer.js","writeByteOrderMark":false,"text":"var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\ndefine([\"require\", \"exports\", \"/std_math\"], function (require, exports, std_math_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.buffer = exports.buffer_internal = void 0;\n    var buffer_internal = /** @class */ (function () {\n        function buffer_internal(size, typeName, structure) {\n            var _this = this;\n            this.__opaque_buffer = true;\n            this.structArray = null;\n            this.floatArray = null;\n            this.intArray = null;\n            this.uintArray = null;\n            this.arrayBuffer = null;\n            this.vectorSize = 0;\n            this.platformPayload = null;\n            this.adapter = null;\n            this.dirty = false;\n            this.pendingWrites = 0;\n            this.cpuReadDirty = false;\n            this.cpuWriteDirty = false;\n            this.elementCount = 0;\n            this.elementBytes = 0;\n            this.structured = false;\n            this.watchMutation = false;\n            this.symbol = Symbol();\n            this.adapter = window.shadeupGetGraphicsAdapter();\n            this.typeName = typeName;\n            if (structure) {\n                if (structure.name && !structure.name.startsWith('atomic')) {\n                    this.typeName = structure.name;\n                }\n            }\n            this.elementCount = size;\n            this.elementBytes = 4;\n            if (typeName == 'float4' ||\n                typeName == 'float3' ||\n                typeName == 'float2' ||\n                typeName == 'float') {\n                this.vectorSize = 1;\n                this.fastIndex = function (index) {\n                    return _this.floatArray[index];\n                };\n                this.fastIndexAssign = function (index, value) {\n                    _this.floatArray[index] = value;\n                };\n                if (typeName == 'float4') {\n                    this.vectorSize = 4;\n                    this.fastIndex = function (index) {\n                        return (0, std_math_1.float4)(_this.floatArray[index * 4], _this.floatArray[index * 4 + 1], _this.floatArray[index * 4 + 2], _this.floatArray[index * 4 + 3]);\n                    };\n                    this.fastIndexAssign = function (index, value) {\n                        _this.floatArray[index * 4] = value[0];\n                        _this.floatArray[index * 4 + 1] = value[1];\n                        _this.floatArray[index * 4 + 2] = value[2];\n                        _this.floatArray[index * 4 + 3] = value[3];\n                    };\n                }\n                if (typeName == 'float3') {\n                    this.vectorSize = 3;\n                    this.fastIndex = function (index) {\n                        return (0, std_math_1.float3)(_this.floatArray[index * 3], _this.floatArray[index * 3 + 1], _this.floatArray[index * 3 + 2]);\n                    };\n                    this.fastIndexAssign = function (index, value) {\n                        _this.floatArray[index * 3] = value[0];\n                        _this.floatArray[index * 3 + 1] = value[1];\n                        _this.floatArray[index * 3 + 2] = value[2];\n                    };\n                }\n                if (typeName == 'float2') {\n                    this.vectorSize = 2;\n                    this.fastIndex = function (index) {\n                        return (0, std_math_1.float2)(_this.floatArray[index * 2], _this.floatArray[index * 2 + 1]);\n                    };\n                    this.fastIndexAssign = function (index, value) {\n                        _this.floatArray[index * 2] = value[0];\n                        _this.floatArray[index * 2 + 1] = value[1];\n                    };\n                }\n                this.floatArray = new Float32Array(size * this.vectorSize);\n                this.arrayBuffer = this.floatArray.buffer;\n            }\n            else if (typeName == 'int4' ||\n                typeName == 'int3' ||\n                typeName == 'int2' ||\n                typeName == 'int') {\n                this.vectorSize = 1;\n                this.fastIndex = function (index) {\n                    return _this.intArray[index];\n                };\n                this.fastIndexAssign = function (index, value) {\n                    _this.intArray[index] = value;\n                };\n                if (typeName == 'int4') {\n                    this.vectorSize = 4;\n                    this.fastIndex = function (index) {\n                        return __.intifyVector((0, std_math_1.int4)(_this.intArray[index * 4], _this.intArray[index * 4 + 1], _this.intArray[index * 4 + 2], _this.intArray[index * 4 + 3]));\n                    };\n                    this.fastIndexAssign = function (index, value) {\n                        _this.intArray[index * 4] = value[0];\n                        _this.intArray[index * 4 + 1] = value[1];\n                        _this.intArray[index * 4 + 2] = value[2];\n                        _this.intArray[index * 4 + 3] = value[3];\n                    };\n                }\n                if (typeName == 'int3') {\n                    this.vectorSize = 3;\n                    this.fastIndex = function (index) {\n                        return __.intifyVector((0, std_math_1.int3)(_this.intArray[index * 3], _this.intArray[index * 3 + 1], _this.intArray[index * 3 + 2]));\n                    };\n                    this.fastIndexAssign = function (index, value) {\n                        _this.intArray[index * 3] = value[0];\n                        _this.intArray[index * 3 + 1] = value[1];\n                        _this.intArray[index * 3 + 2] = value[2];\n                    };\n                }\n                if (typeName == 'int2') {\n                    this.vectorSize = 2;\n                    this.fastIndex = function (index) {\n                        return __.intifyVector((0, std_math_1.int2)(_this.intArray[index * 2], _this.intArray[index * 2 + 1]));\n                    };\n                    this.fastIndexAssign = function (index, value) {\n                        _this.intArray[index * 2] = value[0];\n                        _this.intArray[index * 2 + 1] = value[1];\n                    };\n                }\n                this.intArray = new Int32Array(size * this.vectorSize);\n                this.arrayBuffer = this.intArray.buffer;\n            }\n            else if (typeName == 'uint4' ||\n                typeName == 'uint3' ||\n                typeName == 'uint2' ||\n                typeName == 'uint') {\n                this.vectorSize = 1;\n                this.fastIndex = function (index) {\n                    return _this.uintArray[index];\n                };\n                this.fastIndexAssign = function (index, value) {\n                    _this.uintArray[index] = value;\n                };\n                if (typeName == 'uint4') {\n                    this.vectorSize = 4;\n                    this.fastIndex = function (index) {\n                        return (0, std_math_1.uint4)(_this.uintArray[index * 4], _this.uintArray[index * 4 + 1], _this.uintArray[index * 4 + 2], _this.uintArray[index * 4 + 3]);\n                    };\n                    this.fastIndexAssign = function (index, value) {\n                        _this.uintArray[index * 4] = value[0];\n                        _this.uintArray[index * 4 + 1] = value[1];\n                        _this.uintArray[index * 4 + 2] = value[2];\n                        _this.uintArray[index * 4 + 3] = value[3];\n                    };\n                }\n                if (typeName == 'uint3') {\n                    this.vectorSize = 3;\n                    this.fastIndex = function (index) {\n                        return (0, std_math_1.uint3)(_this.uintArray[index * 3], _this.uintArray[index * 3 + 1], _this.uintArray[index * 3 + 2]);\n                    };\n                    this.fastIndexAssign = function (index, value) {\n                        _this.uintArray[index * 3] = value[0];\n                        _this.uintArray[index * 3 + 1] = value[1];\n                        _this.uintArray[index * 3 + 2] = value[2];\n                    };\n                }\n                if (typeName == 'uint2') {\n                    this.vectorSize = 2;\n                    this.fastIndex = function (index) {\n                        return (0, std_math_1.uint2)(_this.uintArray[index * 2], _this.uintArray[index * 2 + 1]);\n                    };\n                    this.fastIndexAssign = function (index, value) {\n                        _this.uintArray[index * 2] = value[0];\n                        _this.uintArray[index * 2 + 1] = value[1];\n                    };\n                }\n                this.uintArray = new Uint32Array(size * this.vectorSize);\n                this.arrayBuffer = this.uintArray.buffer;\n            }\n            else {\n                this.structured = true;\n                if (typeName.startsWith('atomic<')) {\n                    // this.structArray = new Array<T>(size);\n                    this.arrayBuffer = new ArrayBuffer(size * 4);\n                    this.watchMutation = true;\n                    this.vectorSize = 1;\n                    this.elementBytes = 4;\n                    this.elementCount = size;\n                    for (var i = 0; i < size; i++) {\n                        // this.structArray[i] = atomic(0) as T;\n                    }\n                    if (typeName == 'atomic<uint>') {\n                        this.uintArray = new Uint32Array(this.arrayBuffer);\n                        this.fastIndex = function (index) {\n                            return (0, std_math_1.atomic)(_this.uintArray[index]);\n                        };\n                        this.fastIndexAssign = function (index, value) {\n                            _this.uintArray[index] = value.__value;\n                        };\n                    }\n                    else {\n                        this.intArray = new Int32Array(this.arrayBuffer);\n                        this.fastIndex = function (index) {\n                            return (0, std_math_1.atomic)(_this.intArray[index]);\n                        };\n                        this.fastIndexAssign = function (index, value) {\n                            _this.intArray[index] = value.__value;\n                        };\n                    }\n                }\n                else {\n                    var elementSize_1 = this.adapter.getValueSize(structure);\n                    var realSize = elementSize_1 * size;\n                    this.elementCount = size;\n                    this.elementBytes = elementSize_1;\n                    this.arrayBuffer = new ArrayBuffer(realSize);\n                    this.fastIndex = function (index) {\n                        return _this.adapter.readStructuredBuffer(structure, _this.arrayBuffer, index * elementSize_1);\n                    };\n                    this.fastIndexAssign = function (index, value) {\n                        _this.cpuWriteDirty = true;\n                        _this.adapter.writeStructuredBuffer(structure, value, _this.arrayBuffer, index * (elementSize_1 / 4));\n                    };\n                }\n            }\n            this.__index = function (index) {\n                // await this.download();\n                if (_this.watchMutation) {\n                    var data = _this.fastIndex(index);\n                    data.$mutate = function (to) {\n                        _this.cpuWriteDirty = true;\n                        if (to !== undefined) {\n                            if (_this.intArray) {\n                                _this.intArray[index] = to;\n                            }\n                            else {\n                                _this.uintArray[index] = to;\n                            }\n                        }\n                    };\n                    return data;\n                }\n                else {\n                    return _this.fastIndex(index);\n                }\n            };\n            this.__index_assign = function (index, value) {\n                // await this.download();\n                _this.cpuWriteDirty = true;\n                _this.fastIndexAssign(index, value);\n            };\n            this.__index_assign_op = function (op_fn, index, value) {\n                // await this.download();\n                _this.cpuWriteDirty = true;\n                _this.fastIndexAssign(index, op_fn(_this.fastIndex(index), value));\n            };\n        }\n        buffer_internal.prototype.destroy = function () {\n            this.adapter.destroyBuffer(this);\n        };\n        buffer_internal.prototype.__index = function (index) {\n            // this.download();\n            // return this.fastIndex(index);\n            return null;\n        };\n        buffer_internal.prototype.__index_assign = function (index, value) {\n            // this.download();\n            // this.cpuWriteDirty = true;\n            // this.fastIndexAssign(index, value);\n        };\n        buffer_internal.prototype.__index_assign_op = function (op_fn, index, value) {\n            // this.download();\n            // this.cpuWriteDirty = true;\n            // this.fastIndexAssign(index, op_fn(this.fastIndex(index), value));\n        };\n        buffer_internal.prototype.len = function () {\n            return this.elementCount;\n        };\n        /**\n         * Returns the underlying cpu buffer as a typed array.\n         *\n         * > [!NOTE]\n         * > This is considerably faster than using the raw index [] operator.\n         *\n         * > [!NOTE]\n         * > If the buffer contents are structured (atomic, or a struct), this will return a normal array\n         *\n         * ```shadeup\n         * let buf = buffer<uint>();\n         * let data = buf.getData();\n         *\n         * for (let i = 0; i < data.length; i += 4) {\n         * \t// Do something with data[i]\n         * }\n         * ```\n         */\n        buffer_internal.prototype.getData = function () {\n            var _a, _b, _c;\n            if (this.structured) {\n                return this.structArray;\n            }\n            else {\n                return (_c = (_b = (_a = this.floatArray) !== null && _a !== void 0 ? _a : this.intArray) !== null && _b !== void 0 ? _b : this.uintArray) !== null && _c !== void 0 ? _c : new Uint8Array(0);\n            }\n        };\n        buffer_internal.prototype.write = function (other) {\n            if (!this.adapter)\n                return;\n            this.adapter.copyBufferToBuffer(other, this);\n        };\n        /** @shadeup=tag(async) @shadeup=noemit_gpu */\n        buffer_internal.prototype.download = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (!this.adapter)\n                                return [2 /*return*/];\n                            if (this.pendingWrites > 0) {\n                                window.flushAdapter();\n                            }\n                            if (!this.cpuReadDirty) return [3 /*break*/, 2];\n                            this.cpuReadDirty = false;\n                            return [4 /*yield*/, this.adapter.downloadBuffer(this)];\n                        case 1:\n                            _a.sent();\n                            _a.label = 2;\n                        case 2: return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        buffer_internal.prototype.downloadAsync = function () {\n            return this['download']();\n        };\n        /** @shadeup=noemit_gpu */\n        buffer_internal.prototype.upload = function () {\n            if (!this.adapter)\n                return;\n            if (this.cpuWriteDirty) {\n                this.cpuWriteDirty = false;\n                this.adapter.uploadBuffer(this);\n            }\n        };\n        buffer_internal.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_buffer_ts_214_buffer_internal\\\",\\\"fields\\\":[[\\\"__opaque_buffer\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"structArray\\\",null],[\\\"floatArray\\\",null],[\\\"intArray\\\",null],[\\\"uintArray\\\",null],[\\\"arrayBuffer\\\",null],[\\\"vectorSize\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int\\\"}],[\\\"typeName\\\",null],[\\\"platformPayload\\\",null],[\\\"adapter\\\",null],[\\\"dirty\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pendingWrites\\\",null],[\\\"cpuReadDirty\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"cpuWriteDirty\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"elementCount\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int\\\"}],[\\\"elementBytes\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int\\\"}],[\\\"structured\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"fastIndex\\\",{\\\"type\\\":\\\"unknown\\\"}],[\\\"fastIndexAssign\\\",{\\\"type\\\":\\\"unknown\\\"}],[\\\"watchMutation\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"symbol\\\",{\\\"type\\\":\\\"unknown\\\"}]]}\");\n        };\n        return buffer_internal;\n    }());\n    exports.buffer_internal = buffer_internal;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_buffer_ts_214_buffer_internal\\\",\\\"fields\\\":[[\\\"__opaque_buffer\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"structArray\\\",null],[\\\"floatArray\\\",null],[\\\"intArray\\\",null],[\\\"uintArray\\\",null],[\\\"arrayBuffer\\\",null],[\\\"vectorSize\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int\\\"}],[\\\"typeName\\\",null],[\\\"platformPayload\\\",null],[\\\"adapter\\\",null],[\\\"dirty\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"pendingWrites\\\",null],[\\\"cpuReadDirty\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"cpuWriteDirty\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"elementCount\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int\\\"}],[\\\"elementBytes\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int\\\"}],[\\\"structured\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"fastIndex\\\",{\\\"type\\\":\\\"unknown\\\"}],[\\\"fastIndexAssign\\\",{\\\"type\\\":\\\"unknown\\\"}],[\\\"watchMutation\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"symbol\\\",{\\\"type\\\":\\\"unknown\\\"}]]}\"), buffer_internal)\n    function buffer(e1, typeName, structure) {\n        if (typeof e1 === 'number') {\n            var size = e1;\n            var buf = new buffer_internal(size, typeName, structure);\n            return buf;\n        }\n        else {\n            var data = e1;\n            var buf = new buffer_internal(data.length, typeName, structure);\n            for (var i = 0; i < data.length; i++) {\n                buf.fastIndexAssign(i, data[i]);\n            }\n            return buf;\n        }\n    }\n    exports.buffer = buffer;\n});\n"}],"emitSkipped":false,"diagnostics":[]},"/_std/texture.ts":{"outputFiles":[{"name":"/_std/texture.js","writeByteOrderMark":false,"text":"define([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.texture3d = exports.texture3d_internal_empty = exports.texture2d = exports.texture2d_internal_empty = void 0;\n    var texture2d_internal_empty = /** @class */ (function () {\n        function texture2d_internal_empty() {\n            this.__opaque_texture2d = true;\n            this.size = [0, 0];\n            this.paint = null;\n        }\n        /** @shadeup=glsl(!texture($self$, $0$)) */\n        texture2d_internal_empty.prototype.__index = function (index) {\n            return null;\n        };\n        texture2d_internal_empty.prototype.__index_assign = function (index, value) {\n            return null;\n        };\n        texture2d_internal_empty.prototype.getFast = function (index) {\n            return null;\n        };\n        texture2d_internal_empty.prototype.setFast = function (index, value) {\n            return null;\n        };\n        /** @shadeup=tag(async) */\n        texture2d_internal_empty.prototype.download = function () { };\n        texture2d_internal_empty.prototype.downloadAsync = function () {\n            return null;\n        };\n        /**\n         * Returns the underlying cpu buffer as a typed array.\n         *\n         * Note that this is considerably faster than using the raw index [] operator.\n         *\n         * ```shadeup\n         * let tex = texture2d<float4>();\n         * let data = tex.getData();\n         *\n         * for (let i = 0; i < data.length; i += 4) {\n         * \tlet r = data[i];\n         * \tlet g = data[i + 1];\n         * \tlet b = data[i + 2];\n         * \tlet a = data[i + 3];\n         *\n         * \t// Do something with the pixel\n         * }\n         * ```\n         */\n        texture2d_internal_empty.prototype.getData = function () {\n            return new Uint32Array(0);\n        };\n        texture2d_internal_empty.prototype.upload = function () { };\n        texture2d_internal_empty.prototype.sample = function (position) { };\n        texture2d_internal_empty.prototype.clear = function (color) {\n            if (color === void 0) { color = 'auto'; }\n        };\n        texture2d_internal_empty.prototype.flush = function () { };\n        /** Release the texture */\n        texture2d_internal_empty.prototype.destroy = function () { };\n        texture2d_internal_empty.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_texture_ts_377_texture2d_internal_empty\\\",\\\"fields\\\":[[\\\"__opaque_texture2d\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"size\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"paint\\\",{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_paint_ts_225_PaintingContext\\\",\\\"fields\\\":[[\\\"markDirtyCallback\\\",{\\\"type\\\":\\\"unknown\\\"}],[\\\"__ctx\\\",null],[\\\"__gl\\\",null],[\\\"__offscreen_canvas\\\",null],[\\\"__program\\\",null],[\\\"stagedChanges\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"dirty\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"fastPoints\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"fastPointsBuffer\\\",null],[\\\"__currentColor\\\",null],[\\\"pointsCounter\\\",null],[\\\"cacheSize\\\",{\\\"type\\\":\\\"array\\\",\\\"staticSize\\\":2}]]}],[\\\"draw\\\",{\\\"type\\\":\\\"unknown\\\"}],[\\\"drawIndexed\\\",{\\\"type\\\":\\\"unknown\\\"}],[\\\"drawAdvanced\\\",{\\\"type\\\":\\\"unknown\\\"}],[\\\"drawInstanced\\\",{\\\"type\\\":\\\"unknown\\\"}]]}\");\n        };\n        return texture2d_internal_empty;\n    }());\n    exports.texture2d_internal_empty = texture2d_internal_empty;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_texture_ts_377_texture2d_internal_empty\\\",\\\"fields\\\":[[\\\"__opaque_texture2d\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"size\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"paint\\\",{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_paint_ts_225_PaintingContext\\\",\\\"fields\\\":[[\\\"markDirtyCallback\\\",{\\\"type\\\":\\\"unknown\\\"}],[\\\"__ctx\\\",null],[\\\"__gl\\\",null],[\\\"__offscreen_canvas\\\",null],[\\\"__program\\\",null],[\\\"stagedChanges\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"dirty\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"fastPoints\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"fastPointsBuffer\\\",null],[\\\"__currentColor\\\",null],[\\\"pointsCounter\\\",null],[\\\"cacheSize\\\",{\\\"type\\\":\\\"array\\\",\\\"staticSize\\\":2}]]}],[\\\"draw\\\",{\\\"type\\\":\\\"unknown\\\"}],[\\\"drawIndexed\\\",{\\\"type\\\":\\\"unknown\\\"}],[\\\"drawAdvanced\\\",{\\\"type\\\":\\\"unknown\\\"}],[\\\"drawInstanced\\\",{\\\"type\\\":\\\"unknown\\\"}]]}\"), texture2d_internal_empty)\n    function texture2d(size, format, type) {\n        return window.shadeupMakeTextureInternal(size, format, type);\n    }\n    exports.texture2d = texture2d;\n    var texture3d_internal_empty = /** @class */ (function () {\n        function texture3d_internal_empty() {\n            this.__opaque_texture3d = true;\n            this.size = [0, 0, 0];\n        }\n        /** @shadeup=glsl(!texture($self$, $0$)) */\n        texture3d_internal_empty.prototype.__index = function (index) {\n            return null;\n        };\n        texture3d_internal_empty.prototype.__index_assign = function (index, value) { };\n        texture3d_internal_empty.prototype.sample = function (position) { };\n        texture3d_internal_empty.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_texture_ts_2518_texture3d_internal_empty\\\",\\\"fields\\\":[[\\\"__opaque_texture3d\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"size\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"}]]}\");\n        };\n        return texture3d_internal_empty;\n    }());\n    exports.texture3d_internal_empty = texture3d_internal_empty;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_texture_ts_2518_texture3d_internal_empty\\\",\\\"fields\\\":[[\\\"__opaque_texture3d\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"bool\\\"}],[\\\"size\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"}]]}\"), texture3d_internal_empty)\n    function texture3d(size, type) {\n        return window.shadeupMakeTextureInternal(size, type);\n    }\n    exports.texture3d = texture3d;\n});\n"}],"emitSkipped":false,"diagnostics":[]},"/_std/drawIndexed.ts":{"outputFiles":[{"name":"/_std/drawIndexed.js","writeByteOrderMark":false,"text":"define([\"require\", \"exports\", \"/_std/buffer\", \"/std_math\"], function (require, exports, buffer_1, std_math_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.computeIndirect = exports.drawAttributes = exports.drawCount = exports.drawAlt2 = exports.drawFullscreen = exports.draw = exports.drawAdvanced = exports.makeShader = exports.ShaderOutput = exports.ShaderInput = exports.shader_start_shd_ = exports.drawIndirect = exports.drawIndexedIndirect = exports.drawInstancedIndexed = exports.drawInstanced = exports.drawIndexed = void 0;\n    function drawIndexed(indexBuffer, vertexShader, pixelShader) {\n        __shadeup_dispatch_draw_indexed(indexBuffer, vertexShader, pixelShader);\n    }\n    exports.drawIndexed = drawIndexed;\n    function drawInstanced(mesh, instanceCount, vertexShader, pixelShader) {\n        __shadeup_dispatch_draw_instanced(mesh, instanceCount, vertexShader, pixelShader);\n    }\n    exports.drawInstanced = drawInstanced;\n    function drawInstancedIndexed(indexBuffer, instanceCount, vertexShader, pixelShader) {\n        __shadeup_dispatch_draw_instanced_indexed(indexBuffer, instanceCount, vertexShader, pixelShader);\n    }\n    exports.drawInstancedIndexed = drawInstancedIndexed;\n    function drawIndexedIndirect(indirectBuffer, vertexShader, pixelShader) {\n        __shadeup_dispatch_draw_indexed_indirect(indirectBuffer, vertexShader, pixelShader);\n    }\n    exports.drawIndexedIndirect = drawIndexedIndirect;\n    function drawIndirect(mesh, indirectBuffer, vertexShader, pixelShader) {\n        __shadeup_dispatch_draw_indirect(mesh, indirectBuffer, vertexShader, pixelShader);\n    }\n    exports.drawIndirect = drawIndirect;\n    function shader_start_shd_(s, groupSize) {\n        return s;\n    }\n    exports.shader_start_shd_ = shader_start_shd_;\n    /**@shadeup=struct*/\n    var ShaderInput = /** @class */ (function () {\n        function ShaderInput() {\n            /** Interpolated world position (available in fragment, and vertex) */\n            this.position = (0, std_math_1.float3)(0, 0, 0);\n            /** Interpolated normal (fragment), Source mesh normal (vertex) */\n            this.normal = (0, std_math_1.float3)(0, 0, 0);\n            /** Interpolated tangent (fragment), Source mesh tangent (vertex) */\n            this.tangent = (0, std_math_1.float3)(0, 0, 0);\n            /** Interpolated bitangent (fragment), Source mesh bitangent (vertex) */\n            this.bitangent = (0, std_math_1.float3)(0, 0, 0);\n            /** Vertex shader output position */\n            this.clipPosition = (0, std_math_1.float4)(0, 0, 0, 0);\n            this.realPosition = (0, std_math_1.float4)(0, 0, 0, 0);\n            /** UV channel 0 input (available in fragment, and vertex) */\n            this.uv = (0, std_math_1.float2)(0, 0);\n            /** Screen position in pixels (available in fragment, and vertex) */\n            this.screen = (0, std_math_1.float2)(0, 0);\n            /** Interpolated vertex color (available in fragment, and vertex)  */\n            this.color = (0, std_math_1.float4)(0, 0, 0, 0);\n            /** Group ID (available in compute) */\n            this.groupId = __.intifyVector((0, std_math_1.int3)(0, 0, 0));\n            /** Group size (available in compute) */\n            this.groupSize = __.intifyVector((0, std_math_1.int3)(0, 0, 0));\n            /** Global id (groupId * groupSize + localId) (available in compute) */\n            this.globalId = __.intifyVector((0, std_math_1.int3)(0, 0, 0));\n            /** Local id (available in compute) */\n            this.localId = __.intifyVector((0, std_math_1.int3)(0, 0, 0));\n            /** Instance index (available in fragment, and vertex) */\n            this.instanceIndex = 0;\n            /** Vertex index (available in vertex) */\n            this.vertexIndex = 0;\n        }\n        /** @shadeup=noemit_gpu */\n        ShaderInput.prototype.attr = function (index, interpolation) {\n            return null;\n        };\n        ShaderInput.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"ShaderInput\\\",\\\"fields\\\":[[\\\"position\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"}],[\\\"normal\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"}],[\\\"tangent\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"}],[\\\"bitangent\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"}],[\\\"clipPosition\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"realPosition\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"uv\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"screen\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"color\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"groupId\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int3\\\"}],[\\\"groupSize\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int3\\\"}],[\\\"globalId\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int3\\\"}],[\\\"localId\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int3\\\"}],[\\\"instanceIndex\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int\\\"}],[\\\"vertexIndex\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int\\\"}]]}\");\n        };\n        return ShaderInput;\n    }());\n    exports.ShaderInput = ShaderInput;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"ShaderInput\\\",\\\"fields\\\":[[\\\"position\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"}],[\\\"normal\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"}],[\\\"tangent\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"}],[\\\"bitangent\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"}],[\\\"clipPosition\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"realPosition\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"uv\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"screen\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"color\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"groupId\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int3\\\"}],[\\\"groupSize\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int3\\\"}],[\\\"globalId\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int3\\\"}],[\\\"localId\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int3\\\"}],[\\\"instanceIndex\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int\\\"}],[\\\"vertexIndex\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int\\\"}]]}\"), ShaderInput)\n    /**@shadeup=struct*/\n    var ShaderOutput = /** @class */ (function () {\n        function ShaderOutput() {\n            /** Vertex output position */\n            this.position = (0, std_math_1.float4)(0, 0, 0, 0);\n            /** Vertex output normal */\n            this.normal = (0, std_math_1.float3)(0, 0, 0);\n            /** Vertex output tangent */\n            this.tangent = (0, std_math_1.float3)(0, 0, 0);\n            /** Vertex output bitangent */\n            this.bitangent = (0, std_math_1.float3)(0, 0, 0);\n            /** UV channel 0 output */\n            this.uv = (0, std_math_1.float2)(0, 0);\n            /** Pixel color output */\n            this.color = (0, std_math_1.float4)(0, 0, 0, 0);\n        }\n        /** @shadeup=noemit_gpu */\n        ShaderOutput.prototype.attr = function (index, value, interpolation) { };\n        ShaderOutput.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"ShaderOutput\\\",\\\"fields\\\":[[\\\"position\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"normal\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"}],[\\\"tangent\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"}],[\\\"bitangent\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"}],[\\\"uv\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"color\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}]]}\");\n        };\n        return ShaderOutput;\n    }());\n    exports.ShaderOutput = ShaderOutput;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"ShaderOutput\\\",\\\"fields\\\":[[\\\"position\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"normal\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"}],[\\\"tangent\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"}],[\\\"bitangent\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"}],[\\\"uv\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"color\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}]]}\"), ShaderOutput)\n    /** @shadeup=shader */\n    function makeShader(key, fn) {\n        return fn;\n    }\n    exports.makeShader = makeShader;\n    function drawAdvanced(descriptor) {\n        window.__shadeup_dispatch_draw_advanced(descriptor);\n    }\n    exports.drawAdvanced = drawAdvanced;\n    function draw(first, second, third) {\n        if ('vertices' in first && second && third) {\n            window.__shadeup_dispatch_draw_geometry(first, second, third);\n        }\n        else if (first && !second && !third) {\n            window.__shadeup_dispatch_draw(first);\n        }\n    }\n    exports.draw = draw;\n    function drawFullscreen(first, second, third) {\n        if ('vertices' in first && second && third) {\n            window.__shadeup_dispatch_draw_geometry(first, second, third);\n        }\n        else if (first && !second && !third) {\n            window.__shadeup_dispatch_draw(first);\n        }\n    }\n    exports.drawFullscreen = drawFullscreen;\n    function drawAlt2(fullScreenPixelShader) { }\n    exports.drawAlt2 = drawAlt2;\n    function drawCount(triCount, vertexShader, pixelShader) {\n        __shadeup_dispatch_draw_count(triCount, vertexShader, pixelShader);\n    }\n    exports.drawCount = drawCount;\n    function drawAttributes(indexBuffer, buffers, vertexShader, pixelShader) {\n        __shadeup_dispatch_draw_attributes(indexBuffer, buffer_1.buffer, vertexShader, pixelShader);\n    }\n    exports.drawAttributes = drawAttributes;\n    function computeIndirect(indirectBuffer, indirectOffset, computeShader) {\n        window.__shadeup_dispatch_compute_indirect(indirectBuffer, indirectOffset, computeShader);\n    }\n    exports.computeIndirect = computeIndirect;\n});\n"}],"emitSkipped":false,"diagnostics":[]},"/_std/drawAttributes.ts":{"outputFiles":[{"name":"/_std/drawAttributes.js","writeByteOrderMark":false,"text":"define([\"require\", \"exports\", \"/_std/buffer\"], function (require, exports, buffer_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.drawAttributes = void 0;\n    function drawAttributes(indexBuffer, buffers, vertexShader, pixelShader) {\n        __shadeup_dispatch_draw_attributes(indexBuffer, buffer_1.buffer, vertexShader, pixelShader);\n    }\n    exports.drawAttributes = drawAttributes;\n});\n"}],"emitSkipped":false,"diagnostics":[]},"/_std/drawCount.ts":{"outputFiles":[{"name":"/_std/drawCount.js","writeByteOrderMark":false,"text":"define([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.drawCount = void 0;\n    function drawCount(triCount, vertexShader, pixelShader) {\n        __shadeup_dispatch_draw_count(triCount, vertexShader, pixelShader);\n    }\n    exports.drawCount = drawCount;\n});\n"}],"emitSkipped":false,"diagnostics":[]},"/_std/physics.ts":{"outputFiles":[{"name":"/_std/physics.js","writeByteOrderMark":false,"text":"define([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.physics = exports.PhysicsEngine3d = exports.PhysicsEngine2d = exports.PhysicsRigidBody2d = exports.PhysicsRayCastResult2d = exports.PhysicsCollider2d = void 0;\n    var PhysicsCollider2d = /** @class */ (function () {\n        function PhysicsCollider2d(rapier, world, collider) {\n            this.rapier = rapier;\n            this.world = world;\n            this.collider = collider;\n        }\n        PhysicsCollider2d.prototype.setTranslation = function (position) {\n            this.collider.setTranslation(toVec2(position));\n        };\n        PhysicsCollider2d.prototype.setRotation = function (rotation) {\n            this.collider.setRotation(rotation);\n        };\n        PhysicsCollider2d.prototype.setSensor = function (isSensor) {\n            this.collider.setSensor(isSensor);\n        };\n        PhysicsCollider2d.prototype.setCollisionGroups = function (groups) {\n            this.collider.setCollisionGroups(groups);\n        };\n        PhysicsCollider2d.prototype.setCollidesWith = function (groups) {\n            this.collider.setActiveCollisionTypes(groups);\n        };\n        PhysicsCollider2d.prototype.setFriction = function (friction) {\n            this.collider.setFriction(friction);\n        };\n        PhysicsCollider2d.prototype.setRestitution = function (restitution) {\n            this.collider.setRestitution(restitution);\n        };\n        PhysicsCollider2d.prototype.setDensity = function (density) {\n            this.collider.setDensity(density);\n        };\n        PhysicsCollider2d.prototype.setMass = function (mass) {\n            this.collider.setMass(mass);\n        };\n        PhysicsCollider2d.prototype.setRadius = function (radius) {\n            this.collider.setRadius(radius);\n        };\n        PhysicsCollider2d.prototype.setHalfExtents = function (halfExtents) {\n            this.collider.setHalfExtents(toVec2(halfExtents));\n        };\n        PhysicsCollider2d.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_physics_ts_232_PhysicsCollider2d\\\",\\\"fields\\\":[[\\\"rapier\\\",null],[\\\"world\\\",null],[\\\"collider\\\",null]]}\");\n        };\n        return PhysicsCollider2d;\n    }());\n    exports.PhysicsCollider2d = PhysicsCollider2d;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_physics_ts_232_PhysicsCollider2d\\\",\\\"fields\\\":[[\\\"rapier\\\",null],[\\\"world\\\",null],[\\\"collider\\\",null]]}\"), PhysicsCollider2d)\n    function toVec2(v) {\n        return { x: v[0], y: v[1] };\n    }\n    function toVec3(v) {\n        return { x: v[0], y: v[1], z: v[2] };\n    }\n    var PhysicsRayCastResult2d = /** @class */ (function () {\n        function PhysicsRayCastResult2d(rapier, result) {\n            this.rapier = rapier;\n            this.result = result;\n        }\n        PhysicsRayCastResult2d.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_physics_ts_1662_PhysicsRayCastResult2d\\\",\\\"fields\\\":[[\\\"rapier\\\",null],[\\\"result\\\",null]]}\");\n        };\n        return PhysicsRayCastResult2d;\n    }());\n    exports.PhysicsRayCastResult2d = PhysicsRayCastResult2d;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_physics_ts_1662_PhysicsRayCastResult2d\\\",\\\"fields\\\":[[\\\"rapier\\\",null],[\\\"result\\\",null]]}\"), PhysicsRayCastResult2d)\n    var PhysicsRigidBody2d = /** @class */ (function () {\n        function PhysicsRigidBody2d(rapier, world, body) {\n            this.rapier = rapier;\n            this.world = world;\n            this.body = body;\n        }\n        PhysicsRigidBody2d.prototype.addBallCollider = function (radius) {\n            var colDesc = this.rapier.ColliderDesc.ball(radius);\n            var col = this.world.createCollider(colDesc, this.body);\n            return new PhysicsCollider2d(this.rapier, this.world, col);\n        };\n        PhysicsRigidBody2d.prototype.addBoxCollider = function (halfExtents) {\n            var colDesc = this.rapier.ColliderDesc.cuboid(halfExtents[0], halfExtents[1]);\n            var col = this.world.createCollider(colDesc, this.body);\n            return new PhysicsCollider2d(this.rapier, this.world, col);\n        };\n        PhysicsRigidBody2d.prototype.addCapsuleCollider = function (radius, halfHeight) {\n            var colDesc = this.rapier.ColliderDesc.capsule(radius, halfHeight);\n            var col = this.world.createCollider(colDesc, this.body);\n            return new PhysicsCollider2d(this.rapier, this.world, col);\n        };\n        PhysicsRigidBody2d.prototype.addTriangleCollider = function (a, b, c) {\n            var colDesc = this.rapier.ColliderDesc.triangle(toVec2(a), toVec2(b), toVec2(c));\n            var col = this.world.createCollider(colDesc, this.body);\n            return new PhysicsCollider2d(this.rapier, this.world, col);\n        };\n        PhysicsRigidBody2d.prototype.addConvexCollider = function (points) {\n            var floatarr = new Float32Array(points.length * 2);\n            for (var i = 0; i < points.length; i++) {\n                floatarr[i * 2 + 0] = points[i][0];\n                floatarr[i * 2 + 1] = points[i][1];\n            }\n            var colDesc = this.rapier.ColliderDesc.convexHull(floatarr);\n            if (!colDesc)\n                throw new Error('Failed to create convex hull collider');\n            var col = this.world.createCollider(colDesc, this.body);\n            return new PhysicsCollider2d(this.rapier, this.world, col);\n        };\n        PhysicsRigidBody2d.prototype.addHeightfieldCollider = function (heights, scale) {\n            var arr = new Float32Array(heights.length);\n            for (var i = 0; i < heights.length; i++) {\n                arr[i] = heights[i];\n            }\n            var colDesc = this.rapier.ColliderDesc.heightfield(arr, toVec2(scale));\n            var col = this.world.createCollider(colDesc, this.body);\n            return new PhysicsCollider2d(this.rapier, this.world, col);\n        };\n        PhysicsRigidBody2d.prototype.setTranslation = function (position) {\n            this.body.setTranslation(toVec2(position), true);\n        };\n        PhysicsRigidBody2d.prototype.setRotation = function (rotation) {\n            this.body.setRotation(rotation, true);\n        };\n        PhysicsRigidBody2d.prototype.setVelocity = function (velocity) {\n            this.body.setLinvel(toVec2(velocity), true);\n        };\n        PhysicsRigidBody2d.prototype.setAngularVelocity = function (velocity) {\n            this.body.setAngvel(velocity, true);\n        };\n        PhysicsRigidBody2d.prototype.addForce = function (force) {\n            this.body.addForce(toVec2(force), true);\n        };\n        PhysicsRigidBody2d.prototype.addForceAtPoint = function (force, point) {\n            this.body.addForceAtPoint(toVec2(force), toVec2(point), true);\n        };\n        PhysicsRigidBody2d.prototype.addTorque = function (torque) {\n            this.body.addTorque(torque, true);\n        };\n        PhysicsRigidBody2d.prototype.setAdditionalMass = function (mass) {\n            this.body.setAdditionalMass(mass, true);\n        };\n        PhysicsRigidBody2d.prototype.setEnabled = function (enabled) {\n            this.body.setEnabled(enabled);\n        };\n        PhysicsRigidBody2d.prototype.sleep = function () {\n            this.body.sleep();\n        };\n        PhysicsRigidBody2d.prototype.wakeUp = function () {\n            this.body.wakeUp();\n        };\n        PhysicsRigidBody2d.prototype.setGravityScale = function (scale) {\n            this.body.setGravityScale(scale, true);\n        };\n        PhysicsRigidBody2d.prototype.setLinearDamping = function (damping) {\n            this.body.setLinearDamping(damping);\n        };\n        PhysicsRigidBody2d.prototype.setAngularDamping = function (damping) {\n            this.body.setAngularDamping(damping);\n        };\n        PhysicsRigidBody2d.prototype.isSleeping = function () {\n            return this.body.isSleeping();\n        };\n        PhysicsRigidBody2d.prototype.mass = function () {\n            return this.body.mass();\n        };\n        PhysicsRigidBody2d.prototype.translation = function () {\n            var t = this.body.translation();\n            return [t.x, t.y];\n        };\n        PhysicsRigidBody2d.prototype.rotation = function () {\n            return this.body.rotation();\n        };\n        PhysicsRigidBody2d.prototype.velocity = function () {\n            var t = this.body.linvel();\n            return [t.x, t.y];\n        };\n        PhysicsRigidBody2d.prototype.angularVelocity = function () {\n            return this.body.angvel();\n        };\n        PhysicsRigidBody2d.prototype.isMoving = function () {\n            return this.body.isMoving();\n        };\n        PhysicsRigidBody2d.prototype.collider = function (index) {\n            var collider = this.body.collider(index);\n            if (!collider)\n                throw new Error('Failed to get collider');\n            return new PhysicsCollider2d(this.rapier, this.world, collider);\n        };\n        PhysicsRigidBody2d.prototype.applyImpulse = function (impulse) {\n            this.body.applyImpulse(toVec2(impulse), true);\n        };\n        PhysicsRigidBody2d.prototype.applyTorqueImpulse = function (impulse) {\n            this.body.applyTorqueImpulse(impulse, true);\n        };\n        PhysicsRigidBody2d.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_physics_ts_1904_PhysicsRigidBody2d\\\",\\\"fields\\\":[[\\\"rapier\\\",null],[\\\"world\\\",null],[\\\"body\\\",null]]}\");\n        };\n        return PhysicsRigidBody2d;\n    }());\n    exports.PhysicsRigidBody2d = PhysicsRigidBody2d;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_physics_ts_1904_PhysicsRigidBody2d\\\",\\\"fields\\\":[[\\\"rapier\\\",null],[\\\"world\\\",null],[\\\"body\\\",null]]}\"), PhysicsRigidBody2d)\n    var PhysicsEngine2d = /** @class */ (function () {\n        function PhysicsEngine2d(rapier) {\n            this.rapier = rapier;\n            this.world = new rapier.World(new rapier.Vector2(0.0, -9.81));\n        }\n        PhysicsEngine2d.prototype.step = function () {\n            this.world.step();\n        };\n        PhysicsEngine2d.prototype.createRigidBody = function (position, rotation, mode) {\n            var rbDesc = mode == 'dynamic'\n                ? this.rapier.RigidBodyDesc.dynamic()\n                : mode == 'fixed'\n                    ? this.rapier.RigidBodyDesc.fixed()\n                    : this.rapier.RigidBodyDesc.dynamic();\n            rbDesc.setTranslation(position[0], position[1]);\n            rbDesc.setRotation(rotation);\n            var rb = this.world.createRigidBody(rbDesc);\n            return new PhysicsRigidBody2d(this.rapier, this.world, rb);\n        };\n        PhysicsEngine2d.prototype.bodies = function () {\n            var bodies = this.world.bodies;\n            var result = [];\n            for (var i = 0; i < bodies.len(); i++) {\n                result.push(new PhysicsRigidBody2d(this.rapier, this.world, bodies.get(i)));\n            }\n            return result;\n        };\n        PhysicsEngine2d.prototype.castRay = function (start, end, maxi) {\n            var result = this.world.castRay(new this.rapier.Ray(toVec2(start), toVec2(end)), maxi, true);\n            if (!result)\n                return null;\n            return new PhysicsRigidBody2d(this.rapier, this.world, result.collider.parent());\n        };\n        PhysicsEngine2d.prototype.setGravity = function (gravity) {\n            this.world.gravity = toVec2(gravity);\n        };\n        PhysicsEngine2d.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_physics_ts_6278_PhysicsEngine2d\\\",\\\"fields\\\":[[\\\"rapier\\\",null],[\\\"world\\\",null]]}\");\n        };\n        return PhysicsEngine2d;\n    }());\n    exports.PhysicsEngine2d = PhysicsEngine2d;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_physics_ts_6278_PhysicsEngine2d\\\",\\\"fields\\\":[[\\\"rapier\\\",null],[\\\"world\\\",null]]}\"), PhysicsEngine2d)\n    var PhysicsEngine3d = /** @class */ (function () {\n        function PhysicsEngine3d() {\n        }\n        PhysicsEngine3d.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_physics_ts_7687_PhysicsEngine3d\\\",\\\"fields\\\":[]}\");\n        };\n        return PhysicsEngine3d;\n    }());\n    exports.PhysicsEngine3d = PhysicsEngine3d;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_physics_ts_7687_PhysicsEngine3d\\\",\\\"fields\\\":[]}\"), PhysicsEngine3d)\n    var physics;\n    (function (physics) {\n        function engine2d() {\n            return new PhysicsEngine2d(window.RAPIER_2D);\n        }\n        physics.engine2d = engine2d;\n    })(physics = exports.physics || (exports.physics = {}));\n});\n"}],"emitSkipped":false,"diagnostics":[]},"/_std/mesh.ts":{"outputFiles":[{"name":"/_std/mesh.js","writeByteOrderMark":false,"text":"var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\ndefine([\"require\", \"exports\", \"/std_math\", \"/std_math\", \"/std___std_all\", \"/_std/common\"], function (require, exports, __, std_math_1, std___std_all_1, common_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.Model = exports.ModelPart = exports.Material = exports.mesh = exports.Mesh = void 0;\n    __ = __importStar(__);\n    var globalVarGet = std___std_all_1.globalVarGet;\n    var Mesh = /** @class */ (function () {\n        function Mesh(data) {\n            var _a, _b, _c, _d, _e, _f, _g, _h;\n            this.vertices = (_a = data.vertices) !== null && _a !== void 0 ? _a : [];\n            this.triangles = (_b = data.triangles) !== null && _b !== void 0 ? _b : [];\n            this.normals = (_c = data.normals) !== null && _c !== void 0 ? _c : [];\n            this.tangents = (_d = data.tangents) !== null && _d !== void 0 ? _d : [];\n            this.bitangents = (_e = data.bitangents) !== null && _e !== void 0 ? _e : [];\n            this.uvs = (_f = data.uvs) !== null && _f !== void 0 ? _f : [];\n            this.colors = (_g = data.colors) !== null && _g !== void 0 ? _g : [];\n            this.symbol = (_h = data.symbol) !== null && _h !== void 0 ? _h : null;\n        }\n        Mesh.prototype.rect = function (size) {\n            var shader_self_temp = this;\n            var index = (this.vertices.len() | 0);\n            this.vertices.push(__.makeVector((__.FM.negate_1(size[0])) / (2 | 0), (__.FM.negate_1(size[1])) / (2 | 0), (0 | 0)));\n            this.vertices.push(__.makeVector(size[0] / (2 | 0), (__.FM.negate_1(size[1])) / (2 | 0), (0 | 0)));\n            this.vertices.push(__.makeVector(size[0] / (2 | 0), size[1] / (2 | 0), (0 | 0)));\n            this.vertices.push(__.makeVector((__.FM.negate_1(size[0])) / (2 | 0), size[1] / (2 | 0), (0 | 0)));\n            this.triangles.push(index + (2 | 0));\n            this.triangles.push(index + (1 | 0));\n            this.triangles.push(index + (0 | 0));\n            this.triangles.push(index + (0 | 0));\n            this.triangles.push(index + (3 | 0));\n            this.triangles.push(index + (2 | 0));\n            this.normals.push(__.intifyVector(__.makeVector((0 | 0), (0 | 0), (1 | 0))));\n            this.normals.push(__.intifyVector(__.makeVector((0 | 0), (0 | 0), (1 | 0))));\n            this.normals.push(__.intifyVector(__.makeVector((0 | 0), (0 | 0), (1 | 0))));\n            this.normals.push(__.intifyVector(__.makeVector((0 | 0), (0 | 0), (1 | 0))));\n            this.tangents.push(__.intifyVector(__.makeVector((1 | 0), (0 | 0), (0 | 0))));\n            this.tangents.push(__.intifyVector(__.makeVector((1 | 0), (0 | 0), (0 | 0))));\n            this.tangents.push(__.intifyVector(__.makeVector((1 | 0), (0 | 0), (0 | 0))));\n            this.tangents.push(__.intifyVector(__.makeVector((1 | 0), (0 | 0), (0 | 0))));\n            this.bitangents.push(__.intifyVector(__.makeVector((0 | 0), (1 | 0), (0 | 0))));\n            this.bitangents.push(__.intifyVector(__.makeVector((0 | 0), (1 | 0), (0 | 0))));\n            this.bitangents.push(__.intifyVector(__.makeVector((0 | 0), (1 | 0), (0 | 0))));\n            this.bitangents.push(__.intifyVector(__.makeVector((0 | 0), (1 | 0), (0 | 0))));\n            this.uvs.push(__.intifyVector(__.makeVector((0 | 0), (0 | 0))));\n            this.uvs.push(__.intifyVector(__.makeVector((1 | 0), (0 | 0))));\n            this.uvs.push(__.intifyVector(__.makeVector((0 | 0), (1 | 0))));\n            this.uvs.push(__.intifyVector(__.makeVector((1 | 0), (1 | 0))));\n        };\n        Mesh.prototype.quad = function (position, direction, right, size) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9;\n            var shader_self_temp = this;\n            var up = (0, std_math_1.normalize)((0, std_math_1.cross)(right, direction));\n            var halfSize = (_a = size, _b = 2.0, [_a[0] / _b, _a[1] / _b]);\n            var index = (this.vertices.len() | 0);\n            this.vertices.push((_c = (_e = position, _f = (_g = right, _h = (__.FM.negate_1(halfSize[0])), [_g[0] * _h, _g[1] * _h, _g[2] * _h]), [_e[0] + _f[0], _e[1] + _f[1], _e[2] + _f[2]]), _d = (_j = up, _k = halfSize[1], [_j[0] * _k, _j[1] * _k, _j[2] * _k]), [_c[0] + _d[0], _c[1] + _d[1], _c[2] + _d[2]]));\n            this.vertices.push((_l = (_o = position, _p = (_q = right, _r = halfSize[0], [_q[0] * _r, _q[1] * _r, _q[2] * _r]), [_o[0] + _p[0], _o[1] + _p[1], _o[2] + _p[2]]), _m = (_s = up, _t = halfSize[1], [_s[0] * _t, _s[1] * _t, _s[2] * _t]), [_l[0] + _m[0], _l[1] + _m[1], _l[2] + _m[2]]));\n            this.vertices.push((_u = (_w = position, _x = (_y = right, _z = halfSize[0], [_y[0] * _z, _y[1] * _z, _y[2] * _z]), [_w[0] + _x[0], _w[1] + _x[1], _w[2] + _x[2]]), _v = (_0 = up, _1 = (__.FM.negate_1(halfSize[1])), [_0[0] * _1, _0[1] * _1, _0[2] * _1]), [_u[0] + _v[0], _u[1] + _v[1], _u[2] + _v[2]]));\n            this.vertices.push((_2 = (_4 = position, _5 = (_6 = right, _7 = (__.FM.negate_1(halfSize[0])), [_6[0] * _7, _6[1] * _7, _6[2] * _7]), [_4[0] + _5[0], _4[1] + _5[1], _4[2] + _5[2]]), _3 = (_8 = up, _9 = (__.FM.negate_1(halfSize[1])), [_8[0] * _9, _8[1] * _9, _8[2] * _9]), [_2[0] + _3[0], _2[1] + _3[1], _2[2] + _3[2]]));\n            this.triangles.push(index + (0 | 0));\n            this.triangles.push(index + (1 | 0));\n            this.triangles.push(index + (2 | 0));\n            this.triangles.push(index + (2 | 0));\n            this.triangles.push(index + (3 | 0));\n            this.triangles.push(index + (0 | 0));\n            this.normals.push(direction);\n            this.normals.push(direction);\n            this.normals.push(direction);\n            this.normals.push(direction);\n            this.tangents.push(right);\n            this.tangents.push(right);\n            this.tangents.push(right);\n            this.tangents.push(right);\n            this.bitangents.push(up);\n            this.bitangents.push(up);\n            this.bitangents.push(up);\n            this.bitangents.push(up);\n            this.uvs.push(__.intifyVector(__.makeVector((1 | 0), (0 | 0))));\n            this.uvs.push(__.intifyVector(__.makeVector((0 | 0), (0 | 0))));\n            this.uvs.push(__.intifyVector(__.makeVector((0 | 0), (1 | 0))));\n            this.uvs.push(__.intifyVector(__.makeVector((1 | 0), (1 | 0))));\n        };\n        Mesh.prototype.box = function (size) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n            var shader_self_temp = this;\n            var halfSize = (_a = size, _b = 2.0, [_a[0] / _b, _a[1] / _b, _a[2] / _b]);\n            var UP = __.makeVector((0 | 0), 1.0, (0 | 0));\n            var DOWN = __.makeVector((0 | 0), (__.FM.negate_1(1.0)), (0 | 0));\n            var LEFT = __.makeVector((__.FM.negate_1(1.0)), (0 | 0), (0 | 0));\n            var RIGHT = __.makeVector(1.0, (0 | 0), (0 | 0));\n            var FORWARD = __.makeVector((0 | 0), (0 | 0), 1.0);\n            var BACK = __.makeVector((0 | 0), (0 | 0), (__.FM.negate_1(1.0)));\n            // Up\n            this.quad((_c = UP, _d = halfSize[1], [_c[0] * _d, _c[1] * _d, _c[2] * _d]), UP, LEFT, __.makeVector(size[0], size[2]));\n            // Down\n            this.quad((_e = DOWN, _f = halfSize[1], [_e[0] * _f, _e[1] * _f, _e[2] * _f]), DOWN, RIGHT, __.makeVector(size[0], size[2]));\n            // Left\n            this.quad((_g = LEFT, _h = halfSize[0], [_g[0] * _h, _g[1] * _h, _g[2] * _h]), LEFT, BACK, __.makeVector(size[2], size[1]));\n            // Right\n            this.quad((_j = RIGHT, _k = halfSize[0], [_j[0] * _k, _j[1] * _k, _j[2] * _k]), RIGHT, FORWARD, __.makeVector(size[2], size[1]));\n            // Forward\n            this.quad((_l = FORWARD, _m = halfSize[2], [_l[0] * _m, _l[1] * _m, _l[2] * _m]), FORWARD, LEFT, __.makeVector(size[0], size[1]));\n            // Back\n            this.quad((_o = BACK, _p = halfSize[2], [_o[0] * _p, _o[1] * _p, _o[2] * _p]), BACK, RIGHT, __.makeVector(size[0], size[1]));\n        };\n        Mesh.prototype.rectAt = function (minPos, maxPos) {\n            var _a, _b;\n            var shader_self_temp = this;\n            this.rect((_a = maxPos, _b = minPos, [_a[0] - _b[0], _a[1] - _b[1]]));\n            this.translate(__.makeVector(minPos, (0 | 0)));\n        };\n        Mesh.prototype.circle = function (pos, radius, vertices) {\n            if (vertices === void 0) { vertices = (32 | 0); }\n        };\n        Mesh.prototype.uvSphere = function (pos, radius, vertices, rings) {\n            if (vertices === void 0) { vertices = (32 | 0); }\n            if (rings === void 0) { rings = (16 | 0); }\n            var shader_self_temp = this;\n            var index = (this.vertices.len() | 0);\n            var verticesPerRing = vertices + (1 | 0);\n            for (var i = (0 | 0); i <= rings; i++) {\n                var y = i / rings;\n                var angleY = y * common_1.PI;\n                var posY = Math.cos(angleY);\n                var radiusY = Math.sin(angleY);\n                for (var j = (0 | 0); j <= vertices; j++) {\n                    var x = j / vertices;\n                    var angleX = x * common_1.PI * (2 | 0);\n                    var posX = Math.cos(angleX);\n                    var posZ = Math.sin(angleX);\n                    this.vertices.push(__.makeVector(posX * radiusY * radius, posY * radius, posZ * radiusY * radius));\n                    this.normals.push((0, std_math_1.normalize)(__.makeVector(posX * radiusY, posY, posZ * radiusY)));\n                    var tangent = (0, std_math_1.normalize)(__.makeVector(posZ, (0 | 0), (__.FM.negate_1(posX))));\n                    var bitangent = (0, std_math_1.normalize)((0, std_math_1.cross)(this.normals[(this.normals.len() | 0) - (1 | 0)], tangent));\n                    this.tangents.push(tangent);\n                    this.bitangents.push(bitangent);\n                    this.uvs.push(__.makeVector(x, y));\n                }\n            }\n            for (var i = (0 | 0); i < rings; i++) {\n                for (var j = (0 | 0); j < vertices; j++) {\n                    var i0 = i * verticesPerRing + j;\n                    var i1 = i0 + (1 | 0);\n                    var i2 = i0 + verticesPerRing;\n                    var i3 = i2 + (1 | 0);\n                    this.triangles.push(index + i0);\n                    this.triangles.push(index + i1);\n                    this.triangles.push(index + i2);\n                    this.triangles.push(index + i2);\n                    this.triangles.push(index + i1);\n                    this.triangles.push(index + i3);\n                }\n            }\n            this.translate(pos);\n        };\n        Mesh.prototype.icoSphere = function (pos, radius, subdivisions) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v;\n            if (subdivisions === void 0) { subdivisions = (1 | 0); }\n            var shader_self_temp = this;\n            var index = (this.vertices.len() | 0);\n            var t = (1.0 + Math.sqrt(5.0)) / 2.0;\n            var vertices = [__.makeVector((__.FM.negate_1((1 | 0))), t, (0 | 0)), __.makeVector((1 | 0), t, (0 | 0)), __.makeVector((__.FM.negate_1((1 | 0))), (__.FM.negate_1(t)), (0 | 0)), __.makeVector((1 | 0), (__.FM.negate_1(t)), (0 | 0)), __.makeVector((0 | 0), (__.FM.negate_1((1 | 0))), t), __.makeVector((0 | 0), (1 | 0), t), __.makeVector((0 | 0), (__.FM.negate_1((1 | 0))), (__.FM.negate_1(t))), __.makeVector((0 | 0), (1 | 0), (__.FM.negate_1(t))), __.makeVector(t, (0 | 0), (__.FM.negate_1((1 | 0)))), __.makeVector(t, (0 | 0), (1 | 0)), __.makeVector((__.FM.negate_1(t)), (0 | 0), (__.FM.negate_1((1 | 0)))), __.makeVector((__.FM.negate_1(t)), (0 | 0), (1 | 0))];\n            var triangles = [__.intifyVector(__.makeVector((0 | 0), (11 | 0), (5 | 0))), __.intifyVector(__.makeVector((0 | 0), (5 | 0), (1 | 0))), __.intifyVector(__.makeVector((0 | 0), (1 | 0), (7 | 0))), __.intifyVector(__.makeVector((0 | 0), (7 | 0), (10 | 0))), __.intifyVector(__.makeVector((0 | 0), (10 | 0), (11 | 0))), __.intifyVector(__.makeVector((1 | 0), (5 | 0), (9 | 0))), __.intifyVector(__.makeVector((5 | 0), (11 | 0), (4 | 0))), __.intifyVector(__.makeVector((11 | 0), (10 | 0), (2 | 0))), __.intifyVector(__.makeVector((10 | 0), (7 | 0), (6 | 0))), __.intifyVector(__.makeVector((7 | 0), (1 | 0), (8 | 0))), __.intifyVector(__.makeVector((3 | 0), (9 | 0), (4 | 0))), __.intifyVector(__.makeVector((3 | 0), (4 | 0), (2 | 0))), __.intifyVector(__.makeVector((3 | 0), (2 | 0), (6 | 0))), __.intifyVector(__.makeVector((3 | 0), (6 | 0), (8 | 0))), __.intifyVector(__.makeVector((3 | 0), (8 | 0), (9 | 0))), __.intifyVector(__.makeVector((4 | 0), (9 | 0), (5 | 0))), __.intifyVector(__.makeVector((2 | 0), (4 | 0), (11 | 0))), __.intifyVector(__.makeVector((6 | 0), (2 | 0), (10 | 0))), __.intifyVector(__.makeVector((8 | 0), (6 | 0), (7 | 0))), __.intifyVector(__.makeVector((9 | 0), (8 | 0), (1 | 0)))];\n            for (var i = (0 | 0); i < (vertices.len() | 0); i++) {\n                this.vertices.push((_a = (0, std_math_1.normalize)(vertices[i]), _b = radius, [_a[0] * _b, _a[1] * _b, _a[2] * _b]));\n            }\n            for (var i = (0 | 0); i < (triangles.len() | 0); i++) {\n                this.triangles.push(index + triangles[i][0]);\n                this.triangles.push(index + triangles[i][1]);\n                this.triangles.push(index + triangles[i][2]);\n            }\n            for (var i = (0 | 0); i < subdivisions; i++) {\n                var newTriangles = [];\n                for (var j = (0 | 0); j < (this.triangles.len() | 0); j = j + (3 | 0)) {\n                    var i0 = this.triangles[j + (0 | 0)];\n                    var i1 = this.triangles[j + (1 | 0)];\n                    var i2 = this.triangles[j + (2 | 0)];\n                    var v0 = this.vertices[i0];\n                    var v1 = this.vertices[i1];\n                    var v2 = this.vertices[i2];\n                    var v3 = (0, std_math_1.normalize)((_c = (_e = v0, _f = v1, [_e[0] + _f[0], _e[1] + _f[1], _e[2] + _f[2]]), _d = 2.0, [_c[0] / _d, _c[1] / _d, _c[2] / _d]));\n                    var v4 = (0, std_math_1.normalize)((_g = (_j = v1, _k = v2, [_j[0] + _k[0], _j[1] + _k[1], _j[2] + _k[2]]), _h = 2.0, [_g[0] / _h, _g[1] / _h, _g[2] / _h]));\n                    var v5 = (0, std_math_1.normalize)((_l = (_o = v2, _p = v0, [_o[0] + _p[0], _o[1] + _p[1], _o[2] + _p[2]]), _m = 2.0, [_l[0] / _m, _l[1] / _m, _l[2] / _m]));\n                    var i3 = (this.vertices.len() | 0);\n                    var i4 = i3 + (1 | 0);\n                    var i5 = i3 + (2 | 0);\n                    this.vertices.push((_q = v3, _r = radius, [_q[0] * _r, _q[1] * _r, _q[2] * _r]));\n                    this.vertices.push((_s = v4, _t = radius, [_s[0] * _t, _s[1] * _t, _s[2] * _t]));\n                    this.vertices.push((_u = v5, _v = radius, [_u[0] * _v, _u[1] * _v, _u[2] * _v]));\n                    newTriangles.push(i0, i3, i5);\n                    newTriangles.push(i3, i1, i4);\n                    newTriangles.push(i3, i4, i5);\n                    newTriangles.push(i5, i4, i2);\n                }\n                this.triangles = newTriangles;\n            }\n            for (var i = (0 | 0); i < (this.vertices.len() | 0); i++) {\n                var normal = (0, std_math_1.normalize)(this.vertices[i]);\n                var tangent = (0, std_math_1.normalize)(__.makeVector(normal[2], (0 | 0), (__.FM.negate_1(normal[0]))));\n                var bitangent = (0, std_math_1.normalize)((0, std_math_1.cross)(normal, tangent));\n                this.normals.push(normal);\n                this.tangents.push(tangent);\n                this.bitangents.push(bitangent);\n            }\n            for (var i = (0 | 0); i < (this.triangles.len() | 0); i = i + (3 | 0)) {\n                var i0 = this.triangles[i + (0 | 0)];\n                var i1 = this.triangles[i + (1 | 0)];\n                var i2 = this.triangles[i + (2 | 0)];\n                var v0 = this.vertices[i0];\n                var v1 = this.vertices[i1];\n                var v2 = this.vertices[i2];\n                var uv0 = __.FM.float_2_1_1(__.add((0, std_math_1.atan2)(v0[2], v0[0]) / common_1.PI / 2.0, 0.5), __.add(Math.asin(v0[1]) / common_1.PI, 0.5));\n                var uv1 = __.FM.float_2_1_1(__.add((0, std_math_1.atan2)(v1[2], v1[0]) / common_1.PI / 2.0, 0.5), __.add(Math.asin(v1[1]) / common_1.PI, 0.5));\n                var uv2 = __.FM.float_2_1_1(__.add((0, std_math_1.atan2)(v2[2], v2[0]) / common_1.PI / 2.0, 0.5), __.add(Math.asin(v2[1]) / common_1.PI, 0.5));\n                this.uvs.push(uv0);\n                this.uvs.push(uv1);\n                this.uvs.push(uv2);\n            }\n            this.translate(pos);\n        };\n        Mesh.prototype.cylinder = function (pos, radius, height, vertices) {\n            if (vertices === void 0) { vertices = (32 | 0); }\n            var shader_self_temp = this;\n            this.translate(pos);\n        };\n        Mesh.prototype.capsule = function (pos, radius, height, vertices) {\n            if (vertices === void 0) { vertices = (32 | 0); }\n            var shader_self_temp = this;\n            this.translate(pos);\n        };\n        Mesh.prototype.cone = function (pos, radius, height, vertices) {\n            if (vertices === void 0) { vertices = (32 | 0); }\n            var shader_self_temp = this;\n            var index = (this.vertices.len() | 0);\n            this.translate(pos);\n        };\n        Mesh.prototype.plane = function (pos, size, subdivisions) {\n            var _a, _b;\n            if (subdivisions === void 0) { subdivisions = (1 | 0); }\n            var shader_self_temp = this;\n            var index = (this.vertices.len() | 0);\n            var halfSize = (_a = size, _b = 2.0, [_a[0] / _b, _a[1] / _b]);\n            for (var i = (0 | 0); i <= subdivisions[0]; i++) {\n                var x = i / __.swizzle(subdivisions, 'x');\n                var posX = x * size[0] - halfSize[0];\n                for (var j = (0 | 0); j <= subdivisions[1]; j++) {\n                    var y = j / __.swizzle(subdivisions, 'y');\n                    var posY = y * size[1] - halfSize[1];\n                    this.vertices.push(__.makeVector(posX, (0 | 0), posY));\n                    this.normals.push(__.intifyVector(__.makeVector((0 | 0), (1 | 0), (0 | 0))));\n                    this.tangents.push(__.intifyVector(__.makeVector((1 | 0), (0 | 0), (0 | 0))));\n                    this.bitangents.push(__.intifyVector(__.makeVector((0 | 0), (0 | 0), (1 | 0))));\n                    this.uvs.push(__.makeVector(x, y));\n                }\n            }\n            for (var i = (0 | 0); i < subdivisions[0]; i++) {\n                for (var j = (0 | 0); j < subdivisions[1]; j++) {\n                    var i0 = i * (subdivisions[1] + (1 | 0)) + j;\n                    var i1 = i0 + (1 | 0);\n                    var i2 = i0 + subdivisions[1] + (1 | 0);\n                    var i3 = i2 + (1 | 0);\n                    this.triangles.push(index + i0);\n                    this.triangles.push(index + i1);\n                    this.triangles.push(index + i2);\n                    this.triangles.push(index + i2);\n                    this.triangles.push(index + i1);\n                    this.triangles.push(index + i3);\n                }\n            }\n            this.translate(pos);\n        };\n        Mesh.prototype.translate = function (pos) {\n            var shader_self_temp = this;\n            for (var i = (0 | 0); i < (this.vertices.len() | 0); i++) {\n                this.vertices.__index_assign_op(__.add, i, pos);\n            }\n            return this;\n        };\n        Mesh.prototype.rotate = function (quaternion) {\n            var shader_self_temp = this;\n            for (var i = (0 | 0); i < (this.vertices.len() | 0); i++) {\n                this.vertices.__index_assign(i, common_1.quat.rotate(quaternion, this.vertices[i]));\n            }\n            for (var i = (0 | 0); i < (this.normals.len() | 0); i++) {\n                this.normals.__index_assign(i, common_1.quat.rotate(quaternion, this.normals[i]));\n            }\n            return this;\n        };\n        Mesh.prototype.transform = function (matrix) {\n            var _a, _b;\n            var shader_self_temp = this;\n            for (var i = (0 | 0); i < (this.vertices.len() | 0); i++) {\n                this.vertices.__index_assign(i, (_a = (__.mul(__.makeVector(this.vertices[i], (1 | 0)), matrix)), [_a[0], _a[1], _a[2]]));\n            }\n            for (var i = (0 | 0); i < (this.normals.len() | 0); i++) {\n                this.normals.__index_assign(i, (_b = (__.mul(__.makeVector(this.normals[i], (1 | 0)), matrix)), [_b[0], _b[1], _b[2]]));\n            }\n            return this;\n        };\n        Mesh.prototype.scale = function (scale) {\n            var shader_self_temp = this;\n            for (var i = (0 | 0); i < (this.vertices.len() | 0); i++) {\n                this.vertices.__index_assign_op(__.mul, i, scale);\n            }\n            return this;\n        };\n        Mesh.prototype.bounds = function () {\n            var _a, _b, _c, _d;\n            var shader_self_temp = this;\n            var mn = (_a = 0.0, [_a, _a, _a]);\n            var mx = (_b = 0.0, [_b, _b, _b]);\n            for (var i = (0 | 0); i < (this.vertices.len() | 0); i++) {\n                mn = (0, std_math_1.min)(mn, this.vertices[i]);\n                mx = (0, std_math_1.max)(mx, this.vertices[i]);\n            }\n            return _c = mx, _d = mn, [_c[0] - _d[0], _c[1] - _d[1], _c[2] - _d[2]];\n        };\n        Mesh.prototype.center = function () {\n            var _a, _b;\n            var shader_self_temp = this;\n            var bounds = this.bounds();\n            return _a = bounds, _b = 2.0, [_a[0] / _b, _a[1] / _b, _a[2] / _b];\n        };\n        Mesh.new = function () { return new Mesh({ vertices: [], triangles: [], tangents: [], bitangents: [], normals: [], uvs: [], colors: [] }); };\n        Mesh.prototype.append = function (other) {\n            var shader_self_temp = this;\n            var oldVertices = (this.vertices.len() | 0);\n            var oldTriangles = (this.triangles.len() | 0);\n            this.vertices.append(other.vertices);\n            this.triangles.append(other.triangles);\n            this.normals.append(other.normals);\n            this.tangents.append(other.tangents);\n            this.bitangents.append(other.bitangents);\n            this.uvs.append(other.uvs);\n            this.colors.append(other.colors);\n            for (var i = oldTriangles; i < (this.triangles.len() | 0); i++) {\n                this.triangles.__index_assign_op(__.add, i, oldVertices);\n            }\n        };\n        Mesh.prototype.getVertices = function () { var shader_self_temp = this; return this.vertices; };\n        Mesh.prototype.getTriangles = function () { var shader_self_temp = this; return this.triangles; };\n        Mesh.prototype.getNormals = function () { var shader_self_temp = this; return this.normals; };\n        Mesh.prototype.getTangents = function () { var shader_self_temp = this; return this.tangents; };\n        Mesh.prototype.getBitangents = function () { var shader_self_temp = this; return this.bitangents; };\n        Mesh.prototype.getUVs = function () { var shader_self_temp = this; return this.uvs; };\n        Mesh.prototype.getColors = function () { var shader_self_temp = this; return this.colors; };\n        Mesh.prototype.setVertices = function (vertices) {\n            var shader_self_temp = this;\n            this.vertices = vertices;\n        };\n        Mesh.prototype.setTriangles = function (triangles) {\n            var shader_self_temp = this;\n            this.triangles = triangles;\n        };\n        Mesh.prototype.setNormals = function (normals) {\n            var shader_self_temp = this;\n            this.normals = normals;\n        };\n        Mesh.prototype.setTangents = function (tangents) {\n            var shader_self_temp = this;\n            this.tangents = tangents;\n        };\n        Mesh.prototype.setBitangents = function (bitangents) {\n            var shader_self_temp = this;\n            this.bitangents = bitangents;\n        };\n        Mesh.prototype.setUVs = function (uvs) {\n            var shader_self_temp = this;\n            this.uvs = uvs;\n        };\n        Mesh.prototype.setColors = function (colors) {\n            var shader_self_temp = this;\n            this.colors = colors;\n        };\n        Mesh.prototype.clone = function () {\n            return new Mesh({\n                vertices: (0, std___std_all_1.__deepClone)(this.vertices),\n                triangles: (0, std___std_all_1.__deepClone)(this.triangles),\n                normals: (0, std___std_all_1.__deepClone)(this.normals),\n                tangents: (0, std___std_all_1.__deepClone)(this.tangents),\n                bitangents: (0, std___std_all_1.__deepClone)(this.bitangents),\n                uvs: (0, std___std_all_1.__deepClone)(this.uvs),\n                colors: (0, std___std_all_1.__deepClone)(this.colors),\n                symbol: (0, std___std_all_1.__deepClone)(this.symbol),\n            });\n        };\n        Mesh.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_mesh_ts_1603_Mesh\\\",\\\"fields\\\":[[\\\"vertices\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"triangles\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int\\\"},\\\"staticSize\\\":1}],[\\\"normals\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"tangents\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"bitangents\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"uvs\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"},\\\"staticSize\\\":1}],[\\\"colors\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"},\\\"staticSize\\\":1}],[\\\"symbol\\\",null]]}\");\n        };\n        return Mesh;\n    }());\n    exports.Mesh = Mesh;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_mesh_ts_1603_Mesh\\\",\\\"fields\\\":[[\\\"vertices\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"triangles\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int\\\"},\\\"staticSize\\\":1}],[\\\"normals\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"tangents\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"bitangents\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"uvs\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"},\\\"staticSize\\\":1}],[\\\"colors\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"},\\\"staticSize\\\":1}],[\\\"symbol\\\",null]]}\"), Mesh)\n    ; /* impl Mesh */\n    var mesh = /** @class */ (function () {\n        function mesh(data) {\n        }\n        mesh.rect = function (pos, size) {\n            var _a, _b;\n            var g = Mesh.new();\n            g.rectAt(pos, (_a = pos, _b = size, [_a[0] + _b[0], _a[1] + _b[1]]));\n            return g;\n        };\n        mesh.box = function (pos, size) {\n            var g = Mesh.new();\n            g.box(size);\n            g.translate(pos);\n            return g;\n        };\n        mesh.uvSphere = function (pos, radius, vertices, rings) {\n            if (vertices === void 0) { vertices = (32 | 0); }\n            if (rings === void 0) { rings = (16 | 0); }\n            var g = Mesh.new();\n            g.uvSphere(pos, radius, vertices, rings);\n            return g;\n        };\n        mesh.icoSphere = function (pos, radius, subdivisions) {\n            if (subdivisions === void 0) { subdivisions = (1 | 0); }\n            var g = Mesh.new();\n            g.icoSphere(pos, radius, subdivisions);\n            return g;\n        };\n        mesh.plane = function (pos, size, subdivisions) {\n            if (subdivisions === void 0) { subdivisions = (1 | 0); }\n            var g = Mesh.new();\n            g.plane(pos, size, subdivisions);\n            return g;\n        };\n        /**\n            * Returns a [-1, 1] position for a given index.\n            */\n        mesh.triangleFromIndex = function (index) {\n            if (index == (0 | 0)) {\n                return __.FM.float_2_1_1(__.negate((1 | 0)), __.int(1));\n            }\n            else if (index == (1 | 0)) {\n                return __.FM.float_2_1_1(__.int(1), __.int(1));\n            }\n            else if (index == (2 | 0)) {\n                return __.FM.float_2_1_1(__.int(0), __.negate((1 | 0)));\n            }\n            else {\n                return __.FM.float_2_1_1(__.int(0), __.int(0));\n            }\n        };\n        mesh.circleFromIndex = function (vertexIndex, vertices) {\n            vertexIndex = vertices - vertexIndex;\n            var numSlices = vertices / (3 | 0);\n            var sliceIndex = Math.floor(vertexIndex / vertices * numSlices);\n            var incAngle = common_1.PI * 2.0 / numSlices;\n            var baseAngle = incAngle * sliceIndex;\n            if (vertexIndex % (3 | 0) == (0 | 0)) {\n                return __.FM.float_2_1_1(__.int(0), __.int(0));\n            }\n            else if (vertexIndex % (3 | 0) == (1 | 0)) {\n                return __.FM.float_2_1_1((0, std_math_1.cos)(baseAngle), (0, std_math_1.sin)(baseAngle));\n            }\n            else {\n                return __.FM.float_2_1_1((0, std_math_1.cos)(baseAngle + incAngle), (0, std_math_1.sin)(baseAngle + incAngle));\n            }\n        };\n        mesh.rectFromIndex = function (index, vertices) {\n            var _a, _b, _c, _d, _e, _f;\n            var x = index % vertices;\n            var y = index / vertices;\n            return _a = (_c = (_e = __.FM.float_2_1_1(x, y), _f = vertices, [_e[0] / _f, _e[1] / _f]), _d = 2.0, [_c[0] * _d, _c[1] * _d]), _b = 1.0, [_a[0] - _b, _a[1] - _b];\n        };\n        mesh.empty = function (numVerts) {\n            var _a, _b, _c, _d, _e, _f;\n            if (numVerts === void 0) { numVerts = (0 | 0); }\n            var g = Mesh.new();\n            if (numVerts > (0 | 0)) {\n                g.setVertices((0, std___std_all_1.array)(numVerts, (_a = (0 | 0), [_a, _a, _a])));\n                g.setNormals((0, std___std_all_1.array)(numVerts, (_b = (0 | 0), [_b, _b, _b])));\n                g.setTangents((0, std___std_all_1.array)(numVerts, (_c = (0 | 0), [_c, _c, _c])));\n                g.setBitangents((0, std___std_all_1.array)(numVerts, (_d = (0 | 0), [_d, _d, _d])));\n                g.setUVs((0, std___std_all_1.array)(numVerts, (_e = (0 | 0), [_e, _e])));\n                g.setColors((0, std___std_all_1.array)(numVerts, (_f = (0 | 0), [_f, _f, _f, _f])));\n                var tris = (0, std___std_all_1.array)(numVerts, (0 | 0));\n                for (var i = (0 | 0); i < numVerts; i++) {\n                    tris.__index_assign(i, i);\n                }\n                g.setTriangles(tris);\n            }\n            return g;\n        };\n        mesh.join = function (mesh1, mesh2) {\n            var g = Mesh.new();\n            g.append(mesh1);\n            g.append(mesh2);\n            return g;\n        };\n        // pub fn cylinder(pos: float3, radius: float, height: float, vertices: int = 32) -> Mesh {\n        // \tlet g = Mesh::new();\n        // \tg.cylinder(pos, radius, height, vertices);\n        // \treturn g;\n        // }\n        // pub fn capsule(pos: float3, radius: float, height: float, vertices: int = 32) -> Mesh {\n        // \tlet g = Mesh::new();\n        // \tg.capsule(pos, radius, height, vertices);\n        // \treturn g;\n        // }\n        // pub fn cone(pos: float3, radius: float, height: float, vertices: int = 32) -> Mesh {\n        // \tlet g = Mesh::new();\n        // \tg.cone(pos, radius, height, vertices);\n        // \treturn g;\n        // }\n        mesh.prototype.clone = function () {\n            return new mesh({});\n        };\n        mesh.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_mesh_ts_19639_mesh\\\",\\\"fields\\\":[]}\");\n        };\n        return mesh;\n    }());\n    exports.mesh = mesh;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_mesh_ts_19639_mesh\\\",\\\"fields\\\":[]}\"), mesh)\n    ; /* impl mesh */\n    var Material = /** @class */ (function () {\n        function Material(data) {\n            var _a, _b, _c, _d, _e, _f, _g;\n            this.baseColor = (_a = data.baseColor) !== null && _a !== void 0 ? _a : __.FM.float_4_1_1_1_1(0.0, 0.0, 0.0, 0.0);\n            this.color = (_b = data.color) !== null && _b !== void 0 ? _b : null;\n            this.normal = (_c = data.normal) !== null && _c !== void 0 ? _c : null;\n            this.normalScale = (_d = data.normalScale) !== null && _d !== void 0 ? _d : __.FM.float_2_1_1(0.0, 0.0);\n            this.roughness = (_e = data.roughness) !== null && _e !== void 0 ? _e : null;\n            this.emissive = (_f = data.emissive) !== null && _f !== void 0 ? _f : null;\n            this.metallic = (_g = data.metallic) !== null && _g !== void 0 ? _g : null;\n        }\n        Material.prototype.clone = function () {\n            return new Material({\n                baseColor: (0, std___std_all_1.__deepClone)(this.baseColor),\n                color: (0, std___std_all_1.__deepClone)(this.color),\n                normal: (0, std___std_all_1.__deepClone)(this.normal),\n                normalScale: (0, std___std_all_1.__deepClone)(this.normalScale),\n                roughness: (0, std___std_all_1.__deepClone)(this.roughness),\n                emissive: (0, std___std_all_1.__deepClone)(this.emissive),\n                metallic: (0, std___std_all_1.__deepClone)(this.metallic),\n            });\n        };\n        Material.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_mesh_ts_23155_Material\\\",\\\"fields\\\":[[\\\"baseColor\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"color\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}],[\\\"normal\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}],[\\\"normalScale\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"roughness\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}],[\\\"emissive\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}],[\\\"metallic\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}]]}\");\n        };\n        return Material;\n    }());\n    exports.Material = Material;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_mesh_ts_23155_Material\\\",\\\"fields\\\":[[\\\"baseColor\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"color\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}],[\\\"normal\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}],[\\\"normalScale\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"roughness\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}],[\\\"emissive\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}],[\\\"metallic\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}]]}\"), Material)\n    ;\n    var ModelPart = /** @class */ (function () {\n        function ModelPart(data) {\n            var _a, _b, _c;\n            this.mesh = (_a = data.mesh) !== null && _a !== void 0 ? _a : new Mesh({});\n            this.material = (_b = data.material) !== null && _b !== void 0 ? _b : new Material({});\n            this.transform = (_c = data.transform) !== null && _c !== void 0 ? _c : __.float4x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);\n        }\n        ModelPart.prototype.clone = function () {\n            return new ModelPart({\n                mesh: (0, std___std_all_1.__deepClone)(this.mesh),\n                material: (0, std___std_all_1.__deepClone)(this.material),\n                transform: (0, std___std_all_1.__deepClone)(this.transform),\n            });\n        };\n        ModelPart.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_mesh_ts_24321_ModelPart\\\",\\\"fields\\\":[[\\\"mesh\\\",{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_mesh_ts_1603_Mesh\\\",\\\"fields\\\":[[\\\"vertices\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"triangles\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int\\\"},\\\"staticSize\\\":1}],[\\\"normals\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"tangents\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"bitangents\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"uvs\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"},\\\"staticSize\\\":1}],[\\\"colors\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"},\\\"staticSize\\\":1}],[\\\"symbol\\\",null]]}],[\\\"material\\\",{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_mesh_ts_23155_Material\\\",\\\"fields\\\":[[\\\"baseColor\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"color\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}],[\\\"normal\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}],[\\\"normalScale\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"roughness\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}],[\\\"emissive\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}],[\\\"metallic\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}]]}],[\\\"transform\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4x4\\\"}]]}\");\n        };\n        return ModelPart;\n    }());\n    exports.ModelPart = ModelPart;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_mesh_ts_24321_ModelPart\\\",\\\"fields\\\":[[\\\"mesh\\\",{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_mesh_ts_1603_Mesh\\\",\\\"fields\\\":[[\\\"vertices\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"triangles\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int\\\"},\\\"staticSize\\\":1}],[\\\"normals\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"tangents\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"bitangents\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"uvs\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"},\\\"staticSize\\\":1}],[\\\"colors\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"},\\\"staticSize\\\":1}],[\\\"symbol\\\",null]]}],[\\\"material\\\",{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_mesh_ts_23155_Material\\\",\\\"fields\\\":[[\\\"baseColor\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"color\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}],[\\\"normal\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}],[\\\"normalScale\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"roughness\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}],[\\\"emissive\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}],[\\\"metallic\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}]]}],[\\\"transform\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4x4\\\"}]]}\"), ModelPart)\n    ;\n    var Model = /** @class */ (function () {\n        function Model(data) {\n            var _a;\n            this.parts = (_a = data.parts) !== null && _a !== void 0 ? _a : [];\n        }\n        Model.prototype.clone = function () {\n            return new Model({\n                parts: (0, std___std_all_1.__deepClone)(this.parts),\n            });\n        };\n        Model.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_mesh_ts_24894_Model\\\",\\\"fields\\\":[[\\\"parts\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_mesh_ts_24321_ModelPart\\\",\\\"fields\\\":[[\\\"mesh\\\",{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_mesh_ts_1603_Mesh\\\",\\\"fields\\\":[[\\\"vertices\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"triangles\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int\\\"},\\\"staticSize\\\":1}],[\\\"normals\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"tangents\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"bitangents\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"uvs\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"},\\\"staticSize\\\":1}],[\\\"colors\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"},\\\"staticSize\\\":1}],[\\\"symbol\\\",null]]}],[\\\"material\\\",{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_mesh_ts_23155_Material\\\",\\\"fields\\\":[[\\\"baseColor\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"color\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}],[\\\"normal\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}],[\\\"normalScale\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"roughness\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}],[\\\"emissive\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}],[\\\"metallic\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}]]}],[\\\"transform\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4x4\\\"}]]},\\\"staticSize\\\":1}]]}\");\n        };\n        return Model;\n    }());\n    exports.Model = Model;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_mesh_ts_24894_Model\\\",\\\"fields\\\":[[\\\"parts\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_mesh_ts_24321_ModelPart\\\",\\\"fields\\\":[[\\\"mesh\\\",{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_mesh_ts_1603_Mesh\\\",\\\"fields\\\":[[\\\"vertices\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"triangles\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int\\\"},\\\"staticSize\\\":1}],[\\\"normals\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"tangents\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"bitangents\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"},\\\"staticSize\\\":1}],[\\\"uvs\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"},\\\"staticSize\\\":1}],[\\\"colors\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"},\\\"staticSize\\\":1}],[\\\"symbol\\\",null]]}],[\\\"material\\\",{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_mesh_ts_23155_Material\\\",\\\"fields\\\":[[\\\"baseColor\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"color\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}],[\\\"normal\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}],[\\\"normalScale\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"roughness\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}],[\\\"emissive\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}],[\\\"metallic\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"texture2d\\\"}]]}],[\\\"transform\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4x4\\\"}]]},\\\"staticSize\\\":1}]]}\"), Model)\n    ;\n    window.SHD_Mesh = Mesh;\n    window.SHD_Model = Model;\n    window.SHD_ModelPart = ModelPart;\n    window.SHD_Material = Material;\n});\n"}],"emitSkipped":false,"diagnostics":[]},"/_std/textures.ts":{"outputFiles":[{"name":"/_std/textures.js","writeByteOrderMark":false,"text":"define([\"require\", \"exports\", \"/std___std_all\"], function (require, exports, std___std_all_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var globalVarGet = std___std_all_1.globalVarGet;\n});\n"}],"emitSkipped":false,"diagnostics":[]},"/_std/common.ts":{"outputFiles":[{"name":"/_std/common.js","writeByteOrderMark":false,"text":"var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\ndefine([\"require\", \"exports\", \"/std_math\", \"/std_math\", \"/std___std_all\", \"/_std/buffer\", \"/_std/ui\", \"/_std/texture\"], function (require, exports, __, std_math_1, std___std_all_1, buffer_1, ui_1, texture_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.wrap4 = exports.wrap3 = exports.wrap2 = exports.color = exports.remap1 = exports.remap = exports.tan1 = exports.cos1 = exports.sin1 = exports.hexFromColor = exports.hex = exports.cmykFromColor = exports.cmyk = exports.rgbaFromColor = exports.rgbFromColor = exports.rgba = exports.rgb = exports.hsvaFromColor = exports.hsvFromColor = exports.hsva = exports.hsv = exports.hslaFromColor = exports.hslFromColor = exports.hsla = exports.hsl = exports.screenAA = exports.matrix = exports.noise = exports.reverseMortonCode2 = exports.randColor2 = exports.randColor = exports.mortonCode2 = exports.spatial = exports.bezier = exports.Camera = exports.Camera2d = exports.quat = exports.ui = exports.texture3d = exports.texture2d = exports.buffer = exports.PI = exports.pixelToClip = void 0;\n    __ = __importStar(__);\n    var globalVarGet = std___std_all_1.globalVarGet;\n    Object.defineProperty(exports, \"buffer\", { enumerable: true, get: function () { return buffer_1.buffer; } });\n    Object.defineProperty(exports, \"ui\", { enumerable: true, get: function () { return ui_1.ui; } });\n    Object.defineProperty(exports, \"texture2d\", { enumerable: true, get: function () { return texture_1.texture2d; } });\n    Object.defineProperty(exports, \"texture3d\", { enumerable: true, get: function () { return texture_1.texture3d; } });\n    function pixelToClip(pixelPosition) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        var zeroToOne = (_a = pixelPosition, _b = env.screenSize, [_a[0] / _b[0], _a[1] / _b[1]]);\n        var zeroToTwo = (_c = zeroToOne, _d = 2.0, [_c[0] * _d, _c[1] * _d]);\n        var clipSpace = (_e = zeroToTwo, _f = (_g = 1.0, [_g, _g]), [_e[0] - _f[0], _e[1] - _f[1]]);\n        return __.makeVector(clipSpace[0], clipSpace[1] * (__.FM.negate_1(1.0)));\n    }\n    exports.pixelToClip = pixelToClip;\n    ; /**\n    * Value of PI to 35 decimal places.\n    */\n    var PI = (0, std___std_all_1.globalVarInit)(\"_slash__std_slash_common_dot_ts\", \"PI\", function () { return 3.14159265358979323846264338327950288; }, function () { return PI; });\n    exports.PI = PI;\n    var quat = /** @class */ (function () {\n        function quat(data) {\n        }\n        /**\n            * Creates a quaternion from an angle and axis.\n            */\n        quat.fromAngleAxis = function (angle, axis) { return __.FM.float_4_3_1(__.mul(axis, Math.sin(angle * 0.5)), (0, std_math_1.cos)(angle * 0.5)); };\n        /**\n            * Multiplies two quaternions and returns the result.\n            */\n        quat.mul = function (a, b) { var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m; return __.FM.float_4_3_1(__.add((_a = (_c = (_e = b, [_e[0], _e[1], _e[2]]), _d = a[3], [_c[0] * _d, _c[1] * _d, _c[2] * _d]), _b = (_f = (_h = a, [_h[0], _h[1], _h[2]]), _g = b[3], [_f[0] * _g, _f[1] * _g, _f[2] * _g]), [_a[0] + _b[0], _a[1] + _b[1], _a[2] + _b[2]]), (0, std_math_1.cross)((_j = a, [_j[0], _j[1], _j[2]]), (_k = b, [_k[0], _k[1], _k[2]]))), __.sub(a[3] * b[3], (0, std_math_1.dot)((_l = a, [_l[0], _l[1], _l[2]]), (_m = b, [_m[0], _m[1], _m[2]])))); };\n        /**\n            * Rotates a vector by a quaternion and returns the rotated vector.\n            */\n        quat.rotate = function (quaternion, vector) {\n            var _a;\n            var q = quat.mul(quat.mul(quaternion, __.FM.float_4_3_1(vector, __.int(0))), quat.conjugate(quaternion));\n            return _a = q, [_a[0], _a[1], _a[2]];\n        };\n        /**\n            * Returns the conjugate of the input quaternion.\n            *\n            * The conjugate of a quaternion number is a quaternion with the same magnitudes but with the sign of the imaginary parts changed\n            */\n        quat.conjugate = function (quaternion) { var _a; return __.FM.float_4_3_1(__.negate((_a = quaternion, [_a[0], _a[1], _a[2]])), __.swizzle(quaternion, 'w')); };\n        /**\n            * Returns the inverse of the input quaternion.\n            */\n        quat.inverse = function (quaternion) { var _a, _b; return _a = quat.conjugate(quaternion), _b = (0, std_math_1.dot)(quaternion, quaternion), [_a[0] / _b, _a[1] / _b, _a[2] / _b, _a[3] / _b]; };\n        /**\n            * Generates a quaternion that rotates from one direction to another via the shortest path.\n            */\n        quat.fromToRotation = function (from, to) {\n            var _a;\n            var q = (_a = 0.0, [_a, _a, _a, _a]);\n            var d = (0, std_math_1.dot)(from, to);\n            if (d < (__.FM.negate_1(0.999999))) {\n                var right = __.FM.float_3_1_1_1(__.int(1), __.int(0), __.int(0));\n                var up = __.FM.float_3_1_1_1(__.int(0), __.int(1), __.int(0));\n                var tmp = (0, std_math_1.cross)(right, from);\n                if ((0, std_math_1.length)(tmp) < 0.000001) {\n                    tmp = (0, std_math_1.cross)(up, from);\n                }\n                tmp = (0, std_math_1.normalize)(tmp);\n                q = quat.fromAngleAxis(PI, tmp);\n            }\n            else if (d > 0.999999) {\n                q = __.FM.float_4_1_1_1_1(__.int(0), __.int(0), __.int(0), __.int(1));\n            }\n            else {\n                q = __.FM.float_4_3_1((0, std_math_1.cross)(from, to), __.add((1 | 0), d));\n                q = (0, std_math_1.normalize)(q);\n            }\n            return q;\n        };\n        quat.diff = function (a, b) { var _a, _b; return _a = a, _b = quat.inverse(b), [_a[0] * _b[0], _a[1] * _b[1], _a[2] * _b[2], _a[3] * _b[3]]; };\n        /**\n            * Generates lookAt quaternion.\n            */\n        quat.lookAt = function (forward, up) {\n            var right = (0, std_math_1.normalize)((0, std_math_1.cross)(forward, up));\n            up = (0, std_math_1.normalize)((0, std_math_1.cross)(forward, right));\n            var m00 = right[0];\n            var m01 = right[1];\n            var m02 = right[2];\n            var m10 = up[0];\n            var m11 = up[1];\n            var m12 = up[2];\n            var m20 = forward[0];\n            var m21 = forward[1];\n            var m22 = forward[2];\n            var num8 = (m00 + m11) + m22;\n            var q = __.FM.float_4_1_1_1_1(__.int(0), __.int(0), __.int(0), __.int(1));\n            if (num8 > 0.0) {\n                var num = Math.sqrt(num8 + 1.0);\n                var w_1 = num * 0.5;\n                num = 0.5 / num;\n                var x_1 = (m12 - m21) * num;\n                var y_1 = (m20 - m02) * num;\n                var z_1 = (m01 - m10) * num;\n                return __.FM.float_4_1_1_1_1(x_1, y_1, z_1, w_1);\n            }\n            if (__.and((m00 >= m11), (m00 >= m22))) {\n                var num7 = Math.sqrt(((1.0 + m00) - m11) - m22);\n                var num4 = 0.5 / num7;\n                var x_2 = 0.5 * num7;\n                var y_2 = (m01 + m10) * num4;\n                var z_2 = (m02 + m20) * num4;\n                var w_2 = (m12 - m21) * num4;\n                return __.FM.float_4_1_1_1_1(x_2, y_2, z_2, w_2);\n            }\n            if (m11 > m22) {\n                var num6 = Math.sqrt(((1.0 + m11) - m00) - m22);\n                var num3 = 0.5 / num6;\n                var x_3 = (m10 + m01) * num3;\n                var y_3 = 0.5 * num6;\n                var z_3 = (m21 + m12) * num3;\n                var w_3 = (m20 - m02) * num3;\n                return __.FM.float_4_1_1_1_1(x_3, y_3, z_3, w_3);\n            }\n            var num5 = Math.sqrt(((1.0 + m22) - m00) - m11);\n            var num2 = 0.5 / num5;\n            var x = (m20 + m02) * num2;\n            var y = (m21 + m12) * num2;\n            var z = 0.5 * num5;\n            var w = (m01 - m10) * num2;\n            return __.FM.float_4_1_1_1_1(x, y, z, w);\n        };\n        /**\n            * Smooth interpolation between two quaternions.\n            */\n        quat.slerp = function (a, b, t) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n            if ((0, std_math_1.length)(a) == 0.0) {\n                if ((0, std_math_1.length)(b) == 0.0) {\n                    return __.FM.float_4_1_1_1_1(__.int(0), __.int(0), __.int(0), __.int(1));\n                }\n                return b;\n            }\n            else if ((0, std_math_1.length)(b) == 0.0) {\n                return a;\n            }\n            var cosHalfAngle = a[3] * b[3] + (0, std_math_1.dot)((_a = a, [_a[0], _a[1], _a[2]]), (_b = b, [_b[0], _b[1], _b[2]]));\n            if (__.or(cosHalfAngle >= 1.0, cosHalfAngle <= (__.FM.negate_1(1.0)))) {\n                return a;\n            }\n            else if (cosHalfAngle < 0.0) {\n                b = (_c = b, _d = (__.FM.negate_1(1.0)), [_c[0] * _d, _c[1] * _d, _c[2] * _d, _c[3] * _d]);\n                cosHalfAngle = (__.FM.negate_1(cosHalfAngle));\n            }\n            var blendA = 0.0;\n            var blendB = 0.0;\n            if (cosHalfAngle < 0.99) {\n                var halfAngle = Math.acos(cosHalfAngle);\n                var sinHalfAngle = Math.sin(halfAngle);\n                var oneOverSinHalfAngle = 1.0 / sinHalfAngle;\n                blendA = Math.sin(halfAngle * (1.0 - t)) * oneOverSinHalfAngle;\n                blendB = Math.sin(halfAngle * t) * oneOverSinHalfAngle;\n            }\n            else {\n                blendA = 1.0 - t;\n                blendB = t;\n            }\n            var result = __.FM.float_4_3_1(__.add((_e = blendA, _f = (_g = a, [_g[0], _g[1], _g[2]]), [_e * _f[0], _e * _f[1], _e * _f[2]]), (_h = blendB, _j = (_k = b, [_k[0], _k[1], _k[2]]), [_h * _j[0], _h * _j[1], _h * _j[2]])), __.add(blendA * a[3], blendB * b[3]));\n            if ((0, std_math_1.length)(result) > 0.0) {\n                return (0, std_math_1.normalize)(result);\n            }\n            return __.FM.float_4_1_1_1_1(__.int(0), __.int(0), __.int(0), __.int(1));\n        };\n        /**\n            * Converts quaternion to matrix.\n            */\n        quat.toMatrix = function (quaternion) {\n            var x = quaternion[0];\n            var y = quaternion[1];\n            var z = quaternion[2];\n            var w = quaternion[3];\n            var x2 = x + x;\n            var y2 = y + y;\n            var z2 = z + z;\n            var xx = x * x2;\n            var xy = x * y2;\n            var xz = x * z2;\n            var yy = y * y2;\n            var yz = y * z2;\n            var zz = z * z2;\n            var wx = w * x2;\n            var wy = w * y2;\n            var wz = w * z2;\n            var m = __.float4x4(1.0 - (yy + zz), xy + wz, xz - wy, (0 | 0), xy - wz, 1.0 - (xx + zz), yz + wx, (0 | 0), xz + wy, yz - wx, 1.0 - (xx + yy), (0 | 0), (0 | 0), (0 | 0), (0 | 0), 1.0);\n            return m;\n        };\n        quat.fromEulerAngles = function (angles) {\n            var cr = Math.cos(angles[0] * 0.5);\n            var sr = Math.sin(angles[0] * 0.5);\n            var cp = Math.cos(angles[1] * 0.5);\n            var sp = Math.sin(angles[1] * 0.5);\n            var cy = Math.cos(angles[2] * 0.5);\n            var sy = Math.sin(angles[2] * 0.5);\n            return __.FM.float_4_1_1_1_1(__.sub(sr * cp * cy, cr * sp * sy), __.add(cr * sp * cy, sr * cp * sy), __.sub(cr * cp * sy, sr * sp * cy), __.add(cr * cp * cy, sr * sp * sy));\n        };\n        quat.prototype.clone = function () {\n            return new quat({});\n        };\n        quat.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_common_ts_2148_quat\\\",\\\"fields\\\":[]}\");\n        };\n        return quat;\n    }());\n    exports.quat = quat;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_common_ts_2148_quat\\\",\\\"fields\\\":[]}\"), quat)\n    ; /* impl quat */\n    window.shadeupQuat = quat;\n    var Camera2d = /** @class */ (function () {\n        function Camera2d(data) {\n            var _a, _b;\n            this.position = (_a = data.position) !== null && _a !== void 0 ? _a : __.FM.float_2_1_1(__.int(0), __.int(0));\n            this.zoom = (_b = data.zoom) !== null && _b !== void 0 ? _b : (1 | 0);\n        }\n        Camera2d.prototype.transform = function (position) { var _a, _b, _c, _d; var shader_self_temp = this; return _a = (_c = position, _d = this.position, [_c[0] - _d[0], _c[1] - _d[1]]), _b = this.zoom, [_a[0] * _b, _a[1] * _b]; };\n        /**\n            * Moves and zooms the camera to fit the given size. (centers the camera in the viewport)\n            */\n        Camera2d.prototype.fit = function (size) {\n            var _a, _b, _c, _d, _e, _f;\n            var shader_self_temp = this;\n            var zoom = (1 | 0) / (0, std_math_1.min)(env.screenSize[0] / size[0], env.screenSize[1] / size[1]);\n            var position = (_a = (_c = env.screenSize, _d = (_e = size, _f = ((1 | 0) / zoom), [_e[0] * _f, _e[1] * _f]), [_c[0] - _d[0], _c[1] - _d[1]]), _b = (2 | 0), [_a[0] / _b, _a[1] / _b]);\n            this.position = position;\n            this.zoom = zoom;\n        };\n        Camera2d.prototype.clone = function () {\n            return new Camera2d({\n                position: (0, std___std_all_1.__deepClone)(this.position),\n                zoom: (0, std___std_all_1.__deepClone)(this.zoom),\n            });\n        };\n        Camera2d.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_common_ts_9656_Camera2d\\\",\\\"fields\\\":[[\\\"position\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"zoom\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}]]}\");\n        };\n        return Camera2d;\n    }());\n    exports.Camera2d = Camera2d;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_common_ts_9656_Camera2d\\\",\\\"fields\\\":[[\\\"position\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"zoom\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}]]}\"), Camera2d)\n    ; /* impl Camera2d */\n    var Camera = /** @class */ (function () {\n        function Camera(data) {\n            var _a, _b, _c, _d, _e, _f, _g;\n            this.position = (_a = data.position) !== null && _a !== void 0 ? _a : __.FM.float_3_1_1_1(__.int(0), __.int(0), __.int(0));\n            this.rotation = (_b = data.rotation) !== null && _b !== void 0 ? _b : __.FM.float_4_1_1_1_1(__.int(1), __.int(0), __.int(0), __.int(0));\n            this.width = (_c = data.width) !== null && _c !== void 0 ? _c : (1920 | 0);\n            this.height = (_d = data.height) !== null && _d !== void 0 ? _d : (1080 | 0);\n            this.fov = (_e = data.fov) !== null && _e !== void 0 ? _e : (90 | 0);\n            this.near = (_f = data.near) !== null && _f !== void 0 ? _f : (1 | 0);\n            this.far = (_g = data.far) !== null && _g !== void 0 ? _g : (100000 | 0);\n        }\n        Camera.prototype.getRay = function (screen) {\n            var shader_self_temp = this;\n            var aspect = this.width / this.height;\n            var x = screen[0];\n            var y = screen[1];\n            var Px = ((2 | 0) * ((x + 0.5) / this.width) - (1 | 0)) * Math.tan(this.fov / (2 | 0) * PI / (180 | 0)) * aspect;\n            var Py = ((1 | 0) - (2 | 0) * ((y + 0.5) / this.height)) * Math.tan(this.fov / (2 | 0) * PI / (180 | 0));\n            return quat.rotate(this.rotation, (0, std_math_1.normalize)(__.makeVector(Px, Py, (__.FM.negate_1((1 | 0))))));\n        };\n        Camera.prototype.getTransformToViewMatrix = function (position, scale, rotation) {\n            var shader_self_temp = this;\n            var rotationMatrix = quat.toMatrix(rotation);\n            var translationMatrix = __.float4x4(scale[0], (0 | 0), (0 | 0), (0 | 0), (0 | 0), scale[1], (0 | 0), (0 | 0), (0 | 0), (0 | 0), scale[2], (0 | 0), position[0], position[1], position[2], (1 | 0));\n            return __.mul(__.mul(__.mul(this.getPerspectiveMatrix(), this.getWorldToViewMatrix()), translationMatrix), rotationMatrix);\n        };\n        Camera.prototype.getCombinedMatrix = function () { var shader_self_temp = this; return __.mul(this.getPerspectiveMatrix(), this.getWorldToViewMatrix()); };\n        Camera.prototype.getCombinedMatrixReverseZ = function () { var shader_self_temp = this; return __.mul(this.getPerspectiveMatrixReverseZ(), this.getWorldToViewMatrix()); };\n        Camera.prototype.getWorldToViewMatrix = function () {\n            var shader_self_temp = this;\n            var rotationMatrix = quat.toMatrix(this.rotation);\n            var translationMatrix = __.float4x4((1 | 0), (0 | 0), (0 | 0), (0 | 0), (0 | 0), (1 | 0), (0 | 0), (0 | 0), (0 | 0), (0 | 0), (1 | 0), (0 | 0), this.position[0], this.position[1], this.position[2], (1 | 0));\n            return (0, std_math_1.inverse)(__.mul(translationMatrix, rotationMatrix));\n        };\n        Camera.prototype.getPerspectiveMatrixReverseZ = function () { var shader_self_temp = this; return matrix.perspectiveReverseZ(this.fov, this.width / this.height, this.near); };\n        Camera.prototype.getPerspectiveMatrix = function () {\n            var shader_self_temp = this;\n            return matrix.perspective(this.fov, this.width / this.height, this.near, this.far); // // let matrix = float4x4();\n            // let far = self.far;\n            // let near = self.near;\n            // let aspect = self.width / self.height;\n            // let fovRad = radians(self.fov);\n            // let tanFov = tan( fovRad * 0.5 );\n            // // matrix[0][0] = ;\n            // // matrix[1][1] = 1.0 / tanFov;\n            // // matrix[2][2] = -((far + near)/(far - near));\n            // // matrix[3][2] = -((2*(near*far))/(far - near));\n            // // matrix[2][3] = -1;\n            // // matrix[3][3] = 0;\n            // let matrix = float4x4(\n            //     1.0 / (tanFov * aspect), 0, 0, 0,\n            //     0, 1.0 / tanFov, 0, 0,\n            //     0, 0, -((far + near)/(far - near)), -1,\n            //     0, 0, -((2*(near*far))/(far - near)), 0\n            // );\n            // return matrix;\n        };\n        Camera.prototype.getOrthographicMatrix = function () {\n            var shader_self_temp = this;\n            var matrix = __.float4x4();\n            var far = this.far;\n            var near = this.near;\n            var w = 1.0 / this.width;\n            var h = 1.0 / this.height;\n            matrix.__index((0 | 0)).__index_assign((0 | 0), w);\n            matrix.__index((1 | 0)).__index_assign((1 | 0), h);\n            matrix.__index((2 | 0)).__index_assign((2 | 0), (__.FM.negate_1((2.0 / (far - near)))));\n            matrix.__index((2 | 0)).__index_assign((3 | 0), ((far + near) / (far - near)));\n            //matrix[2][2] = -((far + near)/(far - near));\n            //matrix[3][2] = -((2*(near*far))/(far - near));\n            matrix.__index((3 | 0)).__index_assign((3 | 0), 1.0);\n            return matrix;\n        };\n        Camera.prototype.clone = function () {\n            return new Camera({\n                position: (0, std___std_all_1.__deepClone)(this.position),\n                rotation: (0, std___std_all_1.__deepClone)(this.rotation),\n                width: (0, std___std_all_1.__deepClone)(this.width),\n                height: (0, std___std_all_1.__deepClone)(this.height),\n                fov: (0, std___std_all_1.__deepClone)(this.fov),\n                near: (0, std___std_all_1.__deepClone)(this.near),\n                far: (0, std___std_all_1.__deepClone)(this.far),\n            });\n        };\n        Camera.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_common_ts_10663_Camera\\\",\\\"fields\\\":[[\\\"position\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"}],[\\\"rotation\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"width\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"height\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"fov\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"near\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"far\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}]]}\");\n        };\n        return Camera;\n    }());\n    exports.Camera = Camera;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_common_ts_10663_Camera\\\",\\\"fields\\\":[[\\\"position\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float3\\\"}],[\\\"rotation\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"width\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"height\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"fov\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"near\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"far\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}]]}\"), Camera)\n    ; /* impl Camera */\n    window._makeCamera = Camera;\n    window._makeCamera2d = Camera2d;\n    function easeA(aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\n    function easeB(aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\n    function easeC(aA1) { return 3.0 * aA1; }\n    function calcBezier(aT, aA1, aA2) { return ((easeA(aA1, aA2) * aT + easeB(aA1, aA2)) * aT + easeC(aA1)) * aT; }\n    function getSlope(aT, aA1, aA2) { return 3.0 * easeA(aA1, aA2) * aT * aT + 2.0 * easeB(aA1, aA2) * aT + easeC(aA1); }\n    // fn getTForX(aX: float, aA1: float, aA2: float) -> float {\n    //     let aGuessT = aX;\n    //     for (let i = 0; i <= 10; i++) {\n    //         let currentSlope = bezSlope(aGuessT, aA1, aA2);\n    //         if (currentSlope == 0.0) {\n    //             return aGuessT;\n    //         }\n    //         let currentX = calcBezier(aGuessT, aA1, aA2) - aX;\n    //         aGuessT -= currentX / currentSlope;\n    //     }\n    //     return aGuessT;\n    // }\n    var NEWTON_ITERATIONS = ((0, std___std_all_1.globalVarInit)(\"_slash__std_slash_common_dot_ts\", \"NEWTON_ITERATIONS\", function () { return (4 | 0); }, function () { return NEWTON_ITERATIONS; }) | 0);\n    var NEWTON_MIN_SLOPE = (0, std___std_all_1.globalVarInit)(\"_slash__std_slash_common_dot_ts\", \"NEWTON_MIN_SLOPE\", function () { return 0.02; }, function () { return NEWTON_MIN_SLOPE; });\n    var SUBDIVISION_PRECISION = (0, std___std_all_1.globalVarInit)(\"_slash__std_slash_common_dot_ts\", \"SUBDIVISION_PRECISION\", function () { return 0.0000001; }, function () { return SUBDIVISION_PRECISION; });\n    var SUBDIVISION_MAX_ITERATIONS = ((0, std___std_all_1.globalVarInit)(\"_slash__std_slash_common_dot_ts\", \"SUBDIVISION_MAX_ITERATIONS\", function () { return (10 | 0); }, function () { return SUBDIVISION_MAX_ITERATIONS; }) | 0);\n    var kSplineTableSize = ((0, std___std_all_1.globalVarInit)(\"_slash__std_slash_common_dot_ts\", \"kSplineTableSize\", function () { return (11 | 0); }, function () { return kSplineTableSize; }) | 0);\n    var kSampleStepSize = (0, std___std_all_1.globalVarInit)(\"_slash__std_slash_common_dot_ts\", \"kSampleStepSize\", function () { return 1.0 / __.sub(kSplineTableSize, (1 | 0)); }, function () { return kSampleStepSize; });\n    function getTForX(aX, mX1, mX2) {\n        var mSampleValues = (0, std___std_all_1.array)((11 | 0), (0 | 0));\n        for (var i = (0 | 0); i < kSplineTableSize; i++) {\n            mSampleValues.__index_assign(i, calcBezier(i * kSampleStepSize, mX1, mX2));\n        } // Find interval where t lies\n        var intervalStart = 0.0;\n        var currentSample = (1 | 0);\n        var lastSample = kSplineTableSize - (1 | 0);\n        for (var dummy = (0 | 0); __.and(currentSample != lastSample, mSampleValues[currentSample] <= aX); currentSample++) {\n            intervalStart = intervalStart + kSampleStepSize;\n        }\n        currentSample--;\n        // t now lies between *currentSample and *currentSample+1\n        // Interpolate to provide an initial guess for t\n        var csamp = mSampleValues[currentSample];\n        var dst = (aX - csamp) / (mSampleValues[currentSample + (1 | 0)] - csamp);\n        var guessForT = intervalStart + dst * kSampleStepSize;\n        // Check the slope to see what strategy to use. If the slope is too small\n        // Newton-Raphson iteration won't converge on a root so we use bisection\n        // instead.\n        var initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= NEWTON_MIN_SLOPE) {\n            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        }\n        else if (initialSlope == 0.0) {\n            return guessForT;\n        }\n        else {\n            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize);\n        }\n    }\n    function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n        for (var i = (0 | 0); i < NEWTON_ITERATIONS; i++) { // We're trying to find where f(t) = aX,\n            // so we're actually looking for a root for: CalcBezier(t) - aX\n            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n            var currentSlope = getSlope(aGuessT, mX1, mX2);\n            if (currentSlope == 0.0)\n                return aGuessT;\n            aGuessT = aGuessT - currentX / currentSlope;\n        }\n        return aGuessT;\n    }\n    function binarySubdivide(aX, aA, aB) {\n        var currentX = 0.0;\n        var currentT = 0.0;\n        var i = (0 | 0);\n        while ((true)) {\n            i++;\n            if (__.and(Math.abs(currentX) > SUBDIVISION_PRECISION, i < SUBDIVISION_MAX_ITERATIONS)) {\n                currentT = aA + (aB - aA) / 2.0;\n                currentX = __.sub(CalcBezier(currentT, mX1, mX2), aX);\n                if (currentX > 0.0) {\n                    aB = currentT;\n                }\n                else {\n                    aA = currentT;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return currentT;\n    }\n    var bezier = /** @class */ (function () {\n        function bezier(data) {\n        }\n        bezier.cubic2 = function (a, b, c, d, t) { var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p; return _a = (_c = (_e = (_g = __.pow((1.0 - t), (3 | 0)), _h = a, [_g * _h[0], _g * _h[1]]), _f = (_j = 3.0 * __.pow((1.0 - t), (2 | 0)) * t, _k = b, [_j * _k[0], _j * _k[1]]), [_e[0] + _f[0], _e[1] + _f[1]]), _d = (_l = 3.0 * (1.0 - t) * __.pow(t, (2 | 0)), _m = c, [_l * _m[0], _l * _m[1]]), [_c[0] + _d[0], _c[1] + _d[1]]), _b = (_o = __.pow(t, (3 | 0)), _p = d, [_o * _p[0], _o * _p[1]]), [_a[0] + _b[0], _a[1] + _b[1]]; };\n        bezier.cubic3 = function (a, b, c, d, t) { var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p; return _a = (_c = (_e = (_g = __.pow((1.0 - t), (3 | 0)), _h = a, [_g * _h[0], _g * _h[1], _g * _h[2]]), _f = (_j = 3.0 * __.pow((1.0 - t), (2 | 0)) * t, _k = b, [_j * _k[0], _j * _k[1], _j * _k[2]]), [_e[0] + _f[0], _e[1] + _f[1], _e[2] + _f[2]]), _d = (_l = 3.0 * (1.0 - t) * __.pow(t, (2 | 0)), _m = c, [_l * _m[0], _l * _m[1], _l * _m[2]]), [_c[0] + _d[0], _c[1] + _d[1], _c[2] + _d[2]]), _b = (_o = __.pow(t, (3 | 0)), _p = d, [_o * _p[0], _o * _p[1], _o * _p[2]]), [_a[0] + _b[0], _a[1] + _b[1], _a[2] + _b[2]]; };\n        bezier.quadratic2 = function (a, b, c, t) { var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k; return _a = (_c = (_e = __.pow((1.0 - t), (2 | 0)), _f = a, [_e * _f[0], _e * _f[1]]), _d = (_g = 2.0 * (1.0 - t) * t, _h = b, [_g * _h[0], _g * _h[1]]), [_c[0] + _d[0], _c[1] + _d[1]]), _b = (_j = __.pow(t, (2 | 0)), _k = c, [_j * _k[0], _j * _k[1]]), [_a[0] + _b[0], _a[1] + _b[1]]; };\n        bezier.quadratic3 = function (a, b, c, t) { var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k; return _a = (_c = (_e = __.pow((1.0 - t), (2 | 0)), _f = a, [_e * _f[0], _e * _f[1], _e * _f[2]]), _d = (_g = 2.0 * (1.0 - t) * t, _h = b, [_g * _h[0], _g * _h[1], _g * _h[2]]), [_c[0] + _d[0], _c[1] + _d[1], _c[2] + _d[2]]), _b = (_j = __.pow(t, (2 | 0)), _k = c, [_j * _k[0], _j * _k[1], _j * _k[2]]), [_a[0] + _b[0], _a[1] + _b[1], _a[2] + _b[2]]; };\n        /**\n            * 3d triangle patch evaulation with barycentric coordinates.\n            */\n        bezier.patch = function (a, ab, b, bc, c, ca, barycentricT) { return (__.mul(__.f(1., c), ((__.mul(s, s) | 0))) | 0) + (__.mul((__.mul(__.f(2., bc), s) | 0), t) | 0) + (__.mul((__.mul(__.f(2., ca), s) | 0), u) | 0) + (__.mul(__.f(1., b), ((__.mul(t, t) | 0))) | 0) + (__.mul((__.mul(__.f(2., ab), t) | 0), u) | 0) + (__.mul(__.f(1., a), ((__.mul(u, u) | 0))) | 0); };\n        bezier.easing = function (controlA, controlB, t) { return calcBezier(getTForX(t, controlA[0], controlB[0]), controlA[1], controlB[1]); };\n        bezier.prototype.clone = function () {\n            return new bezier({});\n        };\n        bezier.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_common_ts_20330_bezier\\\",\\\"fields\\\":[]}\");\n        };\n        return bezier;\n    }());\n    exports.bezier = bezier;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_common_ts_20330_bezier\\\",\\\"fields\\\":[]}\"), bezier)\n    ; /* impl bezier */\n    /**\n    * Provides space related utilities like z-order curves and quadtrees.\n    */\n    var spatial = /** @class */ (function () {\n        function spatial(data) {\n        }\n        spatial.cantorPair = function (v) { return ((v[0] + v[1]) * (v[0] + v[1] + (1 | 0))) / (2 | 0) + v[1]; };\n        spatial.cantorUnpair = function (v) {\n            var w = Math.floor((Math.sqrt(8.0 * v + 1.0) - 1.0) / 2.0);\n            var t = (w * w + w) / 2.0;\n            var y = v - t;\n            var x = w - y;\n            return __.FM.int_2_1_1(x, y);\n        };\n        spatial.hilbertRotate = function (n, b, r) {\n            var x = b[0];\n            var y = b[1];\n            if (r[1] == (0 | 0)) {\n                if (r[0] == (1 | 0)) {\n                    x = n - (1 | 0) - x;\n                    y = n - (1 | 0) - y;\n                }\n                var t = x;\n                x = y;\n                y = t;\n            }\n            return __.FM.int_2_1_1(x, y);\n        };\n        spatial.hilbertUncurve = function (n, v) {\n            var x = v[0];\n            var y = v[1];\n            var rx = (0 | 0);\n            var ry = (0 | 0);\n            var s = (0 | 0);\n            var d = (0 | 0);\n            for (s = n / (2 | 0); s > (0 | 0); s = s / (2 | 0)) {\n                rx = ((x & s) > (0 | 0)) ? (1 | 0) : (0 | 0);\n                ry = ((y & s) > (0 | 0)) ? (1 | 0) : (0 | 0);\n                d = d + s * s * (((3 | 0) * rx) ^ ry);\n                var o = __.intifyVector(spatial.hilbertRotate(n, __.intifyVector(__.makeVector(x, y)), __.intifyVector(__.makeVector(rx, ry))));\n                x = o[0];\n                y = o[1];\n            }\n            return d;\n        };\n        spatial.hilbertCurve = function (n, v) {\n            var rx = (0 | 0);\n            var ry = (0 | 0);\n            var t = v;\n            var x = (0 | 0);\n            var y = (0 | 0);\n            for (var s = (1 | 0); s < n; s = s * (2 | 0)) {\n                rx = (1 | 0) & (t / (2 | 0));\n                ry = (1 | 0) & (t ^ rx);\n                var o = __.intifyVector(spatial.hilbertRotate(s, __.intifyVector(__.makeVector(x, y)), __.intifyVector(__.makeVector(rx, ry))));\n                x = o[0];\n                y = o[1];\n                x = x + s * rx;\n                y = y + s * ry;\n                t = t / (4 | 0);\n            }\n            return __.FM.int_2_1_1(x, y);\n        };\n        spatial.mortonDecode = function (p) { return __.FM.uint_2_1_1(reverseMortonCode2(p), reverseMortonCode2(p >> (1 >>> 0))); };\n        spatial.mortonEncode = function (p) { return (__.bitor(mortonCode2(p[0]), (mortonCode2(p[1]) << (1 >>> 0))) >>> 0); };\n        spatial.prototype.clone = function () {\n            return new spatial({});\n        };\n        spatial.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_common_ts_22749_spatial\\\",\\\"fields\\\":[]}\");\n        };\n        return spatial;\n    }());\n    exports.spatial = spatial;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_common_ts_22749_spatial\\\",\\\"fields\\\":[]}\"), spatial)\n    ; /* impl spatial */\n    function mortonCode2(x) {\n        x = x & (0x0000ffff >>> 0);\n        x = (__.bitxor(x, (x << (8 | 0)))) & (0x00ff00ff >>> 0);\n        x = (__.bitxor(x, (x << (4 | 0)))) & (0x0f0f0f0f >>> 0);\n        x = (__.bitxor(x, (x << (2 | 0)))) & (0x33333333 >>> 0);\n        x = (__.bitxor(x, (x << (1 | 0)))) & (0x55555555 >>> 0);\n        return x;\n    }\n    exports.mortonCode2 = mortonCode2;\n    ;\n    function randColor(seed) { return __.FM.float_4_1_1_1_1((0, std_math_1.rand2)(__.makeVector(seed, (5 | 0))), (0, std_math_1.rand2)(__.makeVector(seed, (1 | 0))), (0, std_math_1.rand2)(__.makeVector(seed, (4 | 0))), __.int(1)); }\n    exports.randColor = randColor;\n    ;\n    function randColor2(seed) { return __.FM.float_4_1_1_1_1((0, std_math_1.rand3)(__.makeVector(seed, (5 | 0))), (0, std_math_1.rand3)(__.makeVector(seed, (1 | 0))), (0, std_math_1.rand3)(__.makeVector(seed, (4 | 0))), __.int(1)); }\n    exports.randColor2 = randColor2;\n    ;\n    function reverseMortonCode2(x) {\n        x = x & (0x55555555 >>> 0);\n        x = (__.bitxor(x, (x >> (1 | 0)))) & (0x33333333 >>> 0);\n        x = (__.bitxor(x, (x >> (2 | 0)))) & (0x0f0f0f0f >>> 0);\n        x = (__.bitxor(x, (x >> (4 | 0)))) & (0x00ff00ff >>> 0);\n        x = (__.bitxor(x, (x >> (8 | 0)))) & (0x0000ffff >>> 0);\n        return x;\n    }\n    exports.reverseMortonCode2 = reverseMortonCode2;\n    ;\n    var noise = /** @class */ (function () {\n        function noise(data) {\n        }\n        noise.gaussian3 = function (v) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17;\n            var p = v;\n            var a = (_a = p, [Math.floor(_a[0]), Math.floor(_a[1]), Math.floor(_a[2])]);\n            var d = (_b = p, _c = a, [_b[0] - _c[0], _b[1] - _c[1], _b[2] - _c[2]]);\n            d = (_d = (_f = d, _g = d, [_f[0] * _g[0], _f[1] * _g[1], _f[2] * _g[2]]), _e = (_h = 3.0, _j = (_k = 2.0, _l = d, [_k * _l[0], _k * _l[1], _k * _l[2]]), [_h - _j[0], _h - _j[1], _h - _j[2]]), [_d[0] * _e[0], _d[1] * _e[1], _d[2] * _e[2]]);\n            var b = (_m = (_p = a, [_p[0], _p[0], _p[1], _p[1]]), _o = __.FM.float_4_1_1_1_1(__.float(0.0), __.float(1.0), __.float(0.0), __.float(1.0)), [_m[0] + _o[0], _m[1] + _o[1], _m[2] + _o[2], _m[3] + _o[3]]);\n            var k1 = perm((_q = b, [_q[0], _q[1], _q[0], _q[1]]));\n            var k2 = perm((_r = (_t = k1, [_t[0], _t[1], _t[0], _t[1]]), _s = (_u = b, [_u[2], _u[2], _u[3], _u[3]]), [_r[0] + _s[0], _r[1] + _s[1], _r[2] + _s[2], _r[3] + _s[3]]));\n            var c = (_v = k2, _w = (_x = a, [_x[2], _x[2], _x[2], _x[2]]), [_v[0] + _w[0], _v[1] + _w[1], _v[2] + _w[2], _v[3] + _w[3]]);\n            var k3 = perm(c);\n            var k4 = perm((_y = c, _z = 1.0, [_y[0] + _z, _y[1] + _z, _y[2] + _z, _y[3] + _z]));\n            var o1 = (0, std_math_1.frac)((_0 = k3, _1 = (1.0 / 41.0), [_0[0] * _1, _0[1] * _1, _0[2] * _1, _0[3] * _1]));\n            var o2 = (0, std_math_1.frac)((_2 = k4, _3 = (1.0 / 41.0), [_2[0] * _3, _2[1] * _3, _2[2] * _3, _2[3] * _3]));\n            var o3 = (_4 = (_6 = o2, _7 = d[2], [_6[0] * _7, _6[1] * _7, _6[2] * _7, _6[3] * _7]), _5 = (_8 = o1, _9 = (1.0 - d[2]), [_8[0] * _9, _8[1] * _9, _8[2] * _9, _8[3] * _9]), [_4[0] + _5[0], _4[1] + _5[1], _4[2] + _5[2], _4[3] + _5[3]]);\n            var o4 = (_10 = (_12 = (_14 = o3, [_14[1], _14[3]]), _13 = d[0], [_12[0] * _13, _12[1] * _13]), _11 = (_15 = (_17 = o3, [_17[0], _17[2]]), _16 = (1.0 - d[0]), [_15[0] * _16, _15[1] * _16]), [_10[0] + _11[0], _10[1] + _11[1]]);\n            return o4[1] * d[1] + o4[0] * (1.0 - d[1]);\n        };\n        noise.gaussian2 = function (v) { return noise.gaussian3(__.makeVector(v, (0 | 0))); };\n        noise.noise1 = function (x) {\n            var i = Math.floor(x);\n            var f = (0, std_math_1.frac)(x);\n            var u = f * f * (3.0 - 2.0 * f);\n            return (0, std_math_1.lerp)(hash(i), hash(i + 1.0), u);\n        };\n        noise.noise2 = function (x) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\n            var i = (_a = x, [Math.floor(_a[0]), Math.floor(_a[1])]);\n            var f = (0, std_math_1.frac)(x);\n            // Four corners in 2D of a tile\n            var a = hash2(i);\n            var b = hash2((_b = i, _c = __.FM.float_2_1_1(__.float(1.0), __.float(0.0)), [_b[0] + _c[0], _b[1] + _c[1]]));\n            var c = hash2((_d = i, _e = __.FM.float_2_1_1(__.float(0.0), __.float(1.0)), [_d[0] + _e[0], _d[1] + _e[1]]));\n            var d = hash2((_f = i, _g = __.FM.float_2_1_1(__.float(1.0), __.float(1.0)), [_f[0] + _g[0], _f[1] + _g[1]]));\n            // Simple 2D lerp using smoothstep envelope between the values.\n            // return float3(lerp(lerp(a, b, smoothstep(0.0, 1.0, f.x)),\n            //\t\t\tlerp(c, d, smoothstep(0.0, 1.0, f.x)),\n            //\t\t\tsmoothstep(0.0, 1.0, f.y)));\n            // Same code, with the clamps in smoothstep and common subexpressions\n            // optimized away.\n            var u = (_h = (_k = f, _l = f, [_k[0] * _l[0], _k[1] * _l[1]]), _j = (_m = 3.0, _o = (_p = 2.0, _q = f, [_p * _q[0], _p * _q[1]]), [_m - _o[0], _m - _o[1]]), [_h[0] * _j[0], _h[1] * _j[1]]);\n            return (0, std_math_1.lerp)(a, b, u[0]) + (c - a) * u[1] * (1.0 - u[0]) + (d - b) * u[0] * u[1];\n        };\n        noise.fmb1 = function (x) {\n            var v = 0.0;\n            var a = 0.5;\n            var shift = __.int(100);\n            for (var i = (0 | 0); i < (5 | 0); i++) {\n                v = v + a * noise.noise1(x);\n                x = x * 2.0 + shift;\n                a = a * 0.5;\n            }\n            return v;\n        };\n        noise.fbm2 = function (x) {\n            var _a, _b, _c, _d;\n            var v = 0.0;\n            var a = 0.5;\n            var shift = __.FM.float_2_2(__.swizzle((100 | 0), \"xy\"));\n            // Rotate to reduce axial bias\n            var rot = __.float2x2(Math.cos(0.5), Math.sin(0.5), (__.FM.negate_1(Math.sin(0.5))), Math.cos(0.50));\n            for (var i = (0 | 0); i < (5 | 0); i++) {\n                v = v + a * noise.noise2(x);\n                x = (_a = (_c = __.mul(rot, x), _d = 2.0, [_c[0] * _d, _c[1] * _d]), _b = shift, [_a[0] + _b[0], _a[1] + _b[1]]);\n                a = a * 0.5;\n            }\n            return v;\n        };\n        noise.fbm3 = function (x) {\n            var _a, _b, _c, _d;\n            var v = 0.0;\n            var a = 0.5;\n            var shift = __.FM.float_3_3(__.swizzle((100 | 0), \"xyz\"));\n            for (var i = (0 | 0); i < (5 | 0); i++) {\n                v = v + a * noise.noise3(x);\n                x = (_a = (_c = x, _d = 2.0, [_c[0] * _d, _c[1] * _d, _c[2] * _d]), _b = shift, [_a[0] + _b[0], _a[1] + _b[1], _a[2] + _b[2]]);\n                a = a * 0.5;\n            }\n            return v;\n        };\n        noise.noise3 = function (x) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n            var step = __.FM.float_3_1_1_1(__.int(110), __.int(241), __.int(171));\n            var i = (_a = x, [Math.floor(_a[0]), Math.floor(_a[1]), Math.floor(_a[2])]);\n            var f = (0, std_math_1.frac)(x);\n            // For performance, compute the base input to a 1D hash from the integer part of the argument and the \n            // incremental change to the 1D based on the 3D -> 1D wrapping\n            var n = (0, std_math_1.dot)(i, step);\n            var u = (_b = (_d = f, _e = f, [_d[0] * _e[0], _d[1] * _e[1], _d[2] * _e[2]]), _c = (_f = 3.0, _g = (_h = 2.0, _j = f, [_h * _j[0], _h * _j[1], _h * _j[2]]), [_f - _g[0], _f - _g[1], _f - _g[2]]), [_b[0] * _c[0], _b[1] * _c[1], _b[2] * _c[2]]);\n            return (0, std_math_1.lerp)((0, std_math_1.lerp)((0, std_math_1.lerp)(hash(n + (0, std_math_1.dot)(step, __.FM.float_3_1_1_1(__.int(0), __.int(0), __.int(0)))), hash(n + (0, std_math_1.dot)(step, __.FM.float_3_1_1_1(__.int(1), __.int(0), __.int(0)))), u[0]), (0, std_math_1.lerp)(hash(n + (0, std_math_1.dot)(step, __.FM.float_3_1_1_1(__.int(0), __.int(1), __.int(0)))), hash(n + (0, std_math_1.dot)(step, __.FM.float_3_1_1_1(__.int(1), __.int(1), __.int(0)))), u[0]), u[1]), (0, std_math_1.lerp)((0, std_math_1.lerp)(hash(n + (0, std_math_1.dot)(step, __.FM.float_3_1_1_1(__.int(0), __.int(0), __.int(1)))), hash(n + (0, std_math_1.dot)(step, __.FM.float_3_1_1_1(__.int(1), __.int(0), __.int(1)))), u[0]), (0, std_math_1.lerp)(hash(n + (0, std_math_1.dot)(step, __.FM.float_3_1_1_1(__.int(0), __.int(1), __.int(1)))), hash(n + (0, std_math_1.dot)(step, __.FM.float_3_1_1_1(__.int(1), __.int(1), __.int(1)))), u[0]), u[1]), u[2]);\n        };\n        noise.simplex2 = function (v) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28;\n            var C = __.FM.float_4_1_1_1_1(__.float(0.211324865405187), __.float(0.366025403784439), __.negate(0.577350269189626), __.float(0.024390243902439));\n            var i = (_a = (_b = v, _c = (0, std_math_1.dot)(v, (_d = C, [_d[1], _d[1]])), [_b[0] + _c, _b[1] + _c]), [Math.floor(_a[0]), Math.floor(_a[1])]);\n            var x0 = (_e = (_g = v, _h = i, [_g[0] - _h[0], _g[1] - _h[1]]), _f = (0, std_math_1.dot)(i, (_j = C, [_j[0], _j[0]])), [_e[0] + _f, _e[1] + _f]);\n            var xv = (0, std_math_1.step)(x0[1], x0[0]);\n            var i1 = __.FM.float_2_1_1(xv, __.sub(1.0, xv));\n            var x1 = (_k = (_m = x0, _o = (_p = C, [_p[0], _p[0]]), [_m[0] + _o[0], _m[1] + _o[1]]), _l = i1, [_k[0] - _l[0], _k[1] - _l[1]]);\n            var x2 = (_q = x0, _r = (_s = C, [_s[2], _s[2]]), [_q[0] + _r[0], _q[1] + _r[1]]);\n            i = mod289_2(i);\n            var p = permute((_t = (_v = permute((_x = __.FM.float_3_1_1_1(__.float(0.0), __.swizzle(i1, 'y'), __.float(1.0)), _y = i[1], [_x[0] + _y, _x[1] + _y, _x[2] + _y])), _w = __.FM.float_3_1_1_1(__.float(0.0), __.swizzle(i1, 'x'), __.float(1.0)), [_v[0] + _w[0], _v[1] + _w[1], _v[2] + _w[2]]), _u = i[0], [_t[0] + _u, _t[1] + _u, _t[2] + _u]));\n            var m = (0, std_math_1.max)((_z = (_1 = 0.5, [_1, _1, _1]), _0 = __.FM.float_3_1_1_1((0, std_math_1.dot)(x0, x0), (0, std_math_1.dot)(x1, x1), (0, std_math_1.dot)(x2, x2)), [_z[0] - _0[0], _z[1] - _0[1], _z[2] - _0[2]]), 0.0);\n            m = (_2 = m, _3 = m, [_2[0] * _3[0], _2[1] * _3[1], _2[2] * _3[2]]);\n            m = (_4 = m, _5 = m, [_4[0] * _5[0], _4[1] * _5[1], _4[2] * _5[2]]);\n            var x = (_6 = (_8 = 2.0, _9 = (0, std_math_1.frac)((_10 = p, _11 = (_12 = C, [_12[3], _12[3], _12[3]]), [_10[0] * _11[0], _10[1] * _11[1], _10[2] * _11[2]])), [_8 * _9[0], _8 * _9[1], _8 * _9[2]]), _7 = 1.0, [_6[0] - _7, _6[1] - _7, _6[2] - _7]);\n            var h = (_13 = (_15 = x, [Math.abs(_15[0]), Math.abs(_15[1]), Math.abs(_15[2])]), _14 = 0.5, [_13[0] - _14, _13[1] - _14, _13[2] - _14]);\n            var ox = (_16 = (_17 = x, _18 = 0.5, [_17[0] + _18, _17[1] + _18, _17[2] + _18]), [Math.floor(_16[0]), Math.floor(_16[1]), Math.floor(_16[2])]);\n            var a0 = (_19 = x, _20 = ox, [_19[0] - _20[0], _19[1] - _20[1], _19[2] - _20[2]]);\n            // Normalise gradients implicitly by scaling m\n            m = (_21 = m, _22 = taylorInvSqrt((_23 = (_25 = a0, _26 = a0, [_25[0] * _26[0], _25[1] * _26[1], _25[2] * _26[2]]), _24 = (_27 = h, _28 = h, [_27[0] * _28[0], _27[1] * _28[1], _27[2] * _28[2]]), [_23[0] + _24[0], _23[1] + _24[1], _23[2] + _24[2]])), [_21[0] * _22[0], _21[1] * _22[1], _21[2] * _22[2]]);\n            // Compute final noise value at P\n            var g = __.FM.float_3_1_1_1(__.add(a0[0] * x0[0], h[0] * x0[1]), __.add(a0[1] * x1[0], h[1] * x1[1]), __.add(a0[2] * x2[0], h[2] * x2[1]));\n            return 130.0 * (0, std_math_1.dot)(m, g);\n        };\n        noise.perlin2 = function (v) {\n            var x = v[0];\n            var y = v[1];\n            var z = 0.0;\n            if (x < (0 | 0)) {\n                x = (__.FM.negate_1(x));\n            }\n            if (y < (0 | 0)) {\n                y = (__.FM.negate_1(y));\n            }\n            if (z < (0 | 0)) {\n                z = (__.FM.negate_1(z));\n            }\n            var xi = ((0, std_math_1.floor)(x) | 0);\n            var yi = ((0, std_math_1.floor)(y) | 0);\n            var zi = ((0, std_math_1.floor)(z) | 0);\n            var xf = x - xi;\n            var yf = y - yi;\n            var zf = z - zi;\n            var rxf = 0.0;\n            var ryf = 0.0;\n            var r = 0.0;\n            var ampl = 0.5;\n            var n1 = 0.0;\n            var n2 = 0.0;\n            var n3 = 0.0;\n            for (var o = (0 | 0); o < perlin_octaves; o++) {\n                var of1 = xi + (yi << PERLIN_YWRAPB) + (zi << PERLIN_ZWRAPB);\n                rxf = scaled_cosine(xf);\n                ryf = scaled_cosine(yf);\n                n1 = perlin.floatArray[of1 & PERLIN_SIZE];\n                n1 = n1 + rxf * (perlin.floatArray[(of1 + (1 | 0)) & PERLIN_SIZE] - n1);\n                n2 = perlin.floatArray[(of1 + PERLIN_YWRAP) & PERLIN_SIZE];\n                n2 = n2 + rxf * (perlin.floatArray[(of1 + PERLIN_YWRAP + (1 | 0)) & PERLIN_SIZE] - n2);\n                n1 = n1 + ryf * (n2 - n1);\n                of1 = of1 + PERLIN_ZWRAP;\n                n2 = perlin.floatArray[of1 & PERLIN_SIZE];\n                n2 = n2 + rxf * (perlin.floatArray[(of1 + (1 | 0)) & PERLIN_SIZE] - n2);\n                n3 = perlin.floatArray[(of1 + PERLIN_YWRAP) & PERLIN_SIZE];\n                n3 = n3 + rxf * (perlin.floatArray[(of1 + PERLIN_YWRAP + (1 | 0)) & PERLIN_SIZE] - n3);\n                n2 = n2 + ryf * (n3 - n2);\n                n1 = n1 + scaled_cosine(zf) * (n2 - n1);\n                r = r + n1 * ampl;\n                ampl = ampl * perlin_amp_falloff;\n                xi = xi << (1 | 0);\n                xf = xf * 2.0;\n                yi = yi << (1 | 0);\n                yf = yf * 2.0;\n                zi = zi << (1 | 0);\n                zf = zf * 2.0;\n                if (xf >= 1.0) {\n                    xi++;\n                    xf = xf - 1.0;\n                }\n                if (yf >= 1.0) {\n                    yi++;\n                    yf = yf - 1.0;\n                }\n                if (zf >= 1.0) {\n                    zi++;\n                    zf = zf - 1.0;\n                }\n            }\n            return r;\n        };\n        noise.perlin3 = function (v) {\n            var x = v[0];\n            var y = v[1];\n            var z = v[2];\n            if (x < (0 | 0)) {\n                x = (__.FM.negate_1(x));\n            }\n            if (y < (0 | 0)) {\n                y = (__.FM.negate_1(y));\n            }\n            if (z < (0 | 0)) {\n                z = (__.FM.negate_1(z));\n            }\n            var xi = ((0, std_math_1.floor)(x) | 0);\n            var yi = ((0, std_math_1.floor)(y) | 0);\n            var zi = ((0, std_math_1.floor)(z) | 0);\n            var xf = x - xi;\n            var yf = y - yi;\n            var zf = z - zi;\n            var rxf = 0.0;\n            var ryf = 0.0;\n            var r = 0.0;\n            var ampl = 0.5;\n            var n1 = 0.0;\n            var n2 = 0.0;\n            var n3 = 0.0;\n            for (var o = (0 | 0); o < perlin_octaves; o++) {\n                var of1 = xi + (yi << PERLIN_YWRAPB) + (zi << PERLIN_ZWRAPB);\n                rxf = scaled_cosine(xf);\n                ryf = scaled_cosine(yf);\n                n1 = perlin.floatArray[of1 & PERLIN_SIZE];\n                n1 = n1 + rxf * (perlin.floatArray[(of1 + (1 | 0)) & PERLIN_SIZE] - n1);\n                n2 = perlin.floatArray[(of1 + PERLIN_YWRAP) & PERLIN_SIZE];\n                n2 = n2 + rxf * (perlin.floatArray[(of1 + PERLIN_YWRAP + (1 | 0)) & PERLIN_SIZE] - n2);\n                n1 = n1 + ryf * (n2 - n1);\n                of1 = of1 + PERLIN_ZWRAP;\n                n2 = perlin.floatArray[of1 & PERLIN_SIZE];\n                n2 = n2 + rxf * (perlin.floatArray[(of1 + (1 | 0)) & PERLIN_SIZE] - n2);\n                n3 = perlin.floatArray[(of1 + PERLIN_YWRAP) & PERLIN_SIZE];\n                n3 = n3 + rxf * (perlin.floatArray[(of1 + PERLIN_YWRAP + (1 | 0)) & PERLIN_SIZE] - n3);\n                n2 = n2 + ryf * (n3 - n2);\n                n1 = n1 + scaled_cosine(zf) * (n2 - n1);\n                r = r + n1 * ampl;\n                ampl = ampl * perlin_amp_falloff;\n                xi = xi << (1 | 0);\n                xf = xf * 2.0;\n                yi = yi << (1 | 0);\n                yf = yf * 2.0;\n                zi = zi << (1 | 0);\n                zf = zf * 2.0;\n                if (xf >= 1.0) {\n                    xi++;\n                    xf = xf - 1.0;\n                }\n                if (yf >= 1.0) {\n                    yi++;\n                    yf = yf - 1.0;\n                }\n                if (zf >= 1.0) {\n                    zi++;\n                    zf = zf - 1.0;\n                }\n            }\n            return r;\n        };\n        /**\n            * Returns 3 values: distance to closest cell, random value of closest cell, distance to closest edge.\n            */\n        noise.voronoi2 = function (v) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z;\n            var n = (_a = v, [Math.floor(_a[0]), Math.floor(_a[1])]);\n            var minDist = 10.0;\n            var toClose = (_b = 0.0, [_b, _b]);\n            var closestCell = (_c = 0.0, [_c, _c]);\n            for (var j = (__.FM.negate_1((1 | 0))); j <= (1 | 0); j++) {\n                for (var i = (__.FM.negate_1((1 | 0))); i <= (1 | 0); i++) {\n                    var cell = (_d = n, _e = __.FM.float_2_1_1(i, j), [_d[0] + _e[0], _d[1] + _e[1]]);\n                    var cellPos = (_f = cell, _g = hash2(cell), [_f[0] + _g, _f[1] + _g]);\n                    var toCell = (_h = cellPos, _j = v, [_h[0] - _j[0], _h[1] - _j[1]]);\n                    var dst = (0, std_math_1.length)(toCell);\n                    if (dst < minDist) {\n                        minDist = dst;\n                        toClose = toCell;\n                        closestCell = cell;\n                    }\n                }\n            }\n            var minEdge = 10.0;\n            for (var j = (__.FM.negate_1((1 | 0))); j <= (1 | 0); j++) {\n                for (var i = (__.FM.negate_1((1 | 0))); i <= (1 | 0); i++) {\n                    var cell = (_k = n, _l = __.FM.float_2_1_1(i, j), [_k[0] + _l[0], _k[1] + _l[1]]);\n                    var cellPos = (_m = cell, _o = hash2(cell), [_m[0] + _o, _m[1] + _o]);\n                    var toCell = (_p = cellPos, _q = v, [_p[0] - _q[0], _p[1] - _q[1]]);\n                    var diff = (_r = (_s = closestCell, _t = cell, [_s[0] - _t[0], _s[1] - _t[1]]), [Math.abs(_r[0]), Math.abs(_r[1])]);\n                    var isClosest = diff[0] + diff[1] < 0.1;\n                    if (__.not(isClosest)) {\n                        var toCenter = (_u = (_w = toClose, _x = toCell, [_w[0] + _x[0], _w[1] + _x[1]]), _v = 0.5, [_u[0] * _v, _u[1] * _v]);\n                        var cellDiff = (0, std_math_1.normalize)((_y = toCell, _z = toClose, [_y[0] - _z[0], _y[1] - _z[1]]));\n                        var edge = (0, std_math_1.dot)(toCenter, cellDiff);\n                        minEdge = (0, std_math_1.min)(minEdge, edge);\n                    }\n                }\n            }\n            var random = hash2(closestCell);\n            return __.FM.float_3_1_1_1(minDist, random, minEdge);\n        };\n        noise.simplex3 = function (v) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56;\n            var C = __.FM.float_4_1_1_1_1(__.float(0.138196601125011), __.float(0.276393202250021), __.float(0.414589803375032), __.negate(0.447213595499958));\n            var i = (_a = (_b = v, _c = (0, std_math_1.dot)(v, (_d = C, [_d[1], _d[1], _d[1]])), [_b[0] + _c, _b[1] + _c, _b[2] + _c]), [Math.floor(_a[0]), Math.floor(_a[1]), Math.floor(_a[2])]);\n            var x0 = (_e = (_g = v, _h = i, [_g[0] - _h[0], _g[1] - _h[1], _g[2] - _h[2]]), _f = (0, std_math_1.dot)(i, (_j = C, [_j[0], _j[0], _j[0]])), [_e[0] + _f, _e[1] + _f, _e[2] + _f]);\n            var g = (0, std_math_1.step)((_k = x0, [_k[1], _k[2], _k[0]]), (_l = x0, [_l[0], _l[1], _l[2]]));\n            var l = (_m = 1.0, _o = g, [_m - _o[0], _m - _o[1], _m - _o[2]]);\n            var i1 = (0, std_math_1.min)((_p = g, [_p[0], _p[1], _p[2]]), (_q = l, [_q[2], _q[0], _q[1]]));\n            var i2 = (0, std_math_1.max)((_r = g, [_r[0], _r[1], _r[2]]), (_s = l, [_s[2], _s[0], _s[1]]));\n            var x1 = (_t = (_v = x0, _w = i1, [_v[0] - _w[0], _v[1] - _w[1], _v[2] - _w[2]]), _u = (_x = 1.0, _y = (_z = C, [_z[0], _z[0], _z[0]]), [_x * _y[0], _x * _y[1], _x * _y[2]]), [_t[0] + _u[0], _t[1] + _u[1], _t[2] + _u[2]]);\n            var x2 = (_0 = (_2 = x0, _3 = i2, [_2[0] - _3[0], _2[1] - _3[1], _2[2] - _3[2]]), _1 = (_4 = 2.0, _5 = (_6 = C, [_6[0], _6[0], _6[0]]), [_4 * _5[0], _4 * _5[1], _4 * _5[2]]), [_0[0] + _1[0], _0[1] + _1[1], _0[2] + _1[2]]);\n            var x3 = (_7 = (_9 = x0, _10 = 1., [_9[0] - _10, _9[1] - _10, _9[2] - _10]), _8 = (_11 = 3.0, _12 = (_13 = C, [_13[0], _13[0], _13[0]]), [_11 * _12[0], _11 * _12[1], _11 * _12[2]]), [_7[0] + _8[0], _7[1] + _8[1], _7[2] + _8[2]]);\n            i = mod289_3(i);\n            var p = permute((_14 = (_16 = permute((_18 = (_20 = permute((_22 = i[2], _23 = __.FM.float_3_1_1_1(__.float(0.0), __.swizzle(i1, 'z'), __.swizzle(i2, 'z')), [_22 + _23[0], _22 + _23[1], _22 + _23[2]])), _21 = i[1], [_20[0] + _21, _20[1] + _21, _20[2] + _21]), _19 = __.FM.float_3_1_1_1(__.float(0.0), __.swizzle(i1, 'y'), __.swizzle(i2, 'y')), [_18[0] + _19[0], _18[1] + _19[1], _18[2] + _19[2]])), _17 = i[0], [_16[0] + _17, _16[1] + _17, _16[2] + _17]), _15 = __.FM.float_3_1_1_1(__.float(0.0), __.swizzle(i1, 'x'), __.swizzle(i2, 'x')), [_14[0] + _15[0], _14[1] + _15[1], _14[2] + _15[2]]));\n            var m = (0, std_math_1.max)((_24 = 0.5, _25 = __.FM.float_3_1_1_1((0, std_math_1.dot)(x0, x0), (0, std_math_1.dot)(x1, x1), (0, std_math_1.dot)(x2, x2)), [_24 - _25[0], _24 - _25[1], _24 - _25[2]]), 0.0);\n            m = (_26 = m, _27 = m, [_26[0] * _27[0], _26[1] * _27[1], _26[2] * _27[2]]);\n            m = (_28 = m, _29 = m, [_28[0] * _29[0], _28[1] * _29[1], _28[2] * _29[2]]);\n            var x = (_30 = (_32 = 2.0, _33 = (0, std_math_1.frac)((_34 = p, _35 = (_36 = C, [_36[3], _36[3], _36[3]]), [_34[0] * _35[0], _34[1] * _35[1], _34[2] * _35[2]])), [_32 * _33[0], _32 * _33[1], _32 * _33[2]]), _31 = 1.0, [_30[0] - _31, _30[1] - _31, _30[2] - _31]);\n            var h = (_37 = (_39 = x, [Math.abs(_39[0]), Math.abs(_39[1]), Math.abs(_39[2])]), _38 = 0.5, [_37[0] - _38, _37[1] - _38, _37[2] - _38]);\n            var ox = (_40 = (_41 = x, _42 = 0.5, [_41[0] + _42, _41[1] + _42, _41[2] + _42]), [Math.floor(_40[0]), Math.floor(_40[1]), Math.floor(_40[2])]);\n            var a0 = (_43 = x, _44 = ox, [_43[0] - _44[0], _43[1] - _44[1], _43[2] - _44[2]]);\n            // Normalise gradients implicitly by scaling m\n            // Approximation of: m *= inversesqrt(a0 * a0 + h * h);\n            m = (_45 = m, _46 = (_47 = 1.79284291400159, _48 = (_49 = 0.85373472095314, _50 = (_51 = (_53 = a0, _54 = a0, [_53[0] * _54[0], _53[1] * _54[1], _53[2] * _54[2]]), _52 = (_55 = h, _56 = h, [_55[0] * _56[0], _55[1] * _56[1], _55[2] * _56[2]]), [_51[0] + _52[0], _51[1] + _52[1], _51[2] + _52[2]]), [_49 * _50[0], _49 * _50[1], _49 * _50[2]]), [_47 - _48[0], _47 - _48[1], _47 - _48[2]]), [_45[0] * _46[0], _45[1] * _46[1], _45[2] * _46[2]]);\n            // Compute final noise value at P\n            var g2 = __.FM.float_3_1_1_1(__.add(a0[0] * x0[0], h[0] * x0[1]), __.add(a0[1] * x1[0], h[1] * x1[1]), __.add(a0[2] * x2[0], h[2] * x2[1]));\n            return 130.0 * (0, std_math_1.dot)(m, g2);\n        };\n        noise.prototype.clone = function () {\n            return new noise({});\n        };\n        noise.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_common_ts_26548_noise\\\",\\\"fields\\\":[]}\");\n        };\n        return noise;\n    }());\n    exports.noise = noise;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_common_ts_26548_noise\\\",\\\"fields\\\":[]}\"), noise)\n    ;\n    var PERLIN_YWRAPB = ((0, std___std_all_1.globalVarInit)(\"_slash__std_slash_common_dot_ts\", \"PERLIN_YWRAPB\", function () { return (4 | 0); }, function () { return PERLIN_YWRAPB; }) | 0);\n    var PERLIN_YWRAP = ((0, std___std_all_1.globalVarInit)(\"_slash__std_slash_common_dot_ts\", \"PERLIN_YWRAP\", function () { return (1 | 0) << PERLIN_YWRAPB; }, function () { return PERLIN_YWRAP; }) | 0);\n    var PERLIN_ZWRAPB = ((0, std___std_all_1.globalVarInit)(\"_slash__std_slash_common_dot_ts\", \"PERLIN_ZWRAPB\", function () { return (8 | 0); }, function () { return PERLIN_ZWRAPB; }) | 0);\n    var PERLIN_ZWRAP = ((0, std___std_all_1.globalVarInit)(\"_slash__std_slash_common_dot_ts\", \"PERLIN_ZWRAP\", function () { return (1 | 0) << PERLIN_ZWRAPB; }, function () { return PERLIN_ZWRAP; }) | 0);\n    var PERLIN_SIZE = ((0, std___std_all_1.globalVarInit)(\"_slash__std_slash_common_dot_ts\", \"PERLIN_SIZE\", function () { return (4095 | 0); }, function () { return PERLIN_SIZE; }) | 0);\n    var perlin_octaves = ((0, std___std_all_1.globalVarInit)(\"_slash__std_slash_common_dot_ts\", \"perlin_octaves\", function () { return (4 | 0); }, function () { return perlin_octaves; }) | 0);\n    // default to medium smooth\n    var perlin_amp_falloff = (0, std___std_all_1.globalVarInit)(\"_slash__std_slash_common_dot_ts\", \"perlin_amp_falloff\", function () { return 0.5; }, function () { return perlin_amp_falloff; });\n    // 50% reduction/octave\n    function scaled_cosine(i) { return 0.5 * (1.0 - Math.cos(i * PI)); }\n    var perlin = (0, std___std_all_1.globalVarInit)(\"_slash__std_slash_common_dot_ts\", \"perlin\", function () { return (0, buffer_1.buffer)(PERLIN_SIZE + (1 | 0), \"float\", __assign({}, JSON.parse(\"{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}\"))); }, function () { return perlin; });\n    for (var i = (0 | 0); i < PERLIN_SIZE + (1 | 0); i++) {\n        perlin.__index_assign(i, (0, std_math_1.rand)(i));\n    } //\t<https://www.shadertoy.com/view/4dS3Wd>\n    //\tBy Morgan McGuire @morgan3d, http://graphicscodex.com\n    //\n    function hash(n) { return (0, std_math_1.frac)(Math.sin(n) * (1e4 | 0)); }\n    function hash2(p) { return (0, std_math_1.frac)((1e4 | 0) * Math.sin(17.0 * p[0] + p[1] * 0.1) * (0.1 + Math.abs(Math.sin(p[1] * 13.0 + p[0])))); }\n    function hash3(p) {\n        var h = (0, std_math_1.dot)(p, __.FM.float_3_1_1_1(__.float(127.1), __.float(311.7), __.float(74.7)));\n        return (0, std_math_1.frac)(Math.sin(h) * 43758.5453123);\n    }\n    /* impl noise */\n    function mod289_1(x) { return x - Math.floor(x * (1.0 / 289.0)) * 289.0; }\n    function mod289_4(x) { var _a, _b, _c, _d, _e, _f, _g; return _a = x, _b = (_c = (_e = (_f = x, _g = (1.0 / 289.0), [_f[0] * _g, _f[1] * _g, _f[2] * _g, _f[3] * _g]), [Math.floor(_e[0]), Math.floor(_e[1]), Math.floor(_e[2]), Math.floor(_e[3])]), _d = 289.0, [_c[0] * _d, _c[1] * _d, _c[2] * _d, _c[3] * _d]), [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2], _a[3] - _b[3]]; }\n    function perm(x) { var _a, _b, _c, _d, _e, _f; return mod289_4((_a = (_c = (_e = x, _f = 34.0, [_e[0] * _f, _e[1] * _f, _e[2] * _f, _e[3] * _f]), _d = 1.0, [_c[0] + _d, _c[1] + _d, _c[2] + _d, _c[3] + _d]), _b = x, [_a[0] * _b[0], _a[1] * _b[1], _a[2] * _b[2], _a[3] * _b[3]])); }\n    function mod289_3(x) { var _a, _b, _c, _d, _e, _f, _g; return _a = x, _b = (_c = (_e = (_f = x, _g = (1.0 / 289.0), [_f[0] * _g, _f[1] * _g, _f[2] * _g]), [Math.floor(_e[0]), Math.floor(_e[1]), Math.floor(_e[2])]), _d = 289.0, [_c[0] * _d, _c[1] * _d, _c[2] * _d]), [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]; }\n    function mod289_2(x) { var _a, _b, _c, _d, _e, _f, _g; return _a = x, _b = (_c = (_e = (_f = x, _g = (1.0 / 289.0), [_f[0] * _g, _f[1] * _g]), [Math.floor(_e[0]), Math.floor(_e[1])]), _d = 289.0, [_c[0] * _d, _c[1] * _d]), [_a[0] - _b[0], _a[1] - _b[1]]; }\n    function permute(x) { var _a, _b, _c, _d, _e, _f; return mod289_3((_a = (_c = (_e = x, _f = 34.0, [_e[0] * _f, _e[1] * _f, _e[2] * _f]), _d = 1.0, [_c[0] + _d, _c[1] + _d, _c[2] + _d]), _b = x, [_a[0] * _b[0], _a[1] * _b[1], _a[2] * _b[2]])); }\n    function taylorInvSqrt(r) { var _a, _b, _c, _d; return _a = 1.79284291400159, _b = (_c = 0.85373472095314, _d = r, [_c * _d[0], _c * _d[1], _c * _d[2]]), [_a - _b[0], _a - _b[1], _a - _b[2]]; }\n    var matrix = /** @class */ (function () {\n        function matrix(data) {\n        }\n        matrix.lookAt = function (from, to, up) {\n            var _a, _b, _c, _d;\n            var zAxis = (0, std_math_1.normalize)((_a = from, _b = to, [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]));\n            var xAxis = (0, std_math_1.normalize)((0, std_math_1.cross)(up, zAxis));\n            var yAxis = (0, std_math_1.normalize)((0, std_math_1.cross)(zAxis, xAxis));\n            var dst = __.float4x4();\n            dst.__index((0 | 0)).__index_assign((0 | 0), xAxis[0]);\n            dst.__index((0 | 0)).__index_assign((1 | 0), yAxis[0]);\n            dst.__index((0 | 0)).__index_assign((2 | 0), zAxis[0]);\n            dst.__index((0 | 0)).__index_assign((3 | 0), (0 | 0));\n            dst.__index((1 | 0)).__index_assign((0 | 0), xAxis[1]);\n            dst.__index((1 | 0)).__index_assign((1 | 0), yAxis[1]);\n            dst.__index((1 | 0)).__index_assign((2 | 0), zAxis[1]);\n            dst.__index((1 | 0)).__index_assign((3 | 0), (0 | 0));\n            dst.__index((2 | 0)).__index_assign((0 | 0), xAxis[2]);\n            dst.__index((2 | 0)).__index_assign((1 | 0), yAxis[2]);\n            dst.__index((2 | 0)).__index_assign((2 | 0), zAxis[2]);\n            dst.__index((2 | 0)).__index_assign((3 | 0), (0 | 0));\n            dst.__index((3 | 0)).__index_assign((0 | 0), (__.FM.negate_1((xAxis[0] * from[0] + xAxis[1] * from[1] + xAxis[2] * from[2]))));\n            dst.__index((3 | 0)).__index_assign((1 | 0), (__.FM.negate_1((yAxis[0] * from[0] + yAxis[1] * from[1] + yAxis[2] * from[2]))));\n            dst.__index((3 | 0)).__index_assign((2 | 0), (__.FM.negate_1((zAxis[0] * from[0] + zAxis[1] * from[1] + zAxis[2] * from[2]))));\n            dst.__index((3 | 0)).__index_assign((3 | 0), (1 | 0));\n            return dst;\n            var forward = (0, std_math_1.normalize)((_c = from, _d = to, [_c[0] - _d[0], _c[1] - _d[1], _c[2] - _d[2]]));\n            var right = (0, std_math_1.normalize)((0, std_math_1.cross)(up, forward));\n            var newup = (0, std_math_1.cross)(forward, right);\n            var m = __.float4x4();\n            m.__index((0 | 0)).__index_assign((0 | 0), right[0]), m.__index((0 | 0)).__index_assign((1 | 0), right[1]), m.__index((0 | 0)).__index_assign((2 | 0), right[2]);\n            m.__index((1 | 0)).__index_assign((0 | 0), newup[0]), m.__index((1 | 0)).__index_assign((1 | 0), newup[1]), m.__index((1 | 0)).__index_assign((2 | 0), newup[2]);\n            m.__index((2 | 0)).__index_assign((0 | 0), forward[0]), m.__index((2 | 0)).__index_assign((1 | 0), forward[1]), m.__index((2 | 0)).__index_assign((2 | 0), forward[2]);\n            m.__index((3 | 0)).__index_assign((0 | 0), from[0]), m.__index((3 | 0)).__index_assign((1 | 0), from[1]), m.__index((3 | 0)).__index_assign((2 | 0), from[2]);\n            return m;\n        };\n        matrix.perspective = function (fov, aspect, near, far) {\n            // let scale = 1.0 / tan(fov * 0.5 * PI / 180); \n            // let M = float4x4();\n            // M[0][0] = scale;  //scale the x coordinates of the projected point \n            // M[1][1] = scale * aspect;  //scale the y coordinates of the projected point \n            // M[2][2] = -far / (far - near);  //used to remap z to [0,1] \n            // M[3][2] = -far * near / (far - near);  //used to remap z [0,1] \n            // M[2][3] = -1;  //set w = -z \n            // M[3][3] = 0; \n            //return M;\n            var fovRad = (0, std_math_1.radians)(fov);\n            var tanFov = Math.tan(fovRad * 0.5);\n            var matrx = __.float4x4(1.0 / (tanFov * aspect), (0 | 0), (0 | 0), (0 | 0), (0 | 0), 1.0 / tanFov, (0 | 0), (0 | 0), (0 | 0), (0 | 0), (__.FM.negate_1(((far + near) / (far - near)))), (__.FM.negate_1((1 | 0))), (0 | 0), (0 | 0), (__.FM.negate_1((((2 | 0) * (near * far)) / (far - near)))), (0 | 0));\n            return matrx;\n        };\n        matrix.perspectiveReverseZ = function (fov, aspect, near) {\n            // let far = 10000000.0;\n            // let M = float4x4();\n            // M[0][0] = scale;  //scale the x coordinates of the projected point \n            // M[1][1] = scale * aspect;  //scale the y coordinates of the projected point \n            // M[2][2] = (-far / (far - near)) * -1;  //used to remap z to [0,1] \n            // M[3][2] = -far * near / (far - near);  //used to remap z [0,1] \n            // M[2][3] = 0;  //set w = -z \n            // M[3][3] = 0; \n            // return M;\n            var matrx = __.mul(__.float4x4((1 | 0), (0 | 0), (0 | 0), (0 | 0), (0 | 0), (1 | 0), (0 | 0), (0 | 0), (0 | 0), (0 | 0), (__.FM.negate_1((1 | 0))), (0 | 0), (0 | 0), (0 | 0), (1 | 0), (1 | 0)), matrix.perspective(fov, aspect, near, 10000000.0));\n            return matrx;\n        };\n        matrix.prototype.clone = function () {\n            return new matrix({});\n        };\n        matrix.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_common_ts_44319_matrix\\\",\\\"fields\\\":[]}\");\n        };\n        return matrix;\n    }());\n    exports.matrix = matrix;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_common_ts_44319_matrix\\\",\\\"fields\\\":[]}\"), matrix)\n    ; /* impl matrix */\n    /**\n    * Uses Super Sampling Anti Aliasing to smooth out the image.\n    */\n    function screenAA(inScreenPos, gridSize, func) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        var weightSum = 0.0;\n        var accumulatedColor = __.FM.float_4_1_1_1_1(__.int(0), __.int(0), __.int(0), __.int(0));\n        for (var y = (0 | 0); y < gridSize; y++) {\n            for (var x = (0 | 0); x < gridSize; x++) {\n                var offset = __.FM.float_2_1_1(__.div((x + 0.5 - gridSize * 0.5), gridSize), __.div((y + 0.5 - gridSize * 0.5), gridSize));\n                var weight = Math.exp((__.FM.negate_1((0, std_math_1.dot)(offset, offset))) * (5 | 0));\n                // Gaussian weight\n                accumulatedColor = (_a = accumulatedColor, _b = (_c = func((_e = inScreenPos, _f = offset, [_e[0] + _f[0], _e[1] + _f[1]])), _d = weight, [_c[0] * _d, _c[1] * _d, _c[2] * _d, _c[3] * _d]), [_a[0] + _b[0], _a[1] + _b[1], _a[2] + _b[2], _a[3] + _b[3]]);\n                weightSum = weightSum + weight;\n            }\n        }\n        return _g = accumulatedColor, _h = weightSum, [_g[0] / _h, _g[1] / _h, _g[2] / _h, _g[3] / _h];\n    }\n    exports.screenAA = screenAA;\n    ; // Color conversion helpers\n    // A color = float4 containing rgba values in the range [0, 1]\n    // All functions have an extra alpha functon and a reverse\n    // i.e. hsl, hsla, hslFromColor, hslaFromColor\n    // fn hsl(v: float3) -> float4\n    function hsl(v) { return hsla(__.makeVector(v, (1 | 0))); }\n    exports.hsl = hsl;\n    ;\n    function hsla(v) {\n        var h = v[0];\n        var s = v[1];\n        var l = v[2];\n        var a = v[3];\n        var c = ((1 | 0) - Math.abs((2 | 0) * l - (1 | 0))) * s;\n        var x = c * ((1 | 0) - Math.abs(((h / (60 | 0)) % (2 | 0)) - (1 | 0)));\n        var m = l - c / (2 | 0);\n        var r = 0.0;\n        var g = 0.0;\n        var b = 0.0;\n        if (h < (60 | 0)) {\n            r = c;\n            g = x;\n            b = (0 | 0);\n        }\n        else if (h < (120 | 0)) {\n            r = x;\n            g = c;\n            b = (0 | 0);\n        }\n        else if (h < (180 | 0)) {\n            r = (0 | 0);\n            g = c;\n            b = x;\n        }\n        else if (h < (240 | 0)) {\n            r = (0 | 0);\n            g = x;\n            b = c;\n        }\n        else if (h < (300 | 0)) {\n            r = x;\n            g = (0 | 0);\n            b = c;\n        }\n        else {\n            r = c;\n            g = (0 | 0);\n            b = x;\n        }\n        return __.FM.float_4_1_1_1_1(__.add(r, m), __.add(g, m), __.add(b, m), a);\n    }\n    exports.hsla = hsla;\n    ;\n    function hslFromColor(c) {\n        var r = c[0];\n        var g = c[1];\n        var b = c[2];\n        var a = c[3];\n        var mx = (0, std_math_1.max)(r, (0, std_math_1.max)(g, b));\n        var mn = (0, std_math_1.min)(r, (0, std_math_1.min)(g, b));\n        var h = 0.0;\n        var s = 0.0;\n        var l = (mx + mn) / (2 | 0);\n        if (mx == mn) {\n            h = (0 | 0);\n            s = (0 | 0);\n        }\n        else {\n            var d = mx - mn;\n            s = (l > 0.5) ? d / ((2 | 0) - mx - mn) : d / (mx + mn);\n            if (mx == r) {\n                h = (g - b) / d + ((g < b) ? (6 | 0) : (0 | 0));\n            }\n            else if (mx == g) {\n                h = (b - r) / d + (2 | 0);\n            }\n            else if (mx == b) {\n                h = (r - g) / d + (4 | 0);\n            }\n            h = h / (6 | 0);\n        }\n        return __.FM.float_3_1_1_1(__.mul(h, (360 | 0)), s, l);\n    }\n    exports.hslFromColor = hslFromColor;\n    ;\n    function hslaFromColor(c) {\n        var hsl = hslFromColor(c);\n        return __.FM.float_4_3_1(hsl, __.swizzle(c, 'a'));\n    }\n    exports.hslaFromColor = hslaFromColor;\n    ;\n    function hsv(v) { return hsva(__.makeVector(v, (1 | 0))); }\n    exports.hsv = hsv;\n    ;\n    function hsva(val) {\n        var h = val[0];\n        var s = val[1];\n        var v = val[2];\n        var a = val[3];\n        var c = v * s;\n        var x = c * ((1 | 0) - Math.abs(h / (60 | 0) % (2 | 0) - (1 | 0)));\n        var m = v - c;\n        var r = 0.0;\n        var g = 0.0;\n        var b = 0.0;\n        if (h < (60 | 0)) {\n            r = c;\n            g = x;\n            b = (0 | 0);\n        }\n        else if (h < (120 | 0)) {\n            r = x;\n            g = c;\n            b = (0 | 0);\n        }\n        else if (h < (180 | 0)) {\n            r = (0 | 0);\n            g = c;\n            b = x;\n        }\n        else if (h < (240 | 0)) {\n            r = (0 | 0);\n            g = x;\n            b = c;\n        }\n        else if (h < (300 | 0)) {\n            r = x;\n            g = (0 | 0);\n            b = c;\n        }\n        else {\n            r = c;\n            g = (0 | 0);\n            b = x;\n        }\n        return __.FM.float_4_1_1_1_1(__.add(r, m), __.add(g, m), __.add(b, m), a);\n    }\n    exports.hsva = hsva;\n    ;\n    function hsvFromColor(c) {\n        var r = c[0];\n        var g = c[1];\n        var b = c[2];\n        var mx = (0, std_math_1.max)(r, (0, std_math_1.max)(g, b));\n        var mn = (0, std_math_1.min)(r, (0, std_math_1.min)(g, b));\n        var h = 0.0;\n        var s = 0.0;\n        var v = mx;\n        var d = mx - mn;\n        s = (mx == (0 | 0)) ? (0 | 0) : d / mx;\n        if (mx == mn) {\n            h = (0 | 0);\n        }\n        else {\n            if (mx == r) {\n                h = (g - b) / d + ((g < b) ? (6 | 0) : (0 | 0));\n            }\n            else if (mx == g) {\n                h = (b - r) / d + (2 | 0);\n            }\n            else if (mx == b) {\n                h = (r - g) / d + (4 | 0);\n            }\n            h = h / (6 | 0);\n        }\n        return __.FM.float_3_1_1_1(__.mul(h, (360 | 0)), s, v);\n    }\n    exports.hsvFromColor = hsvFromColor;\n    ;\n    function hsvaFromColor(c) {\n        var hsv = hsvFromColor(c);\n        return __.FM.float_4_3_1(hsv, __.swizzle(c, 'a'));\n    }\n    exports.hsvaFromColor = hsvaFromColor;\n    ;\n    function rgb(v) { return __.FM.float_4_3_1(__.div(v, 255.0), __.int(1)); }\n    exports.rgb = rgb;\n    ;\n    function rgba(v) { return __.FM.float_4_4(__.div(v, 255.0)); }\n    exports.rgba = rgba;\n    ;\n    function rgbFromColor(c) { var _a, _b, _c; return _a = (_c = c, [_c[0], _c[1], _c[2]]), _b = 255.0, [_a[0] * _b, _a[1] * _b, _a[2] * _b]; }\n    exports.rgbFromColor = rgbFromColor;\n    ;\n    function rgbaFromColor(c) { var _a, _b; return _a = c, _b = 255.0, [_a[0] * _b, _a[1] * _b, _a[2] * _b, _a[3] * _b]; }\n    exports.rgbaFromColor = rgbaFromColor;\n    ;\n    function cmyk(v) {\n        var c = v[0];\n        var m = v[1];\n        var y = v[2];\n        var k = v[3];\n        var r = (1 | 0) - (0, std_math_1.min)((1 | 0), c * ((1 | 0) - k) + k);\n        var g = (1 | 0) - (0, std_math_1.min)((1 | 0), m * ((1 | 0) - k) + k);\n        var b = (1 | 0) - (0, std_math_1.min)((1 | 0), y * ((1 | 0) - k) + k);\n        return __.FM.float_4_1_1_1_1(r, g, b, __.int(1));\n    }\n    exports.cmyk = cmyk;\n    ;\n    function cmykFromColor(c) {\n        var r = c[0];\n        var g = c[1];\n        var b = c[2];\n        var k = (1 | 0) - (0, std_math_1.max)(r, (0, std_math_1.max)(g, b));\n        var c1 = ((1 | 0) - r - k) / ((1 | 0) - k);\n        var m = ((1 | 0) - g - k) / ((1 | 0) - k);\n        var y = ((1 | 0) - b - k) / ((1 | 0) - k);\n        return __.FM.float_4_1_1_1_1(c1, m, y, k);\n    }\n    exports.cmykFromColor = cmykFromColor;\n    ;\n    function hex(v) {\n        var r = (v >> (16 | 0)) & (0xFF | 0);\n        var g = (v >> (8 | 0)) & (0xFF | 0);\n        var b = v & (0xFF | 0);\n        return __.FM.float_4_1_1_1_1(__.div(r, 255.0), __.div(g, 255.0), __.div(b, 255.0), __.float(1.0));\n    }\n    exports.hex = hex;\n    ;\n    function hexFromColor(c) {\n        var r = (__.mul(c[0], 255.0) | 0);\n        var g = (__.mul(c[1], 255.0) | 0);\n        var b = (__.mul(c[2], 255.0) | 0);\n        return (r << (16 | 0)) | (g << (8 | 0)) | b;\n    }\n    exports.hexFromColor = hexFromColor;\n    ; /**\n    * Returns sin remapped to [0, 1]\n    */\n    function sin1(v) { return (Math.sin(v) + (1 | 0)) * 0.5; }\n    exports.sin1 = sin1;\n    ; /**\n    * Returns cos remapped to [0, 1]\n    */\n    function cos1(v) { return (Math.cos(v) + (1 | 0)) * 0.5; }\n    exports.cos1 = cos1;\n    ; /**\n    * Returns tan remapped to [0, 1]\n    */\n    function tan1(v) { return (Math.tan(v) + (1 | 0)) * 0.5; }\n    exports.tan1 = tan1;\n    ;\n    function remap(v, low1, high1, low2, high2) { return low2 + (v - low1) * (high2 - low2) / (high1 - low1); }\n    exports.remap = remap;\n    ;\n    function remap1(v, low, high) { return remap(v, low, high, (0 | 0), (1 | 0)); }\n    exports.remap1 = remap1;\n    ;\n    var color = /** @class */ (function () {\n        function color(data) {\n        }\n        color.prototype.clone = function () {\n            return new color({});\n        };\n        color.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_common_ts_57071_color\\\",\\\"fields\\\":[[\\\"slate50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"slate100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"slate200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"slate300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"slate400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"slate500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"slate600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"slate700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"slate800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"slate900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"slate950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"gray50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"gray100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"gray200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"gray300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"gray400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"gray500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"gray600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"gray700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"gray800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"gray900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"gray950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"zinc50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"zinc100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"zinc200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"zinc300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"zinc400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"zinc500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"zinc600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"zinc700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"zinc800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"zinc900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"zinc950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"neutral50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"neutral100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"neutral200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"neutral300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"neutral400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"neutral500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"neutral600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"neutral700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"neutral800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"neutral900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"neutral950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"stone50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"stone100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"stone200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"stone300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"stone400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"stone500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"stone600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"stone700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"stone800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"stone900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"stone950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"red50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"red100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"red200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"red300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"red400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"red500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"red600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"red700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"red800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"red900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"red950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"orange50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"orange100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"orange200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"orange300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"orange400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"orange500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"orange600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"orange700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"orange800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"orange900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"orange950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"amber50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"amber100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"amber200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"amber300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"amber400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"amber500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"amber600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"amber700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"amber800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"amber900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"amber950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"yellow50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"yellow100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"yellow200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"yellow300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"yellow400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"yellow500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"yellow600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"yellow700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"yellow800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"yellow900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"yellow950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"lime50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"lime100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"lime200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"lime300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"lime400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"lime500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"lime600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"lime700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"lime800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"lime900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"lime950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"green50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"green100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"green200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"green300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"green400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"green500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"green600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"green700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"green800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"green900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"green950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"emerald50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"emerald100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"emerald200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"emerald300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"emerald400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"emerald500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"emerald600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"emerald700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"emerald800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"emerald900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"emerald950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"teal50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"teal100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"teal200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"teal300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"teal400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"teal500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"teal600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"teal700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"teal800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"teal900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"teal950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"cyan50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"cyan100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"cyan200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"cyan300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"cyan400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"cyan500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"cyan600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"cyan700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"cyan800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"cyan900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"cyan950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"sky50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"sky100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"sky200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"sky300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"sky400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"sky500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"sky600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"sky700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"sky800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"sky900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"sky950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"blue50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"blue100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"blue200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"blue300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"blue400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"blue500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"blue600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"blue700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"blue800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"blue900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"blue950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"indigo50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"indigo100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"indigo200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"indigo300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"indigo400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"indigo500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"indigo600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"indigo700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"indigo800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"indigo900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"indigo950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"violet50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"violet100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"violet200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"violet300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"violet400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"violet500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"violet600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"violet700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"violet800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"violet900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"violet950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"purple50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"purple100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"purple200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"purple300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"purple400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"purple500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"purple600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"purple700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"purple800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"purple900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"purple950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"fuchsia50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"fuchsia100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"fuchsia200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"fuchsia300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"fuchsia400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"fuchsia500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"fuchsia600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"fuchsia700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"fuchsia800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"fuchsia900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"fuchsia950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"pink50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"pink100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"pink200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"pink300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"pink400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"pink500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"pink600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"pink700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"pink800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"pink900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"pink950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"rose50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"rose100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"rose200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"rose300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"rose400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"rose500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"rose600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"rose700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"rose800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"rose900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"rose950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}]]}\");\n        };\n        color.slate50 = __.FM.float_4_1_1_1_1(__.float(0.9725490196078431), __.float(0.9803921568627451), __.float(0.9882352941176471), __.int(1));\n        color.slate100 = __.FM.float_4_1_1_1_1(__.float(0.9450980392156862), __.float(0.9607843137254902), __.float(0.9764705882352941), __.int(1));\n        color.slate200 = __.FM.float_4_1_1_1_1(__.float(0.8862745098039215), __.float(0.9098039215686274), __.float(0.9411764705882353), __.int(1));\n        color.slate300 = __.FM.float_4_1_1_1_1(__.float(0.796078431372549), __.float(0.8352941176470589), __.float(0.8823529411764706), __.int(1));\n        color.slate400 = __.FM.float_4_1_1_1_1(__.float(0.5803921568627451), __.float(0.6392156862745098), __.float(0.7215686274509804), __.int(1));\n        color.slate500 = __.FM.float_4_1_1_1_1(__.float(0.39215686274509803), __.float(0.4549019607843137), __.float(0.5450980392156862), __.int(1));\n        color.slate600 = __.FM.float_4_1_1_1_1(__.float(0.2784313725490196), __.float(0.3333333333333333), __.float(0.4117647058823529), __.int(1));\n        color.slate700 = __.FM.float_4_1_1_1_1(__.float(0.2), __.float(0.2549019607843137), __.float(0.3333333333333333), __.int(1));\n        color.slate800 = __.FM.float_4_1_1_1_1(__.float(0.11764705882352941), __.float(0.1607843137254902), __.float(0.23137254901960785), __.int(1));\n        color.slate900 = __.FM.float_4_1_1_1_1(__.float(0.058823529411764705), __.float(0.09019607843137255), __.float(0.16470588235294117), __.int(1));\n        color.slate950 = __.FM.float_4_1_1_1_1(__.float(0.00784313725490196), __.float(0.023529411764705882), __.float(0.09019607843137255), __.int(1));\n        color.gray50 = __.FM.float_4_1_1_1_1(__.float(0.9764705882352941), __.float(0.9803921568627451), __.float(0.984313725490196), __.int(1));\n        color.gray100 = __.FM.float_4_1_1_1_1(__.float(0.9529411764705882), __.float(0.9568627450980393), __.float(0.9647058823529412), __.int(1));\n        color.gray200 = __.FM.float_4_1_1_1_1(__.float(0.8980392156862745), __.float(0.9058823529411765), __.float(0.9215686274509803), __.int(1));\n        color.gray300 = __.FM.float_4_1_1_1_1(__.float(0.8196078431372549), __.float(0.8352941176470589), __.float(0.8588235294117647), __.int(1));\n        color.gray400 = __.FM.float_4_1_1_1_1(__.float(0.611764705882353), __.float(0.6392156862745098), __.float(0.6862745098039216), __.int(1));\n        color.gray500 = __.FM.float_4_1_1_1_1(__.float(0.4196078431372549), __.float(0.4470588235294118), __.float(0.5019607843137255), __.int(1));\n        color.gray600 = __.FM.float_4_1_1_1_1(__.float(0.29411764705882354), __.float(0.3333333333333333), __.float(0.38823529411764707), __.int(1));\n        color.gray700 = __.FM.float_4_1_1_1_1(__.float(0.21568627450980393), __.float(0.2549019607843137), __.float(0.3176470588235294), __.int(1));\n        color.gray800 = __.FM.float_4_1_1_1_1(__.float(0.12156862745098039), __.float(0.1607843137254902), __.float(0.21568627450980393), __.int(1));\n        color.gray900 = __.FM.float_4_1_1_1_1(__.float(0.06666666666666667), __.float(0.09411764705882353), __.float(0.15294117647058825), __.int(1));\n        color.gray950 = __.FM.float_4_1_1_1_1(__.float(0.011764705882352941), __.float(0.027450980392156862), __.float(0.07058823529411765), __.int(1));\n        color.zinc50 = __.FM.float_4_1_1_1_1(__.float(0.9803921568627451), __.float(0.9803921568627451), __.float(0.9803921568627451), __.int(1));\n        color.zinc100 = __.FM.float_4_1_1_1_1(__.float(0.9568627450980393), __.float(0.9568627450980393), __.float(0.9607843137254902), __.int(1));\n        color.zinc200 = __.FM.float_4_1_1_1_1(__.float(0.8941176470588236), __.float(0.8941176470588236), __.float(0.9058823529411765), __.int(1));\n        color.zinc300 = __.FM.float_4_1_1_1_1(__.float(0.8313725490196079), __.float(0.8313725490196079), __.float(0.8470588235294118), __.int(1));\n        color.zinc400 = __.FM.float_4_1_1_1_1(__.float(0.6313725490196078), __.float(0.6313725490196078), __.float(0.6666666666666666), __.int(1));\n        color.zinc500 = __.FM.float_4_1_1_1_1(__.float(0.44313725490196076), __.float(0.44313725490196076), __.float(0.47843137254901963), __.int(1));\n        color.zinc600 = __.FM.float_4_1_1_1_1(__.float(0.3215686274509804), __.float(0.3215686274509804), __.float(0.3568627450980392), __.int(1));\n        color.zinc700 = __.FM.float_4_1_1_1_1(__.float(0.24705882352941178), __.float(0.24705882352941178), __.float(0.27450980392156865), __.int(1));\n        color.zinc800 = __.FM.float_4_1_1_1_1(__.float(0.15294117647058825), __.float(0.15294117647058825), __.float(0.16470588235294117), __.int(1));\n        color.zinc900 = __.FM.float_4_1_1_1_1(__.float(0.09411764705882353), __.float(0.09411764705882353), __.float(0.10588235294117647), __.int(1));\n        color.zinc950 = __.FM.float_4_1_1_1_1(__.float(0.03529411764705882), __.float(0.03529411764705882), __.float(0.043137254901960784), __.int(1));\n        color.neutral50 = __.FM.float_4_1_1_1_1(__.float(0.9803921568627451), __.float(0.9803921568627451), __.float(0.9803921568627451), __.int(1));\n        color.neutral100 = __.FM.float_4_1_1_1_1(__.float(0.9607843137254902), __.float(0.9607843137254902), __.float(0.9607843137254902), __.int(1));\n        color.neutral200 = __.FM.float_4_1_1_1_1(__.float(0.8980392156862745), __.float(0.8980392156862745), __.float(0.8980392156862745), __.int(1));\n        color.neutral300 = __.FM.float_4_1_1_1_1(__.float(0.8313725490196079), __.float(0.8313725490196079), __.float(0.8313725490196079), __.int(1));\n        color.neutral400 = __.FM.float_4_1_1_1_1(__.float(0.6392156862745098), __.float(0.6392156862745098), __.float(0.6392156862745098), __.int(1));\n        color.neutral500 = __.FM.float_4_1_1_1_1(__.float(0.45098039215686275), __.float(0.45098039215686275), __.float(0.45098039215686275), __.int(1));\n        color.neutral600 = __.FM.float_4_1_1_1_1(__.float(0.3215686274509804), __.float(0.3215686274509804), __.float(0.3215686274509804), __.int(1));\n        color.neutral700 = __.FM.float_4_1_1_1_1(__.float(0.25098039215686274), __.float(0.25098039215686274), __.float(0.25098039215686274), __.int(1));\n        color.neutral800 = __.FM.float_4_1_1_1_1(__.float(0.14901960784313725), __.float(0.14901960784313725), __.float(0.14901960784313725), __.int(1));\n        color.neutral900 = __.FM.float_4_1_1_1_1(__.float(0.09019607843137255), __.float(0.09019607843137255), __.float(0.09019607843137255), __.int(1));\n        color.neutral950 = __.FM.float_4_1_1_1_1(__.float(0.0392156862745098), __.float(0.0392156862745098), __.float(0.0392156862745098), __.int(1));\n        color.stone50 = __.FM.float_4_1_1_1_1(__.float(0.9803921568627451), __.float(0.9803921568627451), __.float(0.9764705882352941), __.int(1));\n        color.stone100 = __.FM.float_4_1_1_1_1(__.float(0.9607843137254902), __.float(0.9607843137254902), __.float(0.9568627450980393), __.int(1));\n        color.stone200 = __.FM.float_4_1_1_1_1(__.float(0.9058823529411765), __.float(0.8980392156862745), __.float(0.8941176470588236), __.int(1));\n        color.stone300 = __.FM.float_4_1_1_1_1(__.float(0.8392156862745098), __.float(0.8274509803921568), __.float(0.8196078431372549), __.int(1));\n        color.stone400 = __.FM.float_4_1_1_1_1(__.float(0.6588235294117647), __.float(0.6352941176470588), __.float(0.6196078431372549), __.int(1));\n        color.stone500 = __.FM.float_4_1_1_1_1(__.float(0.47058823529411764), __.float(0.44313725490196076), __.float(0.4235294117647059), __.int(1));\n        color.stone600 = __.FM.float_4_1_1_1_1(__.float(0.3411764705882353), __.float(0.3254901960784314), __.float(0.3058823529411765), __.int(1));\n        color.stone700 = __.FM.float_4_1_1_1_1(__.float(0.26666666666666666), __.float(0.25098039215686274), __.float(0.23529411764705882), __.int(1));\n        color.stone800 = __.FM.float_4_1_1_1_1(__.float(0.1607843137254902), __.float(0.1450980392156863), __.float(0.1411764705882353), __.int(1));\n        color.stone900 = __.FM.float_4_1_1_1_1(__.float(0.10980392156862745), __.float(0.09803921568627451), __.float(0.09019607843137255), __.int(1));\n        color.stone950 = __.FM.float_4_1_1_1_1(__.float(0.047058823529411764), __.float(0.0392156862745098), __.float(0.03529411764705882), __.int(1));\n        color.red50 = __.FM.float_4_1_1_1_1(__.float(0.996078431372549), __.float(0.9490196078431372), __.float(0.9490196078431372), __.int(1));\n        color.red100 = __.FM.float_4_1_1_1_1(__.float(0.996078431372549), __.float(0.8862745098039215), __.float(0.8862745098039215), __.int(1));\n        color.red200 = __.FM.float_4_1_1_1_1(__.float(0.996078431372549), __.float(0.792156862745098), __.float(0.792156862745098), __.int(1));\n        color.red300 = __.FM.float_4_1_1_1_1(__.float(0.9882352941176471), __.float(0.6470588235294118), __.float(0.6470588235294118), __.int(1));\n        color.red400 = __.FM.float_4_1_1_1_1(__.float(0.9725490196078431), __.float(0.44313725490196076), __.float(0.44313725490196076), __.int(1));\n        color.red500 = __.FM.float_4_1_1_1_1(__.float(0.9372549019607843), __.float(0.26666666666666666), __.float(0.26666666666666666), __.int(1));\n        color.red600 = __.FM.float_4_1_1_1_1(__.float(0.8627450980392157), __.float(0.14901960784313725), __.float(0.14901960784313725), __.int(1));\n        color.red700 = __.FM.float_4_1_1_1_1(__.float(0.7254901960784313), __.float(0.10980392156862745), __.float(0.10980392156862745), __.int(1));\n        color.red800 = __.FM.float_4_1_1_1_1(__.float(0.6), __.float(0.10588235294117647), __.float(0.10588235294117647), __.int(1));\n        color.red900 = __.FM.float_4_1_1_1_1(__.float(0.4980392156862745), __.float(0.11372549019607843), __.float(0.11372549019607843), __.int(1));\n        color.red950 = __.FM.float_4_1_1_1_1(__.float(0.27058823529411763), __.float(0.0392156862745098), __.float(0.0392156862745098), __.int(1));\n        color.orange50 = __.FM.float_4_1_1_1_1(__.int(1), __.float(0.9686274509803922), __.float(0.9294117647058824), __.int(1));\n        color.orange100 = __.FM.float_4_1_1_1_1(__.int(1), __.float(0.9294117647058824), __.float(0.8352941176470589), __.int(1));\n        color.orange200 = __.FM.float_4_1_1_1_1(__.float(0.996078431372549), __.float(0.8431372549019608), __.float(0.6666666666666666), __.int(1));\n        color.orange300 = __.FM.float_4_1_1_1_1(__.float(0.9921568627450981), __.float(0.7294117647058823), __.float(0.4549019607843137), __.int(1));\n        color.orange400 = __.FM.float_4_1_1_1_1(__.float(0.984313725490196), __.float(0.5725490196078431), __.float(0.23529411764705882), __.int(1));\n        color.orange500 = __.FM.float_4_1_1_1_1(__.float(0.9764705882352941), __.float(0.45098039215686275), __.float(0.08627450980392157), __.int(1));\n        color.orange600 = __.FM.float_4_1_1_1_1(__.float(0.9176470588235294), __.float(0.34509803921568627), __.float(0.047058823529411764), __.int(1));\n        color.orange700 = __.FM.float_4_1_1_1_1(__.float(0.7607843137254902), __.float(0.2549019607843137), __.float(0.047058823529411764), __.int(1));\n        color.orange800 = __.FM.float_4_1_1_1_1(__.float(0.6039215686274509), __.float(0.20392156862745098), __.float(0.07058823529411765), __.int(1));\n        color.orange900 = __.FM.float_4_1_1_1_1(__.float(0.48627450980392156), __.float(0.17647058823529413), __.float(0.07058823529411765), __.int(1));\n        color.orange950 = __.FM.float_4_1_1_1_1(__.float(0.2627450980392157), __.float(0.0784313725490196), __.float(0.027450980392156862), __.int(1));\n        color.amber50 = __.FM.float_4_1_1_1_1(__.int(1), __.float(0.984313725490196), __.float(0.9215686274509803), __.int(1));\n        color.amber100 = __.FM.float_4_1_1_1_1(__.float(0.996078431372549), __.float(0.9529411764705882), __.float(0.7803921568627451), __.int(1));\n        color.amber200 = __.FM.float_4_1_1_1_1(__.float(0.9921568627450981), __.float(0.9019607843137255), __.float(0.5411764705882353), __.int(1));\n        color.amber300 = __.FM.float_4_1_1_1_1(__.float(0.9882352941176471), __.float(0.8274509803921568), __.float(0.30196078431372547), __.int(1));\n        color.amber400 = __.FM.float_4_1_1_1_1(__.float(0.984313725490196), __.float(0.7490196078431373), __.float(0.1411764705882353), __.int(1));\n        color.amber500 = __.FM.float_4_1_1_1_1(__.float(0.9607843137254902), __.float(0.6196078431372549), __.float(0.043137254901960784), __.int(1));\n        color.amber600 = __.FM.float_4_1_1_1_1(__.float(0.8509803921568627), __.float(0.4666666666666667), __.float(0.023529411764705882), __.int(1));\n        color.amber700 = __.FM.float_4_1_1_1_1(__.float(0.7058823529411765), __.float(0.3254901960784314), __.float(0.03529411764705882), __.int(1));\n        color.amber800 = __.FM.float_4_1_1_1_1(__.float(0.5725490196078431), __.float(0.25098039215686274), __.float(0.054901960784313725), __.int(1));\n        color.amber900 = __.FM.float_4_1_1_1_1(__.float(0.47058823529411764), __.float(0.20784313725490197), __.float(0.058823529411764705), __.int(1));\n        color.amber950 = __.FM.float_4_1_1_1_1(__.float(0.27058823529411763), __.float(0.10196078431372549), __.float(0.011764705882352941), __.int(1));\n        color.yellow50 = __.FM.float_4_1_1_1_1(__.float(0.996078431372549), __.float(0.9882352941176471), __.float(0.9098039215686274), __.int(1));\n        color.yellow100 = __.FM.float_4_1_1_1_1(__.float(0.996078431372549), __.float(0.9764705882352941), __.float(0.7647058823529411), __.int(1));\n        color.yellow200 = __.FM.float_4_1_1_1_1(__.float(0.996078431372549), __.float(0.9411764705882353), __.float(0.5411764705882353), __.int(1));\n        color.yellow300 = __.FM.float_4_1_1_1_1(__.float(0.9921568627450981), __.float(0.8784313725490196), __.float(0.2784313725490196), __.int(1));\n        color.yellow400 = __.FM.float_4_1_1_1_1(__.float(0.9803921568627451), __.float(0.8), __.float(0.08235294117647059), __.int(1));\n        color.yellow500 = __.FM.float_4_1_1_1_1(__.float(0.9176470588235294), __.float(0.7019607843137254), __.float(0.03137254901960784), __.int(1));\n        color.yellow600 = __.FM.float_4_1_1_1_1(__.float(0.792156862745098), __.float(0.5411764705882353), __.float(0.01568627450980392), __.int(1));\n        color.yellow700 = __.FM.float_4_1_1_1_1(__.float(0.6313725490196078), __.float(0.3843137254901961), __.float(0.027450980392156862), __.int(1));\n        color.yellow800 = __.FM.float_4_1_1_1_1(__.float(0.5215686274509804), __.float(0.30196078431372547), __.float(0.054901960784313725), __.int(1));\n        color.yellow900 = __.FM.float_4_1_1_1_1(__.float(0.44313725490196076), __.float(0.24705882352941178), __.float(0.07058823529411765), __.int(1));\n        color.yellow950 = __.FM.float_4_1_1_1_1(__.float(0.25882352941176473), __.float(0.12549019607843137), __.float(0.023529411764705882), __.int(1));\n        color.lime50 = __.FM.float_4_1_1_1_1(__.float(0.9686274509803922), __.float(0.996078431372549), __.float(0.9058823529411765), __.int(1));\n        color.lime100 = __.FM.float_4_1_1_1_1(__.float(0.9254901960784314), __.float(0.9882352941176471), __.float(0.796078431372549), __.int(1));\n        color.lime200 = __.FM.float_4_1_1_1_1(__.float(0.8509803921568627), __.float(0.9764705882352941), __.float(0.615686274509804), __.int(1));\n        color.lime300 = __.FM.float_4_1_1_1_1(__.float(0.7450980392156863), __.float(0.9490196078431372), __.float(0.39215686274509803), __.int(1));\n        color.lime400 = __.FM.float_4_1_1_1_1(__.float(0.6392156862745098), __.float(0.9019607843137255), __.float(0.20784313725490197), __.int(1));\n        color.lime500 = __.FM.float_4_1_1_1_1(__.float(0.5176470588235295), __.float(0.8), __.float(0.08627450980392157), __.int(1));\n        color.lime600 = __.FM.float_4_1_1_1_1(__.float(0.396078431372549), __.float(0.6392156862745098), __.float(0.050980392156862744), __.int(1));\n        color.lime700 = __.FM.float_4_1_1_1_1(__.float(0.30196078431372547), __.float(0.48627450980392156), __.float(0.058823529411764705), __.int(1));\n        color.lime800 = __.FM.float_4_1_1_1_1(__.float(0.24705882352941178), __.float(0.3843137254901961), __.float(0.07058823529411765), __.int(1));\n        color.lime900 = __.FM.float_4_1_1_1_1(__.float(0.21176470588235294), __.float(0.3254901960784314), __.float(0.0784313725490196), __.int(1));\n        color.lime950 = __.FM.float_4_1_1_1_1(__.float(0.10196078431372549), __.float(0.1803921568627451), __.float(0.0196078431372549), __.int(1));\n        color.green50 = __.FM.float_4_1_1_1_1(__.float(0.9411764705882353), __.float(0.9921568627450981), __.float(0.9568627450980393), __.int(1));\n        color.green100 = __.FM.float_4_1_1_1_1(__.float(0.8627450980392157), __.float(0.9882352941176471), __.float(0.9058823529411765), __.int(1));\n        color.green200 = __.FM.float_4_1_1_1_1(__.float(0.7333333333333333), __.float(0.9686274509803922), __.float(0.8156862745098039), __.int(1));\n        color.green300 = __.FM.float_4_1_1_1_1(__.float(0.5254901960784314), __.float(0.9372549019607843), __.float(0.6745098039215687), __.int(1));\n        color.green400 = __.FM.float_4_1_1_1_1(__.float(0.2901960784313726), __.float(0.8705882352941177), __.float(0.5019607843137255), __.int(1));\n        color.green500 = __.FM.float_4_1_1_1_1(__.float(0.13333333333333333), __.float(0.7725490196078432), __.float(0.3686274509803922), __.int(1));\n        color.green600 = __.FM.float_4_1_1_1_1(__.float(0.08627450980392157), __.float(0.6392156862745098), __.float(0.2901960784313726), __.int(1));\n        color.green700 = __.FM.float_4_1_1_1_1(__.float(0.08235294117647059), __.float(0.5019607843137255), __.float(0.23921568627450981), __.int(1));\n        color.green800 = __.FM.float_4_1_1_1_1(__.float(0.08627450980392157), __.float(0.396078431372549), __.float(0.20392156862745098), __.int(1));\n        color.green900 = __.FM.float_4_1_1_1_1(__.float(0.0784313725490196), __.float(0.3254901960784314), __.float(0.17647058823529413), __.int(1));\n        color.green950 = __.FM.float_4_1_1_1_1(__.float(0.0196078431372549), __.float(0.1803921568627451), __.float(0.08627450980392157), __.int(1));\n        color.emerald50 = __.FM.float_4_1_1_1_1(__.float(0.9254901960784314), __.float(0.9921568627450981), __.float(0.9607843137254902), __.int(1));\n        color.emerald100 = __.FM.float_4_1_1_1_1(__.float(0.8196078431372549), __.float(0.9803921568627451), __.float(0.8980392156862745), __.int(1));\n        color.emerald200 = __.FM.float_4_1_1_1_1(__.float(0.6549019607843137), __.float(0.9529411764705882), __.float(0.8156862745098039), __.int(1));\n        color.emerald300 = __.FM.float_4_1_1_1_1(__.float(0.43137254901960786), __.float(0.9058823529411765), __.float(0.7176470588235294), __.int(1));\n        color.emerald400 = __.FM.float_4_1_1_1_1(__.float(0.20392156862745098), __.float(0.8274509803921568), __.float(0.6), __.int(1));\n        color.emerald500 = __.FM.float_4_1_1_1_1(__.float(0.06274509803921569), __.float(0.7254901960784313), __.float(0.5058823529411764), __.int(1));\n        color.emerald600 = __.FM.float_4_1_1_1_1(__.float(0.0196078431372549), __.float(0.5882352941176471), __.float(0.4117647058823529), __.int(1));\n        color.emerald700 = __.FM.float_4_1_1_1_1(__.float(0.01568627450980392), __.float(0.47058823529411764), __.float(0.3411764705882353), __.int(1));\n        color.emerald800 = __.FM.float_4_1_1_1_1(__.float(0.023529411764705882), __.float(0.37254901960784315), __.float(0.27450980392156865), __.int(1));\n        color.emerald900 = __.FM.float_4_1_1_1_1(__.float(0.023529411764705882), __.float(0.3058823529411765), __.float(0.23137254901960785), __.int(1));\n        color.emerald950 = __.FM.float_4_1_1_1_1(__.float(0.00784313725490196), __.float(0.17254901960784313), __.float(0.13333333333333333), __.int(1));\n        color.teal50 = __.FM.float_4_1_1_1_1(__.float(0.9411764705882353), __.float(0.9921568627450981), __.float(0.9803921568627451), __.int(1));\n        color.teal100 = __.FM.float_4_1_1_1_1(__.float(0.8), __.float(0.984313725490196), __.float(0.9450980392156862), __.int(1));\n        color.teal200 = __.FM.float_4_1_1_1_1(__.float(0.6), __.float(0.9647058823529412), __.float(0.8941176470588236), __.int(1));\n        color.teal300 = __.FM.float_4_1_1_1_1(__.float(0.3686274509803922), __.float(0.9176470588235294), __.float(0.8313725490196079), __.int(1));\n        color.teal400 = __.FM.float_4_1_1_1_1(__.float(0.17647058823529413), __.float(0.8313725490196079), __.float(0.7490196078431373), __.int(1));\n        color.teal500 = __.FM.float_4_1_1_1_1(__.float(0.0784313725490196), __.float(0.7215686274509804), __.float(0.6509803921568628), __.int(1));\n        color.teal600 = __.FM.float_4_1_1_1_1(__.float(0.050980392156862744), __.float(0.5803921568627451), __.float(0.5333333333333333), __.int(1));\n        color.teal700 = __.FM.float_4_1_1_1_1(__.float(0.058823529411764705), __.float(0.4627450980392157), __.float(0.43137254901960786), __.int(1));\n        color.teal800 = __.FM.float_4_1_1_1_1(__.float(0.06666666666666667), __.float(0.3686274509803922), __.float(0.34901960784313724), __.int(1));\n        color.teal900 = __.FM.float_4_1_1_1_1(__.float(0.07450980392156863), __.float(0.3058823529411765), __.float(0.2901960784313726), __.int(1));\n        color.teal950 = __.FM.float_4_1_1_1_1(__.float(0.01568627450980392), __.float(0.1843137254901961), __.float(0.1803921568627451), __.int(1));\n        color.cyan50 = __.FM.float_4_1_1_1_1(__.float(0.9254901960784314), __.float(0.996078431372549), __.int(1), __.int(1));\n        color.cyan100 = __.FM.float_4_1_1_1_1(__.float(0.8117647058823529), __.float(0.9803921568627451), __.float(0.996078431372549), __.int(1));\n        color.cyan200 = __.FM.float_4_1_1_1_1(__.float(0.6470588235294118), __.float(0.9529411764705882), __.float(0.9882352941176471), __.int(1));\n        color.cyan300 = __.FM.float_4_1_1_1_1(__.float(0.403921568627451), __.float(0.9098039215686274), __.float(0.9764705882352941), __.int(1));\n        color.cyan400 = __.FM.float_4_1_1_1_1(__.float(0.13333333333333333), __.float(0.8274509803921568), __.float(0.9333333333333333), __.int(1));\n        color.cyan500 = __.FM.float_4_1_1_1_1(__.float(0.023529411764705882), __.float(0.7137254901960784), __.float(0.8313725490196079), __.int(1));\n        color.cyan600 = __.FM.float_4_1_1_1_1(__.float(0.03137254901960784), __.float(0.5686274509803921), __.float(0.6980392156862745), __.int(1));\n        color.cyan700 = __.FM.float_4_1_1_1_1(__.float(0.054901960784313725), __.float(0.4549019607843137), __.float(0.5647058823529412), __.int(1));\n        color.cyan800 = __.FM.float_4_1_1_1_1(__.float(0.08235294117647059), __.float(0.3686274509803922), __.float(0.4588235294117647), __.int(1));\n        color.cyan900 = __.FM.float_4_1_1_1_1(__.float(0.08627450980392157), __.float(0.3058823529411765), __.float(0.38823529411764707), __.int(1));\n        color.cyan950 = __.FM.float_4_1_1_1_1(__.float(0.03137254901960784), __.float(0.2), __.float(0.26666666666666666), __.int(1));\n        color.sky50 = __.FM.float_4_1_1_1_1(__.float(0.9411764705882353), __.float(0.9764705882352941), __.int(1), __.int(1));\n        color.sky100 = __.FM.float_4_1_1_1_1(__.float(0.8784313725490196), __.float(0.9490196078431372), __.float(0.996078431372549), __.int(1));\n        color.sky200 = __.FM.float_4_1_1_1_1(__.float(0.7294117647058823), __.float(0.9019607843137255), __.float(0.9921568627450981), __.int(1));\n        color.sky300 = __.FM.float_4_1_1_1_1(__.float(0.49019607843137253), __.float(0.8274509803921568), __.float(0.9882352941176471), __.int(1));\n        color.sky400 = __.FM.float_4_1_1_1_1(__.float(0.2196078431372549), __.float(0.7411764705882353), __.float(0.9725490196078431), __.int(1));\n        color.sky500 = __.FM.float_4_1_1_1_1(__.float(0.054901960784313725), __.float(0.6470588235294118), __.float(0.9137254901960784), __.int(1));\n        color.sky600 = __.FM.float_4_1_1_1_1(__.float(0.00784313725490196), __.float(0.5176470588235295), __.float(0.7803921568627451), __.int(1));\n        color.sky700 = __.FM.float_4_1_1_1_1(__.float(0.011764705882352941), __.float(0.4117647058823529), __.float(0.6313725490196078), __.int(1));\n        color.sky800 = __.FM.float_4_1_1_1_1(__.float(0.027450980392156862), __.float(0.34901960784313724), __.float(0.5215686274509804), __.int(1));\n        color.sky900 = __.FM.float_4_1_1_1_1(__.float(0.047058823529411764), __.float(0.2901960784313726), __.float(0.43137254901960786), __.int(1));\n        color.sky950 = __.FM.float_4_1_1_1_1(__.float(0.03137254901960784), __.float(0.1843137254901961), __.float(0.28627450980392155), __.int(1));\n        color.blue50 = __.FM.float_4_1_1_1_1(__.float(0.9372549019607843), __.float(0.9647058823529412), __.int(1), __.int(1));\n        color.blue100 = __.FM.float_4_1_1_1_1(__.float(0.8588235294117647), __.float(0.9176470588235294), __.float(0.996078431372549), __.int(1));\n        color.blue200 = __.FM.float_4_1_1_1_1(__.float(0.7490196078431373), __.float(0.8588235294117647), __.float(0.996078431372549), __.int(1));\n        color.blue300 = __.FM.float_4_1_1_1_1(__.float(0.5764705882352941), __.float(0.7725490196078432), __.float(0.9921568627450981), __.int(1));\n        color.blue400 = __.FM.float_4_1_1_1_1(__.float(0.3764705882352941), __.float(0.6470588235294118), __.float(0.9803921568627451), __.int(1));\n        color.blue500 = __.FM.float_4_1_1_1_1(__.float(0.23137254901960785), __.float(0.5098039215686274), __.float(0.9647058823529412), __.int(1));\n        color.blue600 = __.FM.float_4_1_1_1_1(__.float(0.1450980392156863), __.float(0.38823529411764707), __.float(0.9215686274509803), __.int(1));\n        color.blue700 = __.FM.float_4_1_1_1_1(__.float(0.11372549019607843), __.float(0.3058823529411765), __.float(0.8470588235294118), __.int(1));\n        color.blue800 = __.FM.float_4_1_1_1_1(__.float(0.11764705882352941), __.float(0.25098039215686274), __.float(0.6862745098039216), __.int(1));\n        color.blue900 = __.FM.float_4_1_1_1_1(__.float(0.11764705882352941), __.float(0.22745098039215686), __.float(0.5411764705882353), __.int(1));\n        color.blue950 = __.FM.float_4_1_1_1_1(__.float(0.09019607843137255), __.float(0.1450980392156863), __.float(0.32941176470588235), __.int(1));\n        color.indigo50 = __.FM.float_4_1_1_1_1(__.float(0.9333333333333333), __.float(0.9490196078431372), __.int(1), __.int(1));\n        color.indigo100 = __.FM.float_4_1_1_1_1(__.float(0.8784313725490196), __.float(0.9058823529411765), __.int(1), __.int(1));\n        color.indigo200 = __.FM.float_4_1_1_1_1(__.float(0.7803921568627451), __.float(0.8235294117647058), __.float(0.996078431372549), __.int(1));\n        color.indigo300 = __.FM.float_4_1_1_1_1(__.float(0.6470588235294118), __.float(0.7058823529411765), __.float(0.9882352941176471), __.int(1));\n        color.indigo400 = __.FM.float_4_1_1_1_1(__.float(0.5058823529411764), __.float(0.5490196078431373), __.float(0.9725490196078431), __.int(1));\n        color.indigo500 = __.FM.float_4_1_1_1_1(__.float(0.38823529411764707), __.float(0.4), __.float(0.9450980392156862), __.int(1));\n        color.indigo600 = __.FM.float_4_1_1_1_1(__.float(0.30980392156862746), __.float(0.27450980392156865), __.float(0.8980392156862745), __.int(1));\n        color.indigo700 = __.FM.float_4_1_1_1_1(__.float(0.2627450980392157), __.float(0.2196078431372549), __.float(0.792156862745098), __.int(1));\n        color.indigo800 = __.FM.float_4_1_1_1_1(__.float(0.21568627450980393), __.float(0.18823529411764706), __.float(0.6392156862745098), __.int(1));\n        color.indigo900 = __.FM.float_4_1_1_1_1(__.float(0.19215686274509805), __.float(0.1803921568627451), __.float(0.5058823529411764), __.int(1));\n        color.indigo950 = __.FM.float_4_1_1_1_1(__.float(0.11764705882352941), __.float(0.10588235294117647), __.float(0.29411764705882354), __.int(1));\n        color.violet50 = __.FM.float_4_1_1_1_1(__.float(0.9607843137254902), __.float(0.9529411764705882), __.int(1), __.int(1));\n        color.violet100 = __.FM.float_4_1_1_1_1(__.float(0.9294117647058824), __.float(0.9137254901960784), __.float(0.996078431372549), __.int(1));\n        color.violet200 = __.FM.float_4_1_1_1_1(__.float(0.8666666666666667), __.float(0.8392156862745098), __.float(0.996078431372549), __.int(1));\n        color.violet300 = __.FM.float_4_1_1_1_1(__.float(0.7686274509803922), __.float(0.7098039215686275), __.float(0.9921568627450981), __.int(1));\n        color.violet400 = __.FM.float_4_1_1_1_1(__.float(0.6549019607843137), __.float(0.5450980392156862), __.float(0.9803921568627451), __.int(1));\n        color.violet500 = __.FM.float_4_1_1_1_1(__.float(0.5450980392156862), __.float(0.3607843137254902), __.float(0.9647058823529412), __.int(1));\n        color.violet600 = __.FM.float_4_1_1_1_1(__.float(0.48627450980392156), __.float(0.22745098039215686), __.float(0.9294117647058824), __.int(1));\n        color.violet700 = __.FM.float_4_1_1_1_1(__.float(0.42745098039215684), __.float(0.1568627450980392), __.float(0.8509803921568627), __.int(1));\n        color.violet800 = __.FM.float_4_1_1_1_1(__.float(0.3568627450980392), __.float(0.12941176470588237), __.float(0.7137254901960784), __.int(1));\n        color.violet900 = __.FM.float_4_1_1_1_1(__.float(0.2980392156862745), __.float(0.11372549019607843), __.float(0.5843137254901961), __.int(1));\n        color.violet950 = __.FM.float_4_1_1_1_1(__.float(0.1803921568627451), __.float(0.06274509803921569), __.float(0.396078431372549), __.int(1));\n        color.purple50 = __.FM.float_4_1_1_1_1(__.float(0.9803921568627451), __.float(0.9607843137254902), __.int(1), __.int(1));\n        color.purple100 = __.FM.float_4_1_1_1_1(__.float(0.9529411764705882), __.float(0.9098039215686274), __.int(1), __.int(1));\n        color.purple200 = __.FM.float_4_1_1_1_1(__.float(0.9137254901960784), __.float(0.8352941176470589), __.int(1), __.int(1));\n        color.purple300 = __.FM.float_4_1_1_1_1(__.float(0.8470588235294118), __.float(0.7058823529411765), __.float(0.996078431372549), __.int(1));\n        color.purple400 = __.FM.float_4_1_1_1_1(__.float(0.7529411764705882), __.float(0.5176470588235295), __.float(0.9882352941176471), __.int(1));\n        color.purple500 = __.FM.float_4_1_1_1_1(__.float(0.6588235294117647), __.float(0.3333333333333333), __.float(0.9686274509803922), __.int(1));\n        color.purple600 = __.FM.float_4_1_1_1_1(__.float(0.5764705882352941), __.float(0.2), __.float(0.9176470588235294), __.int(1));\n        color.purple700 = __.FM.float_4_1_1_1_1(__.float(0.49411764705882355), __.float(0.13333333333333333), __.float(0.807843137254902), __.int(1));\n        color.purple800 = __.FM.float_4_1_1_1_1(__.float(0.4196078431372549), __.float(0.12941176470588237), __.float(0.6588235294117647), __.int(1));\n        color.purple900 = __.FM.float_4_1_1_1_1(__.float(0.34509803921568627), __.float(0.10980392156862745), __.float(0.5294117647058824), __.int(1));\n        color.purple950 = __.FM.float_4_1_1_1_1(__.float(0.23137254901960785), __.float(0.027450980392156862), __.float(0.39215686274509803), __.int(1));\n        color.fuchsia50 = __.FM.float_4_1_1_1_1(__.float(0.9921568627450981), __.float(0.9568627450980393), __.int(1), __.int(1));\n        color.fuchsia100 = __.FM.float_4_1_1_1_1(__.float(0.9803921568627451), __.float(0.9098039215686274), __.int(1), __.int(1));\n        color.fuchsia200 = __.FM.float_4_1_1_1_1(__.float(0.9607843137254902), __.float(0.8156862745098039), __.float(0.996078431372549), __.int(1));\n        color.fuchsia300 = __.FM.float_4_1_1_1_1(__.float(0.9411764705882353), __.float(0.6705882352941176), __.float(0.9882352941176471), __.int(1));\n        color.fuchsia400 = __.FM.float_4_1_1_1_1(__.float(0.9098039215686274), __.float(0.4745098039215686), __.float(0.9764705882352941), __.int(1));\n        color.fuchsia500 = __.FM.float_4_1_1_1_1(__.float(0.8509803921568627), __.float(0.27450980392156865), __.float(0.9372549019607843), __.int(1));\n        color.fuchsia600 = __.FM.float_4_1_1_1_1(__.float(0.7529411764705882), __.float(0.14901960784313725), __.float(0.8274509803921568), __.int(1));\n        color.fuchsia700 = __.FM.float_4_1_1_1_1(__.float(0.6352941176470588), __.float(0.10980392156862745), __.float(0.6862745098039216), __.int(1));\n        color.fuchsia800 = __.FM.float_4_1_1_1_1(__.float(0.5254901960784314), __.float(0.09803921568627451), __.float(0.5607843137254902), __.int(1));\n        color.fuchsia900 = __.FM.float_4_1_1_1_1(__.float(0.4392156862745098), __.float(0.10196078431372549), __.float(0.4588235294117647), __.int(1));\n        color.fuchsia950 = __.FM.float_4_1_1_1_1(__.float(0.2901960784313726), __.float(0.01568627450980392), __.float(0.3058823529411765), __.int(1));\n        color.pink50 = __.FM.float_4_1_1_1_1(__.float(0.9921568627450981), __.float(0.9490196078431372), __.float(0.9725490196078431), __.int(1));\n        color.pink100 = __.FM.float_4_1_1_1_1(__.float(0.9882352941176471), __.float(0.9058823529411765), __.float(0.9529411764705882), __.int(1));\n        color.pink200 = __.FM.float_4_1_1_1_1(__.float(0.984313725490196), __.float(0.8117647058823529), __.float(0.9098039215686274), __.int(1));\n        color.pink300 = __.FM.float_4_1_1_1_1(__.float(0.9764705882352941), __.float(0.6588235294117647), __.float(0.8313725490196079), __.int(1));\n        color.pink400 = __.FM.float_4_1_1_1_1(__.float(0.9568627450980393), __.float(0.4470588235294118), __.float(0.7137254901960784), __.int(1));\n        color.pink500 = __.FM.float_4_1_1_1_1(__.float(0.9254901960784314), __.float(0.2823529411764706), __.float(0.6), __.int(1));\n        color.pink600 = __.FM.float_4_1_1_1_1(__.float(0.8588235294117647), __.float(0.15294117647058825), __.float(0.4666666666666667), __.int(1));\n        color.pink700 = __.FM.float_4_1_1_1_1(__.float(0.7450980392156863), __.float(0.09411764705882353), __.float(0.36470588235294116), __.int(1));\n        color.pink800 = __.FM.float_4_1_1_1_1(__.float(0.615686274509804), __.float(0.09019607843137255), __.float(0.30196078431372547), __.int(1));\n        color.pink900 = __.FM.float_4_1_1_1_1(__.float(0.5137254901960784), __.float(0.09411764705882353), __.float(0.2627450980392157), __.int(1));\n        color.pink950 = __.FM.float_4_1_1_1_1(__.float(0.3137254901960784), __.float(0.027450980392156862), __.float(0.1411764705882353), __.int(1));\n        color.rose50 = __.FM.float_4_1_1_1_1(__.int(1), __.float(0.9450980392156862), __.float(0.9490196078431372), __.int(1));\n        color.rose100 = __.FM.float_4_1_1_1_1(__.int(1), __.float(0.8941176470588236), __.float(0.9019607843137255), __.int(1));\n        color.rose200 = __.FM.float_4_1_1_1_1(__.float(0.996078431372549), __.float(0.803921568627451), __.float(0.8274509803921568), __.int(1));\n        color.rose300 = __.FM.float_4_1_1_1_1(__.float(0.9921568627450981), __.float(0.6431372549019608), __.float(0.6862745098039216), __.int(1));\n        color.rose400 = __.FM.float_4_1_1_1_1(__.float(0.984313725490196), __.float(0.44313725490196076), __.float(0.5215686274509804), __.int(1));\n        color.rose500 = __.FM.float_4_1_1_1_1(__.float(0.9568627450980393), __.float(0.24705882352941178), __.float(0.3686274509803922), __.int(1));\n        color.rose600 = __.FM.float_4_1_1_1_1(__.float(0.8823529411764706), __.float(0.11372549019607843), __.float(0.2823529411764706), __.int(1));\n        color.rose700 = __.FM.float_4_1_1_1_1(__.float(0.7450980392156863), __.float(0.07058823529411765), __.float(0.23529411764705882), __.int(1));\n        color.rose800 = __.FM.float_4_1_1_1_1(__.float(0.6235294117647059), __.float(0.07058823529411765), __.float(0.2235294117647059), __.int(1));\n        color.rose900 = __.FM.float_4_1_1_1_1(__.float(0.5333333333333333), __.float(0.07450980392156863), __.float(0.21568627450980393), __.int(1));\n        color.rose950 = __.FM.float_4_1_1_1_1(__.float(0.2980392156862745), __.float(0.0196078431372549), __.float(0.09803921568627451), __.int(1));\n        return color;\n    }());\n    exports.color = color;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_common_ts_57071_color\\\",\\\"fields\\\":[[\\\"slate50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"slate100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"slate200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"slate300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"slate400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"slate500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"slate600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"slate700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"slate800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"slate900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"slate950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"gray50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"gray100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"gray200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"gray300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"gray400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"gray500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"gray600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"gray700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"gray800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"gray900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"gray950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"zinc50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"zinc100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"zinc200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"zinc300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"zinc400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"zinc500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"zinc600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"zinc700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"zinc800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"zinc900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"zinc950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"neutral50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"neutral100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"neutral200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"neutral300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"neutral400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"neutral500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"neutral600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"neutral700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"neutral800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"neutral900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"neutral950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"stone50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"stone100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"stone200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"stone300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"stone400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"stone500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"stone600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"stone700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"stone800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"stone900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"stone950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"red50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"red100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"red200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"red300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"red400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"red500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"red600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"red700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"red800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"red900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"red950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"orange50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"orange100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"orange200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"orange300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"orange400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"orange500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"orange600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"orange700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"orange800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"orange900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"orange950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"amber50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"amber100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"amber200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"amber300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"amber400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"amber500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"amber600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"amber700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"amber800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"amber900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"amber950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"yellow50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"yellow100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"yellow200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"yellow300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"yellow400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"yellow500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"yellow600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"yellow700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"yellow800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"yellow900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"yellow950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"lime50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"lime100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"lime200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"lime300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"lime400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"lime500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"lime600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"lime700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"lime800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"lime900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"lime950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"green50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"green100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"green200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"green300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"green400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"green500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"green600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"green700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"green800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"green900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"green950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"emerald50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"emerald100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"emerald200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"emerald300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"emerald400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"emerald500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"emerald600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"emerald700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"emerald800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"emerald900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"emerald950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"teal50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"teal100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"teal200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"teal300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"teal400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"teal500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"teal600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"teal700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"teal800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"teal900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"teal950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"cyan50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"cyan100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"cyan200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"cyan300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"cyan400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"cyan500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"cyan600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"cyan700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"cyan800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"cyan900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"cyan950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"sky50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"sky100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"sky200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"sky300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"sky400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"sky500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"sky600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"sky700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"sky800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"sky900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"sky950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"blue50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"blue100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"blue200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"blue300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"blue400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"blue500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"blue600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"blue700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"blue800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"blue900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"blue950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"indigo50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"indigo100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"indigo200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"indigo300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"indigo400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"indigo500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"indigo600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"indigo700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"indigo800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"indigo900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"indigo950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"violet50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"violet100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"violet200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"violet300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"violet400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"violet500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"violet600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"violet700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"violet800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"violet900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"violet950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"purple50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"purple100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"purple200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"purple300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"purple400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"purple500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"purple600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"purple700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"purple800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"purple900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"purple950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"fuchsia50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"fuchsia100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"fuchsia200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"fuchsia300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"fuchsia400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"fuchsia500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"fuchsia600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"fuchsia700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"fuchsia800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"fuchsia900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"fuchsia950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"pink50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"pink100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"pink200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"pink300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"pink400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"pink500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"pink600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"pink700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"pink800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"pink900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"pink950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"rose50\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"rose100\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"rose200\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"rose300\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"rose400\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"rose500\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"rose600\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"rose700\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"rose800\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"rose900\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}],[\\\"rose950\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float4\\\"}]]}\"), color)\n    ;\n    function wrap2(value, low, high) { return __.makeVector((0, std_math_1.wrap)(value[0], low, high), (0, std_math_1.wrap)(value[1], low, high)); }\n    exports.wrap2 = wrap2;\n    ;\n    function wrap3(value, low, high) { return __.makeVector((0, std_math_1.wrap)(value[0], low, high), (0, std_math_1.wrap)(value[1], low, high), (0, std_math_1.wrap)(value[2], low, high)); }\n    exports.wrap3 = wrap3;\n    ;\n    function wrap4(value, low, high) { return __.makeVector((0, std_math_1.wrap)(value[0], low, high), (0, std_math_1.wrap)(value[1], low, high), (0, std_math_1.wrap)(value[2], low, high), (0, std_math_1.wrap)(value[3], low, high)); }\n    exports.wrap4 = wrap4;\n    ;\n});\n"}],"emitSkipped":false,"diagnostics":[]},"/_std/sdf.ts":{"outputFiles":[{"name":"/_std/sdf.js","writeByteOrderMark":false,"text":"var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\ndefine([\"require\", \"exports\", \"/std_math\", \"/std_math\", \"/std___std_all\"], function (require, exports, __, std_math_1, std___std_all_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.sdf = void 0;\n    __ = __importStar(__);\n    var globalVarGet = std___std_all_1.globalVarGet;\n    var sdf = /** @class */ (function () {\n        function sdf(data) {\n        }\n        sdf.sphere = function (samplePosition, sphereCenter, radius) {\n            var _a, _b;\n            var p = (_a = samplePosition, _b = sphereCenter, [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]);\n            var r = radius;\n            return (0, std_math_1.length)(p) - r;\n        };\n        sdf.box = function (samplePosition, boxCenter, boxSize) {\n            var _a, _b, _c, _d, _e;\n            var p = (_a = samplePosition, _b = boxCenter, [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]);\n            var s = boxSize;\n            var q = (_c = (_e = p, [Math.abs(_e[0]), Math.abs(_e[1]), Math.abs(_e[2])]), _d = s, [_c[0] - _d[0], _c[1] - _d[1], _c[2] - _d[2]]);\n            return (0, std_math_1.length)((0, std_math_1.max)(q, 0.0)) + (0, std_math_1.min)((0, std_math_1.max)(q[0], (0, std_math_1.max)(q[1], q[2])), 0.0);\n        };\n        sdf.roundBox = function (samplePosition, boxCenter, boxSize, cornerRadius) {\n            var _a, _b, _c, _d, _e;\n            var p = (_a = samplePosition, _b = boxCenter, [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]);\n            var s = boxSize;\n            var r = cornerRadius;\n            var q = (_c = (_e = p, [Math.abs(_e[0]), Math.abs(_e[1]), Math.abs(_e[2])]), _d = s, [_c[0] - _d[0], _c[1] - _d[1], _c[2] - _d[2]]);\n            return (0, std_math_1.length)((0, std_math_1.max)(q, 0.0)) + (0, std_math_1.min)((0, std_math_1.max)(q[0], (0, std_math_1.max)(q[1], q[2])), 0.0) - r;\n        };\n        sdf.boxFrame = function (samplePosition, boxCenter, boxSize, frameThickness) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n            var p = (_a = samplePosition, _b = boxCenter, [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]);\n            var b = boxSize;\n            var e = frameThickness;\n            p = (_c = (_e = p, [Math.abs(_e[0]), Math.abs(_e[1]), Math.abs(_e[2])]), _d = b, [_c[0] - _d[0], _c[1] - _d[1], _c[2] - _d[2]]);\n            var q = (_f = (_h = (_j = p, _k = e, [_j[0] + _k, _j[1] + _k, _j[2] + _k]), [Math.abs(_h[0]), Math.abs(_h[1]), Math.abs(_h[2])]), _g = e, [_f[0] - _g, _f[1] - _g, _f[2] - _g]);\n            return (0, std_math_1.min)((0, std_math_1.min)((0, std_math_1.length)((0, std_math_1.max)(__.FM.float_3_1_1_1(__.swizzle(p, 'x'), __.swizzle(q, 'y'), __.swizzle(q, 'z')), 0.0)) + (0, std_math_1.min)((0, std_math_1.max)(p[0], (0, std_math_1.max)(q[1], q[2])), 0.0), (0, std_math_1.length)((0, std_math_1.max)(__.FM.float_3_1_1_1(__.swizzle(q, 'x'), __.swizzle(p, 'y'), __.swizzle(q, 'z')), 0.0)) + (0, std_math_1.min)((0, std_math_1.max)(q[0], (0, std_math_1.max)(p[1], q[2])), 0.0)), (0, std_math_1.length)((0, std_math_1.max)(__.FM.float_3_1_1_1(__.swizzle(q, 'x'), __.swizzle(q, 'y'), __.swizzle(p, 'z')), 0.0)) + (0, std_math_1.min)((0, std_math_1.max)(q[0], (0, std_math_1.max)(q[1], p[2])), 0.0));\n        };\n        sdf.torus = function (samplePosition, torusCenter, torusSize) {\n            var _a, _b, _c;\n            var p = (_a = samplePosition, _b = torusCenter, [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]);\n            var t = torusSize;\n            var q = __.FM.float_2_1_1(__.sub((0, std_math_1.length)((_c = p, [_c[0], _c[2]])), t[0]), __.swizzle(p, 'y'));\n            return (0, std_math_1.length)(q) - t[1];\n        };\n        sdf.cappedTorus = function (samplePosition, torusCenter, torusSize, ra, rb) {\n            var _a, _b, _c, _d, _e;\n            var p1 = (_a = samplePosition, _b = torusCenter, [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]);\n            var p = __.makeVector(Math.abs(p1[0]), (_c = p1, [_c[1], _c[2]]));\n            var sc = torusSize;\n            var k = (sc[1] * p[0] > sc[0] * p[1]) ? (0, std_math_1.dot)((_d = p, [_d[0], _d[1]]), sc) : (0, std_math_1.length)((_e = p, [_e[0], _e[1]]));\n            return Math.sqrt((0, std_math_1.dot)(p, p) + ra * ra - 2.0 * ra * k) - rb;\n        };\n        sdf.link = function (samplePosition, linkCenter, linkLength, r1, r2) {\n            var _a, _b, _c;\n            var p = (_a = samplePosition, _b = linkCenter, [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]);\n            var le = linkLength;\n            var q = __.FM.float_3_1_1_1(__.swizzle(p, 'x'), (0, std_math_1.max)(Math.abs(p[1]) - le, 0.0), __.swizzle(p, 'z'));\n            return (0, std_math_1.length)(__.FM.float_2_1_1(__.sub((0, std_math_1.length)((_c = q, [_c[0], _c[1]])), r1), __.swizzle(q, 'z'))) - r2;\n        };\n        sdf.infinteCylinder = function (samplePosition, cylinderCenter, cylinderSize) {\n            var _a, _b, _c, _d, _e, _f;\n            var p = (_a = samplePosition, _b = cylinderCenter, [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]);\n            var c = cylinderSize;\n            return (0, std_math_1.length)((_c = (_e = p, [_e[0], _e[2]]), _d = (_f = c, [_f[0], _f[1]]), [_c[0] - _d[0], _c[1] - _d[1]])) - c[2];\n        };\n        sdf.cone = function (samplePosition, coneCenter, c, coneHeight) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n            var p = (_a = samplePosition, _b = coneCenter, [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]);\n            var h = coneHeight;\n            // c is the sin/cos of the angle, h is height\n            // Alternatively pass q instead of (c,h),\n            // which is the point at the base in 2D\n            var q = (_c = h, _d = __.FM.float_2_1_1(__.div(c[0], c[1]), __.negate(1.0)), [_c * _d[0], _c * _d[1]]);\n            var w = __.FM.float_2_1_1((0, std_math_1.length)((_e = p, [_e[0], _e[2]])), __.swizzle(p, 'y'));\n            var a = (_f = w, _g = (_h = q, _j = (0, std_math_1.clamp)((0, std_math_1.dot)(w, q) / (0, std_math_1.dot)(q, q), 0.0, 1.0), [_h[0] * _j, _h[1] * _j]), [_f[0] - _g[0], _f[1] - _g[1]]);\n            var b = (_k = w, _l = (_m = q, _o = __.FM.float_2_1_1((0, std_math_1.clamp)(w[0] / q[0], 0.0, 1.0), __.float(1.0)), [_m[0] * _o[0], _m[1] * _o[1]]), [_k[0] - _l[0], _k[1] - _l[1]]);\n            var k = Math.sign(q[1]);\n            var d = (0, std_math_1.min)((0, std_math_1.dot)(a, a), (0, std_math_1.dot)(b, b));\n            var s = (0, std_math_1.max)(k * (w[0] * q[1] - w[1] * q[0]), k * (w[1] - q[1]));\n            return Math.sqrt(d) * Math.sign(s);\n        };\n        sdf.plane = function (samplePosition, planeCenter, planeNormal, planeHeight) {\n            var _a, _b;\n            var p = (_a = samplePosition, _b = planeCenter, [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]);\n            var n = planeNormal;\n            var h = planeHeight;\n            // n must be normalized\n            return (0, std_math_1.dot)(p, n) + h;\n        };\n        sdf.hexPrism = function (samplePosition, hexCenter, hexSize) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n            var p = (_a = samplePosition, _b = hexCenter, [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]);\n            var h = hexSize;\n            var k = __.FM.float_3_1_1_1(__.negate(0.8660254), __.float(0.5), __.float(0.57735));\n            p = (_c = p, [Math.abs(_c[0]), Math.abs(_c[1]), Math.abs(_c[2])]);\n            var dddd = (0, std_math_1.min)((0, std_math_1.dot)((_d = k, [_d[0], _d[1]]), (_e = p, [_e[0], _e[1]])), 0.0) * 2.0;\n            p = (_f = p, _g = __.FM.float_3_2_1(__.mul(dddd, (_h = k, [_h[0], _h[1]])), __.float(0.0)), [_f[0] - _g[0], _f[1] - _g[1], _f[2] - _g[2]]);\n            var d = __.FM.float_2_1_1(__.mul((0, std_math_1.length)((_j = (_l = p, [_l[0], _l[1]]), _k = __.FM.float_2_1_1((0, std_math_1.clamp)(p[0], (__.FM.negate_1(k[2])) * h[0], k[2] * h[0]), __.swizzle(h, 'x')), [_j[0] - _k[0], _j[1] - _k[1]])), Math.sign(p[1] - h[0])), __.sub(p[2], h[1]));\n            return (0, std_math_1.min)((0, std_math_1.max)(d[0], d[1]), 0.0) + (0, std_math_1.length)((0, std_math_1.max)(d, 0.0));\n        };\n        sdf.triPrism = function (samplePosition, triCenter, triSize) {\n            var _a, _b, _c;\n            var p = (_a = samplePosition, _b = triCenter, [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]);\n            var h = triSize;\n            var q = (_c = p, [Math.abs(_c[0]), Math.abs(_c[1]), Math.abs(_c[2])]);\n            return (0, std_math_1.max)(q[2] - h[1], (0, std_math_1.max)(q[0] * 0.866025 + p[1] * 0.5, (__.FM.negate_1(p[1]))) - h[0] * 0.5);\n        };\n        sdf.capsuleLine = function (samplePosition, lineStart, lineEnd, capsuleRadius) {\n            var _a, _b, _c, _d, _e, _f, _g, _h;\n            var p = samplePosition;\n            var a = lineStart;\n            var b = lineEnd;\n            var r = capsuleRadius;\n            var pa = (_a = p, _b = a, [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]);\n            var ba = (_c = b, _d = a, [_c[0] - _d[0], _c[1] - _d[1], _c[2] - _d[2]]);\n            var h = (0, std_math_1.clamp)((0, std_math_1.dot)(pa, ba) / (0, std_math_1.dot)(ba, ba), 0.0, 1.0);\n            return (0, std_math_1.length)((_e = pa, _f = (_g = ba, _h = h, [_g[0] * _h, _g[1] * _h, _g[2] * _h]), [_e[0] - _f[0], _e[1] - _f[1], _e[2] - _f[2]])) - r;\n        };\n        sdf.capsule = function (samplePosition, capsuleCenter, height, radius) {\n            var _a, _b;\n            var p1 = (_a = samplePosition, _b = capsuleCenter, [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]);\n            var h = height;\n            var r = radius;\n            var p = __.makeVector(p1[0], p1[1] - (0, std_math_1.clamp)(p1[1], 0.0, h), p1[2]);\n            return (0, std_math_1.length)(p) - r;\n        };\n        sdf.cylinder = function (samplePosition, cylinderCenter, height, radius) {\n            var _a, _b, _c, _d, _e, _f;\n            var p = (_a = samplePosition, _b = cylinderCenter, [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]);\n            var h = height;\n            var r = radius;\n            var d = (_c = (_e = __.FM.float_2_1_1((0, std_math_1.length)((_f = p, [_f[0], _f[2]])), __.swizzle(p, 'y')), [Math.abs(_e[0]), Math.abs(_e[1])]), _d = __.FM.float_2_1_1(r, h), [_c[0] - _d[0], _c[1] - _d[1]]);\n            return (0, std_math_1.min)((0, std_math_1.max)(d[0], d[1]), 0.0) + (0, std_math_1.length)((0, std_math_1.max)(d, 0.0));\n        };\n        sdf.cylinderLine = function (samplePosition, lineStart, lineEnd, radius) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n            var p = samplePosition;\n            var a = lineStart;\n            var b = lineEnd;\n            var r = radius;\n            var ba = (_a = b, _b = a, [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]);\n            var pa = (_c = p, _d = a, [_c[0] - _d[0], _c[1] - _d[1], _c[2] - _d[2]]);\n            var baba = (0, std_math_1.dot)(ba, ba);\n            var paba = (0, std_math_1.dot)(pa, ba);\n            var x = (0, std_math_1.length)((_e = (_g = pa, _h = baba, [_g[0] * _h, _g[1] * _h, _g[2] * _h]), _f = (_j = ba, _k = paba, [_j[0] * _k, _j[1] * _k, _j[2] * _k]), [_e[0] - _f[0], _e[1] - _f[1], _e[2] - _f[2]])) - r * baba;\n            var y = Math.abs(paba - baba * 0.5) - baba * 0.5;\n            var x2 = x * x;\n            var y2 = y * y * baba;\n            var mxxy = (0, std_math_1.max)(x, y);\n            var d = (mxxy < 0.0) ? (__.FM.negate_1((0, std_math_1.min)(x2, y2))) : (((x > 0.0) ? x2 : 0.0) + ((y > 0.0) ? y2 : 0.0));\n            return Math.sign(d) * Math.sqrt(Math.abs(d)) / baba;\n        };\n        sdf.roundedCylinder = function (samplePosition, cylinderCenter, cylinderRadius, cornerRadius, height) {\n            var _a, _b, _c;\n            var p = (_a = samplePosition, _b = cylinderCenter, [_a[0] - _b, _a[1] - _b, _a[2] - _b]);\n            var h = height;\n            var ra = cylinderRadius;\n            var rb = cornerRadius;\n            var d = __.FM.float_2_1_1(__.add((0, std_math_1.length)((_c = p, [_c[0], _c[2]])) - 2.0 * ra, rb), __.sub(Math.abs(p[1]), h));\n            return (0, std_math_1.min)((0, std_math_1.max)(d[0], d[1]), 0.0) + (0, std_math_1.length)((0, std_math_1.max)(d, 0.0)) - rb;\n        };\n        sdf.cappedCone = function (samplePosition, coneCenter, height, r1, r2) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n            var p = (_a = samplePosition, _b = coneCenter, [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]);\n            var h = height;\n            var q = __.FM.float_2_1_1((0, std_math_1.length)((_c = p, [_c[0], _c[2]])), __.swizzle(p, 'y'));\n            var k1 = __.FM.float_2_1_1(r2, h);\n            var k2 = __.FM.float_2_1_1(__.sub(r2, r1), __.mul(2.0, h));\n            var ca = __.FM.float_2_1_1(__.sub(q[0], (0, std_math_1.min)(q[0], (q[1] < 0.0) ? r1 : r2)), __.sub(Math.abs(q[1]), h));\n            var cb = (_d = (_f = q, _g = k1, [_f[0] - _g[0], _f[1] - _g[1]]), _e = (_h = k2, _j = (0, std_math_1.clamp)((0, std_math_1.dot)((_k = k1, _l = q, [_k[0] - _l[0], _k[1] - _l[1]]), k2) / dot2(k2), 0.0, 1.0), [_h[0] * _j, _h[1] * _j]), [_d[0] + _e[0], _d[1] + _e[1]]);\n            var s = (__.and(cb[0] < 0.0, ca[1] < 0.0)) ? (__.FM.negate_1(1.0)) : 1.0;\n            return s * Math.sqrt((0, std_math_1.min)(dot2(ca), dot2(cb)));\n        };\n        sdf.solidAngle = function (samplePosition, solidCenter, size, radius) {\n            var _a, _b, _c, _d, _e, _f, _g;\n            var p = (_a = samplePosition, _b = solidCenter, [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]);\n            var c = size;\n            var ra = radius;\n            // c is the sin/cos of the angle\n            var q = __.FM.float_2_1_1((0, std_math_1.length)((_c = p, [_c[0], _c[2]])), __.swizzle(p, 'y'));\n            var l = (0, std_math_1.length)(q) - ra;\n            var m = (0, std_math_1.length)((_d = q, _e = (_f = c, _g = (0, std_math_1.clamp)((0, std_math_1.dot)(q, c), 0.0, ra), [_f[0] * _g, _f[1] * _g]), [_d[0] - _e[0], _d[1] - _e[1]]));\n            return (0, std_math_1.max)(l, m * Math.sign(c[1] * q[0] - c[0] * q[1]));\n        };\n        sdf.cutSphere = function (samplePosition, sphereCenter, radius, height) {\n            var _a, _b, _c, _d, _e;\n            var p = (_a = samplePosition, _b = sphereCenter, [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]);\n            var h = height;\n            var r = radius;\n            // sampling independent computations (only depend on shape)\n            var w = Math.sqrt(r * r - h * h);\n            // sampling dependant computations\n            var q = __.FM.float_2_1_1((0, std_math_1.length)((_c = p, [_c[0], _c[2]])), __.swizzle(p, 'y'));\n            var s = (0, std_math_1.max)((h - r) * q[0] * q[0] + w * w * (h + r - 2.0 * q[1]), h * q[0] - w * q[1]);\n            return (s < 0.0) ? (0, std_math_1.length)(q) - r : (q[0] < w) ? h - q[1] : (0, std_math_1.length)((_d = q, _e = __.FM.float_2_1_1(w, h), [_d[0] - _e[0], _d[1] - _e[1]]));\n        };\n        sdf.cutHollowSphere = function (samplePosition, sphereCenter, radius, height, thickness) {\n            var _a, _b, _c, _d, _e;\n            var p = (_a = samplePosition, _b = sphereCenter, [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]);\n            var r = radius;\n            var h = height;\n            var t = thickness;\n            // sampling independent computations (only depend on shape)\n            var w = Math.sqrt(r * r - h * h);\n            // sampling dependant computations\n            var q = __.FM.float_2_1_1((0, std_math_1.length)((_c = p, [_c[0], _c[2]])), __.swizzle(p, 'y'));\n            return ((h * q[0] < w * q[1]) ? (0, std_math_1.length)((_d = q, _e = __.FM.float_2_1_1(w, h), [_d[0] - _e[0], _d[1] - _e[1]])) : Math.abs((0, std_math_1.length)(q) - r)) - t;\n        };\n        sdf.roundCone = function (samplePosition, coneCenter, coneRadius, cornerRadius, height) {\n            var _a, _b, _c, _d, _e;\n            var p = (_a = samplePosition, _b = coneCenter, [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]);\n            var h = height;\n            var r1 = coneRadius;\n            var r2 = cornerRadius;\n            // sampling independent computations (only depend on shape)\n            var b = (r1 - r2) / h;\n            var a = Math.sqrt(1.0 - b * b);\n            // sampling dependant computations\n            var q = __.FM.float_2_1_1((0, std_math_1.length)((_c = p, [_c[0], _c[2]])), __.swizzle(p, 'y'));\n            var k = (0, std_math_1.dot)(q, __.FM.float_2_1_1(__.negate(b), a));\n            if (k < 0.0)\n                return (0, std_math_1.length)(q) - r1;\n            if (k > a * h)\n                return (0, std_math_1.length)((_d = q, _e = __.FM.float_2_1_1(__.float(0.0), h), [_d[0] - _e[0], _d[1] - _e[1]])) - r2;\n            return (0, std_math_1.dot)(q, __.FM.float_2_1_1(a, b)) - r1;\n        };\n        sdf.ellipsoid = function (samplePosition, center, radius) {\n            var _a, _b, _c, _d, _e, _f, _g, _h;\n            var p = (_a = samplePosition, _b = center, [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]);\n            var r = radius;\n            var k0 = (0, std_math_1.length)((_c = p, _d = r, [_c[0] / _d[0], _c[1] / _d[1], _c[2] / _d[2]]));\n            var k1 = (0, std_math_1.length)((_e = p, _f = (_g = r, _h = r, [_g[0] * _h[0], _g[1] * _h[1], _g[2] * _h[2]]), [_e[0] / _f[0], _e[1] / _f[1], _e[2] / _f[2]]));\n            return k0 * (k0 - 1.0) / k1;\n        };\n        sdf.rhombus = function (samplePosition, rhombusCenter, la, lb, height, ra) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\n            var p = (_a = samplePosition, _b = rhombusCenter, [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]);\n            var h = height;\n            p = (_c = p, [Math.abs(_c[0]), Math.abs(_c[1]), Math.abs(_c[2])]);\n            var b = __.FM.float_2_1_1(la, lb);\n            var f = (0, std_math_1.clamp)((ndot(b, (_d = b, _e = (_f = 2.0, _g = (_h = p, [_h[0], _h[2]]), [_f * _g[0], _f * _g[1]]), [_d[0] - _e[0], _d[1] - _e[1]]))) / (0, std_math_1.dot)(b, b), (__.FM.negate_1(1.0)), 1.0);\n            var q = __.FM.float_2_1_1(__.sub((0, std_math_1.length)((_j = (_l = p, [_l[0], _l[2]]), _k = (_m = (_p = 0.5, _q = b, [_p * _q[0], _p * _q[1]]), _o = __.FM.float_2_1_1(__.sub(1.0, f), __.add(1.0, f)), [_m[0] * _o[0], _m[1] * _o[1]]), [_j[0] - _k[0], _j[1] - _k[1]])) * Math.sign(p[0] * b[1] + p[2] * b[0] - b[0] * b[1]), ra), __.sub(p[1], h));\n            return (0, std_math_1.min)((0, std_math_1.max)(q[0], q[1]), 0.0) + (0, std_math_1.length)((0, std_math_1.max)(q, 0.0));\n        };\n        sdf.octahedron = function (samplePosition, center, size) {\n            var _a, _b, _c, _d, _e, _f, _g;\n            var p = (_a = samplePosition, _b = center, [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]);\n            var s = size;\n            p = (_c = p, [Math.abs(_c[0]), Math.abs(_c[1]), Math.abs(_c[2])]);\n            var m = p[0] + p[1] + p[2] - s;\n            var q = (_d = 0.0, [_d, _d, _d]);\n            if (3.0 * p[0] < m)\n                q = (_e = p, [_e[0], _e[1], _e[2]]);\n            else if (3.0 * p[1] < m)\n                q = (_f = p, [_f[1], _f[2], _f[0]]);\n            else if (3.0 * p[2] < m)\n                q = (_g = p, [_g[2], _g[0], _g[1]]);\n            else\n                return m * 0.57735027;\n            var k = (0, std_math_1.clamp)(0.5 * (q[2] - q[1] + s), 0.0, s);\n            return (0, std_math_1.length)(__.FM.float_3_1_1_1(__.swizzle(q, 'x'), __.add(q[1] - s, k), __.sub(q[2], k)));\n        };\n        sdf.pyramid = function (samplePosition, pyramidCenter, height) {\n            var _a, _b;\n            var p1 = (_a = samplePosition, _b = pyramidCenter, [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]);\n            var h = height;\n            var m2 = h * h + 0.25;\n            var p2 = __.makeVector(Math.abs(p1[0]), p1[1], Math.abs(p1[2]));\n            if (p1[2] > p1[0]) {\n                p2 = __.makeVector(p2[2], p2[1], p2[0]);\n            }\n            p2 = __.makeVector(p2[0] - 0.5, p2[1], p2[2] - 0.5);\n            var p = p2;\n            var q = __.FM.float_3_1_1_1(__.swizzle(p, 'z'), __.sub(h * p[1], 0.5 * p[0]), __.add(h * p[0], 0.5 * p[1]));\n            var s = (0, std_math_1.max)((__.FM.negate_1(q[0])), 0.0);\n            var t = (0, std_math_1.clamp)((q[1] - 0.5 * p[2]) / (m2 + 0.25), 0.0, 1.0);\n            var a = m2 * (q[0] + s) * (q[0] + s) + q[1] * q[1];\n            var b = m2 * (q[0] + 0.5 * t) * (q[0] + 0.5 * t) + (q[1] - m2 * t) * (q[1] - m2 * t);\n            var d2 = (0, std_math_1.min)(q[1], (__.FM.negate_1(q[0])) * m2 - q[1] * 0.5) > 0.0 ? 0.0 : (0, std_math_1.min)(a, b);\n            return Math.sqrt((d2 + q[2] * q[2]) / m2) * Math.sign((0, std_math_1.max)(q[2], (__.FM.negate_1(p[1]))));\n        };\n        sdf.udTriangle = function (samplePosition, a, b, c) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z;\n            var p = samplePosition;\n            var ba = (_a = b, _b = a, [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]);\n            var pa = (_c = p, _d = a, [_c[0] - _d[0], _c[1] - _d[1], _c[2] - _d[2]]);\n            var cb = (_e = c, _f = b, [_e[0] - _f[0], _e[1] - _f[1], _e[2] - _f[2]]);\n            var pb = (_g = p, _h = b, [_g[0] - _h[0], _g[1] - _h[1], _g[2] - _h[2]]);\n            var ac = (_j = a, _k = c, [_j[0] - _k[0], _j[1] - _k[1], _j[2] - _k[2]]);\n            var pc = (_l = p, _m = c, [_l[0] - _m[0], _l[1] - _m[1], _l[2] - _m[2]]);\n            var nor = (0, std_math_1.cross)(ba, ac);\n            return Math.sqrt((Math.sign((0, std_math_1.dot)((0, std_math_1.cross)(ba, nor), pa)) + Math.sign((0, std_math_1.dot)((0, std_math_1.cross)(cb, nor), pb)) + Math.sign((0, std_math_1.dot)((0, std_math_1.cross)(ac, nor), pc)) < 2.0) ? (0, std_math_1.min)((0, std_math_1.min)(dot3((_o = (_q = ba, _r = (0, std_math_1.clamp)((0, std_math_1.dot)(ba, pa) / dot3(ba), 0.0, 1.0), [_q[0] * _r, _q[1] * _r, _q[2] * _r]), _p = pa, [_o[0] - _p[0], _o[1] - _p[1], _o[2] - _p[2]])), dot3((_s = (_u = cb, _v = (0, std_math_1.clamp)((0, std_math_1.dot)(cb, pb) / dot3(cb), 0.0, 1.0), [_u[0] * _v, _u[1] * _v, _u[2] * _v]), _t = pb, [_s[0] - _t[0], _s[1] - _t[1], _s[2] - _t[2]]))), dot3((_w = (_y = ac, _z = (0, std_math_1.clamp)((0, std_math_1.dot)(ac, pc) / dot3(ac), 0.0, 1.0), [_y[0] * _z, _y[1] * _z, _y[2] * _z]), _x = pc, [_w[0] - _x[0], _w[1] - _x[1], _w[2] - _x[2]]))) : (0, std_math_1.dot)(nor, pa) * (0, std_math_1.dot)(nor, pa) / dot3(nor));\n        };\n        sdf.udQuad = function (samplePosition, a, b, c, d) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7;\n            var p = samplePosition;\n            var ba = (_a = b, _b = a, [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]]);\n            var pa = (_c = p, _d = a, [_c[0] - _d[0], _c[1] - _d[1], _c[2] - _d[2]]);\n            var cb = (_e = c, _f = b, [_e[0] - _f[0], _e[1] - _f[1], _e[2] - _f[2]]);\n            var pb = (_g = p, _h = b, [_g[0] - _h[0], _g[1] - _h[1], _g[2] - _h[2]]);\n            var dc = (_j = d, _k = c, [_j[0] - _k[0], _j[1] - _k[1], _j[2] - _k[2]]);\n            var pc = (_l = p, _m = c, [_l[0] - _m[0], _l[1] - _m[1], _l[2] - _m[2]]);\n            var ad = (_o = a, _p = d, [_o[0] - _p[0], _o[1] - _p[1], _o[2] - _p[2]]);\n            var pd = (_q = p, _r = d, [_q[0] - _r[0], _q[1] - _r[1], _q[2] - _r[2]]);\n            var nor = (0, std_math_1.cross)(ba, ad);\n            return Math.sqrt((Math.sign((0, std_math_1.dot)((0, std_math_1.cross)(ba, nor), pa)) + Math.sign((0, std_math_1.dot)((0, std_math_1.cross)(cb, nor), pb)) + Math.sign((0, std_math_1.dot)((0, std_math_1.cross)(dc, nor), pc)) + Math.sign((0, std_math_1.dot)((0, std_math_1.cross)(ad, nor), pd)) < 3.0) ? (0, std_math_1.min)((0, std_math_1.min)((0, std_math_1.min)(dot3((_s = (_u = ba, _v = (0, std_math_1.clamp)((0, std_math_1.dot)(ba, pa) / dot3(ba), 0.0, 1.0), [_u[0] * _v, _u[1] * _v, _u[2] * _v]), _t = pa, [_s[0] - _t[0], _s[1] - _t[1], _s[2] - _t[2]])), dot3((_w = (_y = cb, _z = (0, std_math_1.clamp)((0, std_math_1.dot)(cb, pb) / dot3(cb), 0.0, 1.0), [_y[0] * _z, _y[1] * _z, _y[2] * _z]), _x = pb, [_w[0] - _x[0], _w[1] - _x[1], _w[2] - _x[2]]))), dot3((_0 = (_2 = dc, _3 = (0, std_math_1.clamp)((0, std_math_1.dot)(dc, pc) / dot3(dc), 0.0, 1.0), [_2[0] * _3, _2[1] * _3, _2[2] * _3]), _1 = pc, [_0[0] - _1[0], _0[1] - _1[1], _0[2] - _1[2]]))), dot3((_4 = (_6 = ad, _7 = (0, std_math_1.clamp)((0, std_math_1.dot)(ad, pd) / dot3(ad), 0.0, 1.0), [_6[0] * _7, _6[1] * _7, _6[2] * _7]), _5 = pd, [_4[0] - _5[0], _4[1] - _5[1], _4[2] - _5[2]]))) : (0, std_math_1.dot)(nor, pa) * (0, std_math_1.dot)(nor, pa) / dot3(nor));\n        };\n        /**\n            * Returns the intersection of two SDFs\n            * = max(a, b)\n            */\n        sdf.intersect = function (a, b) { return (0, std_math_1.max)(a, b); };\n        /**\n            * Returns the union of two SDFs\n            * = min(a, b)\n            */\n        sdf.union = function (a, b) { return (0, std_math_1.min)(a, b); };\n        sdf.subtract = function (a, b) { return (0, std_math_1.max)((__.FM.negate_1(a)), b); };\n        sdf.smoothIntersect = function (a, b, k) {\n            var h = (0, std_math_1.clamp)(0.5 + 0.5 * (b - a) / k, 0.0, 1.0);\n            return (0, std_math_1.lerp)(b, a, h) - k * h * (1.0 - h);\n        };\n        /**\n            * Smoothly joins two SDFs using blending distance k\n            */\n        sdf.smoothUnion = function (a, b, k) {\n            var d1 = a;\n            var d2 = b;\n            var h = (0, std_math_1.clamp)(0.5 + 0.5 * (d2 - d1) / k, 0.0, 1.0);\n            return (0, std_math_1.lerp)(d2, d1, h) - k * h * (1.0 - h);\n        };\n        sdf.smoothSubtract = function (a, b, k) {\n            var d1 = a;\n            var d2 = b;\n            var h = (0, std_math_1.clamp)(0.5 - 0.5 * (d2 + d1) / k, 0.0, 1.0);\n            return (0, std_math_1.lerp)(d2, (__.FM.negate_1(d1)), h) + k * h * (1.0 - h);\n        };\n        /**\n            * Blends between two SDFs using interpolation\n            */\n        sdf.blend = function (a, b, t) { return t * a + ((1 | 0) - t) * b; };\n        sdf.round = function (a, r) { return a - r; };\n        /**\n            * Carve out the interior of an SDF\n            */\n        sdf.onion = function (a, thickness) { return Math.abs(a) - thickness; };\n        sdf.grad = function (p, sampler) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n            var DELTA = 0.0001;\n            return _a = __.FM.float_3_1_1_1(__.sub(sampler((_c = p, _d = __.FM.float_3_1_1_1(DELTA, __.float(0.0), __.float(0.0)), [_c[0] + _d[0], _c[1] + _d[1], _c[2] + _d[2]])), sampler((_e = p, _f = __.FM.float_3_1_1_1(DELTA, __.float(0.0), __.float(0.0)), [_e[0] - _f[0], _e[1] - _f[1], _e[2] - _f[2]]))), __.sub(sampler((_g = p, _h = __.FM.float_3_1_1_1(__.float(0.0), DELTA, __.float(0.0)), [_g[0] + _h[0], _g[1] + _h[1], _g[2] + _h[2]])), sampler((_j = p, _k = __.FM.float_3_1_1_1(__.float(0.0), DELTA, __.float(0.0)), [_j[0] - _k[0], _j[1] - _k[1], _j[2] - _k[2]]))), __.sub(sampler((_l = p, _m = __.FM.float_3_1_1_1(__.float(0.0), __.float(0.0), DELTA), [_l[0] + _m[0], _l[1] + _m[1], _l[2] + _m[2]])), sampler((_o = p, _p = __.FM.float_3_1_1_1(__.float(0.0), __.float(0.0), DELTA), [_o[0] - _p[0], _o[1] - _p[1], _o[2] - _p[2]])))), _b = (2.0 * DELTA), [_a[0] / _b, _a[1] / _b, _a[2] / _b];\n        };\n        /**\n            * Poorly returns the closest point on the surface of an SDF\n            * This is an inaccurate method\n            */\n        sdf.closest = function (position, sampler) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y;\n            var sep = 0.0001;\n            var zero = ((0, std_math_1.min)(env.frame, (0 | 0)) | 0);\n            var closest = position;\n            var initialDist = sampler(position);\n            var seed = (0 | 0);\n            for (var j = (0 | 0); j < (200 | 0); j++) {\n                var n = (_a = 0.0, [_a, _a, _a]);\n                var distSum = 0.0;\n                for (var i = zero; i < (4 | 0); i++) {\n                    var e = (_b = 0.5773, _c = (_d = (_f = 2.0, _g = __.FM.float_3_1_1_1((((i + (3 | 0)) >> (1 | 0)) & (1 | 0)), ((i >> (1 | 0)) & (1 | 0)), (i & (1 | 0))), [_f * _g[0], _f * _g[1], _f * _g[2]]), _e = 1.0, [_d[0] - _e, _d[1] - _e, _d[2] - _e]), [_b * _c[0], _b * _c[1], _b * _c[2]]);\n                    var d = sampler((_h = closest, _j = (_k = e, _l = sep, [_k[0] * _l, _k[1] * _l, _k[2] * _l]), [_h[0] + _j[0], _h[1] + _j[1], _h[2] + _j[2]]));\n                    distSum = distSum + d;\n                    n = (_m = n, _o = (_p = e, _q = d, [_p[0] * _q, _p[1] * _q, _p[2] * _q]), [_m[0] + _o[0], _m[1] + _o[1], _m[2] + _o[2]]);\n                }\n                closest = (_r = (_t = (_v = (_x = (0, std_math_1.normalize)(n), _y = distSum, [_x[0] * _y, _x[1] * _y, _x[2] * _y]), _w = (__.FM.negate_1((1 | 0))), [_v[0] * _w, _v[1] * _w, _v[2] * _w]), _u = 4.0, [_t[0] / _u, _t[1] / _u, _t[2] / _u]), _s = closest, [_r[0] + _s[0], _r[1] + _s[1], _r[2] + _s[2]]);\n                if (distSum < 0.0001) {\n                    break;\n                }\n            }\n            return closest;\n        };\n        sdf.normal = function (position, sampler) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\n            var h = 0.1;\n            var zero = ((0, std_math_1.min)(env.frame, (0 | 0)) | 0);\n            var n = (_a = 0.0, [_a, _a, _a]);\n            var distSum = 0.0;\n            for (var i = zero; i < (4 | 0); i++) {\n                var e = (_b = 0.5773, _c = (_d = (_f = 2.0, _g = __.FM.float_3_1_1_1((((i + (3 | 0)) >> (1 | 0)) & (1 | 0)), ((i >> (1 | 0)) & (1 | 0)), (i & (1 | 0))), [_f * _g[0], _f * _g[1], _f * _g[2]]), _e = 1.0, [_d[0] - _e, _d[1] - _e, _d[2] - _e]), [_b * _c[0], _b * _c[1], _b * _c[2]]);\n                var d = sampler((_h = position, _j = (_k = e, _l = h, [_k[0] * _l, _k[1] * _l, _k[2] * _l]), [_h[0] + _j[0], _h[1] + _j[1], _h[2] + _j[2]]));\n                distSum = distSum + d;\n                n = (_m = n, _o = (_p = e, _q = d, [_p[0] * _q, _p[1] * _q, _p[2] * _q]), [_m[0] + _o[0], _m[1] + _o[1], _m[2] + _o[2]]);\n            }\n            return (0, std_math_1.normalize)(n);\n        };\n        sdf.vizRings = function (d) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n            if (false) {\n                var color_1 = (_a = 1.0, _b = (_c = Math.sign(d), _d = __.FM.float_3_1_1_1(__.float(0.1), __.float(0.4), __.float(0.7)), [_c * _d[0], _c * _d[1], _c * _d[2]]), [_a - _b[0], _a - _b[1], _a - _b[2]]);\n                color_1 = (_e = color_1, _f = 1.0 - Math.exp((__.FM.negate_1(4.0)) * Math.abs(d)), [_e[0] * _f, _e[1] * _f, _e[2] * _f]);\n                color_1 = (_g = color_1, _h = 0.8 + 0.2 * Math.cos(140.0 * d), [_g[0] * _h, _g[1] * _h, _g[2] * _h]);\n                color_1 = (0, std_math_1.lerp)(color_1, (_j = 1.0, [_j, _j, _j]), 1.0 - (0, std_math_1.smoothstep)(0.0, 0.015, Math.abs(d)));\n                return __.makeVector(color_1, 1.0);\n            }\n            else {\n                var size = (2 | 0);\n                var fadeDist = (100 | 0);\n                var v = (1 | 0) - (0, std_math_1.clamp)(d / fadeDist, (0 | 0), (1 | 0));\n                var color_2 = __.makeVector(0.4 * v, 0.6 * v, (1 | 0), (1 | 0));\n                var s = Math.sin(d / size);\n                if (Math.abs(d) < (1 | 0)) {\n                    return __.FM.float_4_4(__.swizzle((1 | 0), \"xyzw\"));\n                }\n                else {\n                    return d > (0 | 0) ? (_k = color_2, _l = Math.ceil((1 | 0) - s), [_k[0] * _l, _k[1] * _l, _k[2] * _l, _k[3] * _l]) : (_m = color_2, _o = Math.ceil(s), [_m[0] * _o, _m[1] * _o, _m[2] * _o, _m[3] * _o]);\n                }\n            }\n        };\n        sdf.march = function (position, direction, sampler) {\n            var _a, _b, _c, _d;\n            var maxDist = 100000.0;\n            var minDist = 1.0;\n            var dist = minDist;\n            for (var i = (0 | 0); __.and(i < (256 | 0), dist < maxDist); i++) {\n                var samp = sampler((_a = position, _b = (_c = direction, _d = dist, [_c[0] * _d, _c[1] * _d, _c[2] * _d]), [_a[0] + _b[0], _a[1] + _b[1], _a[2] + _b[2]]));\n                dist = dist + samp;\n                if (Math.abs(samp) < (0.00005 * dist)) {\n                    break;\n                }\n            }\n            if (dist > maxDist) {\n                dist = (__.FM.negate_1(1.0));\n            }\n            return dist;\n        };\n        /**\n            * See: https://iquilezles.org/articles/distfunctions/\n            * Infinitely repeats an SDF with space in between. This returns an updated position\n            *\n            * Example:\n            * ```shadeup\n            *\tsdf::sphere(sdf::repeat(p, 100.xyz), 0.xyz, 50.0);\n            * ```\n            */\n        sdf.repeat = function (position, space) {\n            var _a, _b, _c, _d, _e, _f, _g;\n            var p = position;\n            var s = space;\n            return _a = p, _b = (_c = s, _d = (_e = (_f = p, _g = s, [_f[0] / _g[0], _f[1] / _g[1], _f[2] / _g[2]]), [Math.round(_e[0]), Math.round(_e[1]), Math.round(_e[2])]), [_c[0] * _d[0], _c[1] * _d[1], _c[2] * _d[2]]), [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]];\n        };\n        /**\n            * See: https://iquilezles.org/articles/distfunctions/\n            * Repeats an SDF with space in between upto the limit. This returns an updated position\n            *\n            * Example:\n            * ```shadeup\n            *\tsdf::sphere(sdf::repeatLimited(p, 100, 10.xyz), 0.xyz, 50.0);\n            * ```\n            */\n        sdf.repeatLimited = function (position, space, limit) {\n            var _a, _b, _c, _d, _e, _f, _g;\n            var p = position;\n            var s = space;\n            return _a = p, _b = (_c = s, _d = (0, std_math_1.clamp)((_e = (_f = p, _g = s, [_f[0] / _g, _f[1] / _g, _f[2] / _g]), [Math.round(_e[0]), Math.round(_e[1]), Math.round(_e[2])]), (__.FM.negate_3(limit)), limit), [_c * _d[0], _c * _d[1], _c * _d[2]]), [_a[0] - _b[0], _a[1] - _b[1], _a[2] - _b[2]];\n        };\n        sdf.prototype.clone = function () {\n            return new sdf({});\n        };\n        sdf.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_sdf_ts_1797_sdf\\\",\\\"fields\\\":[]}\");\n        };\n        return sdf;\n    }());\n    exports.sdf = sdf;\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_sdf_ts_1797_sdf\\\",\\\"fields\\\":[]}\"), sdf)\n    ;\n    function dot2(v) { return (0, std_math_1.dot)(v, v); }\n    function dot3(v) { return (0, std_math_1.dot)(v, v); }\n    function ndot(a, b) { return a[0] * b[0] - a[1] * b[1]; }\n});\n/* impl sdf */\n"}],"emitSkipped":false,"diagnostics":[]},"/_std/geo.ts":{"outputFiles":[{"name":"/_std/geo.js","writeByteOrderMark":false,"text":"var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\ndefine([\"require\", \"exports\", \"/std_math\", \"/std___std_all\"], function (require, exports, __, std___std_all_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    __ = __importStar(__);\n    var globalVarGet = std___std_all_1.globalVarGet;\n    var GeoSegment = /** @class */ (function () {\n        function GeoSegment(data) {\n            var _a, _b, _c, _d, _e, _f;\n            this.start = (_a = data.start) !== null && _a !== void 0 ? _a : __.FM.float_2_1_1(0.0, 0.0);\n            this.end = (_b = data.end) !== null && _b !== void 0 ? _b : __.FM.float_2_1_1(0.0, 0.0);\n            this.kind = (_c = data.kind) !== null && _c !== void 0 ? _c : (0 | 0);\n            this.arcRadius = (_d = data.arcRadius) !== null && _d !== void 0 ? _d : 0.0;\n            this.arcStart = (_e = data.arcStart) !== null && _e !== void 0 ? _e : 0.0;\n            this.arcEnd = (_f = data.arcEnd) !== null && _f !== void 0 ? _f : 0.0;\n        }\n        GeoSegment.prototype.clone = function () {\n            return new GeoSegment({\n                start: (0, std___std_all_1.__deepClone)(this.start),\n                end: (0, std___std_all_1.__deepClone)(this.end),\n                kind: (0, std___std_all_1.__deepClone)(this.kind),\n                arcRadius: (0, std___std_all_1.__deepClone)(this.arcRadius),\n                arcStart: (0, std___std_all_1.__deepClone)(this.arcStart),\n                arcEnd: (0, std___std_all_1.__deepClone)(this.arcEnd),\n            });\n        };\n        GeoSegment.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_geo_ts_1689_GeoSegment\\\",\\\"fields\\\":[[\\\"start\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"end\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"kind\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int\\\"}],[\\\"arcRadius\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"arcStart\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"arcEnd\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}]]}\");\n        };\n        return GeoSegment;\n    }());\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_geo_ts_1689_GeoSegment\\\",\\\"fields\\\":[[\\\"start\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"end\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"kind\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int\\\"}],[\\\"arcRadius\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"arcStart\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"arcEnd\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}]]}\"), GeoSegment)\n    /**@shadeup=struct*/ var GeoPoly = /** @class */ (function () {\n        function GeoPoly(data) {\n            var _a;\n            this.segments = (_a = data.segments) !== null && _a !== void 0 ? _a : [];\n        }\n        GeoPoly.prototype.area = function () { return 0.0; };\n        GeoPoly.prototype.perimeter = function () { return 0.0; };\n        GeoPoly.prototype.discretize = function () { var shader_self_temp = this; return this.clone(); };\n        GeoPoly.prototype.clone = function () {\n            return new GeoPoly({\n                segments: (0, std___std_all_1.__deepClone)(this.segments),\n            });\n        };\n        GeoPoly.prototype._getStructure = function () {\n            return JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_geo_ts_2553_GeoPoly\\\",\\\"fields\\\":[[\\\"segments\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_geo_ts_1689_GeoSegment\\\",\\\"fields\\\":[[\\\"start\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"end\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"kind\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int\\\"}],[\\\"arcRadius\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"arcStart\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"arcEnd\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}]]},\\\"staticSize\\\":1}]]}\");\n        };\n        return GeoPoly;\n    }());\n    __shadeup_register_struct(JSON.parse(\"{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_geo_ts_2553_GeoPoly\\\",\\\"fields\\\":[[\\\"segments\\\",{\\\"type\\\":\\\"array\\\",\\\"element\\\":{\\\"type\\\":\\\"struct\\\",\\\"name\\\":\\\"str_i_iistd_geo_ts_1689_GeoSegment\\\",\\\"fields\\\":[[\\\"start\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"end\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float2\\\"}],[\\\"kind\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"int\\\"}],[\\\"arcRadius\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"arcStart\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}],[\\\"arcEnd\\\",{\\\"type\\\":\\\"primitive\\\",\\\"name\\\":\\\"float\\\"}]]},\\\"staticSize\\\":1}]]}\"), GeoPoly)\n});\n/* impl GeoPoly */\n"}],"emitSkipped":false,"diagnostics":[]}}